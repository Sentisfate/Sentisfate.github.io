<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GIS咖喱棒</title>
    <link>https://Sentisfate.github.io/</link>
    <description>Recent content on GIS咖喱棒</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>1135643799@qq.com (gisculibur)</managingEditor>
    <webMaster>1135643799@qq.com (gisculibur)</webMaster>
    <lastBuildDate>Tue, 25 Jul 2023 07:34:25 +0000</lastBuildDate><atom:link href="https://Sentisfate.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>3dTiles</title>
      <link>https://Sentisfate.github.io/docs/ix726493ddpi6i3q/</link>
      <pubDate>Tue, 25 Jul 2023 07:34:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ix726493ddpi6i3q/</guid>
      <description>八股文 3D Tiles是一种用于高效存储、传输和渲染大规模三维地理数据的开放标准。它是由Cesium开发团队提出的一种数据格式和规范，旨在解决在</description>
    </item>
    
    <item>
      <title>WebGL 图像处理</title>
      <link>https://Sentisfate.github.io/posts/qa4vydlw37pbsi3v/</link>
      <pubDate>Mon, 24 Jul 2023 15:09:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/posts/qa4vydlw37pbsi3v/</guid>
      <description>webgl 通过纹理来操作图像。 渲染图像流程 编写着色器 attribute vec2 a_position; // 接收纹理坐标 attribute vec2 a_texCoord; // 传递顶点纹理坐标，用于插值; varying vec2 v_texCoord; uniform mat3 u_m; void main() { vec3 position=vec3(a_position.x,a_position.y,1.0); vec3 result=u_m*position; gl_Position = vec4(result.x,result.y,0,1); v_texCoord=a_texCoord; } precision mediump</description>
    </item>
    
    <item>
      <title>Cesium 模型压平</title>
      <link>https://Sentisfate.github.io/docs/goz05uyu3i5v92c9/</link>
      <pubDate>Mon, 24 Jul 2023 07:48:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/goz05uyu3i5v92c9/</guid>
      <description>模型压平是什么 在计算机图形学中，模型压平（Model Flattening）通常指的是将复杂的三维模型转化为更简单的形式，以便于渲染和处理。这</description>
    </item>
    
    <item>
      <title>三角剖分</title>
      <link>https://Sentisfate.github.io/docs/cl6l0mww8kkkizwb/</link>
      <pubDate>Mon, 24 Jul 2023 06:19:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cl6l0mww8kkkizwb/</guid>
      <description>问一下gpt，它能轻松告诉你什么是三角剖分 三角剖分是将一个多边形划分为一组不重叠的三角形的过程。三角剖分在计算机图形学和计算几何中有广泛的应</description>
    </item>
    
    <item>
      <title>GIS理论基础</title>
      <link>https://Sentisfate.github.io/docs/prgrgit7lss8vggf/</link>
      <pubDate>Mon, 24 Jul 2023 06:18:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/prgrgit7lss8vggf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>问题</title>
      <link>https://Sentisfate.github.io/docs/vzxnspucb4agb00w/</link>
      <pubDate>Fri, 21 Jul 2023 03:24:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vzxnspucb4agb00w/</guid>
      <description>变量声明问题 function bar(callback) { callback(); return 2; } let oldCache = bar(baz); function baz() { oldCache = 4; } 报错Cannot access &#39;oldCache&#39; before initialization分析下原因：变量是声明的同时进行赋值变量，</description>
    </item>
    
    <item>
      <title>读写文件以及异步读写问题</title>
      <link>https://Sentisfate.github.io/docs/ib0xtlkfcpcourwk/</link>
      <pubDate>Thu, 20 Jul 2023 07:31:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ib0xtlkfcpcourwk/</guid>
      <description>读写文件可以参看这两篇https://dev.nodejs.cn/learn/reading-files-with-nodejs/https</description>
    </item>
    
    <item>
      <title>node.js发送请求</title>
      <link>https://Sentisfate.github.io/docs/wue2e8ak3f032p4i/</link>
      <pubDate>Thu, 20 Jul 2023 01:16:22 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wue2e8ak3f032p4i/</guid>
      <description>https get get方法是一个便捷请求，用于发送get请求，需要注意方法返回一个可读流，而不是请求对象，其在调用时，就已经执行发送请求。 import https from &amp;#39;node:https&amp;#39; const baseUrl =</description>
    </item>
    
    <item>
      <title>使用ESM模块导入导出</title>
      <link>https://Sentisfate.github.io/docs/yhukc626st6vddnl/</link>
      <pubDate>Thu, 20 Jul 2023 01:15:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yhukc626st6vddnl/</guid>
      <description>在node.js中使用ESM模块导入导出，进行如下设置： 将.js文件改位.mjs后缀，即可在该文件使用ESM的方式进行导入导出 import https from &amp;#39;node:https&amp;#39; const baseUrl =</description>
    </item>
    
    <item>
      <title>二维空间变换</title>
      <link>https://Sentisfate.github.io/docs/yszdvhfw5f106wxo/</link>
      <pubDate>Mon, 17 Jul 2023 03:21:27 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yszdvhfw5f106wxo/</guid>
      <description>先来快速画个矩形。 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;canvas id=&amp;#34;glcanvas&amp;#34; width=&amp;#34;840&amp;#34; height=&amp;#34;480&amp;#34;&amp;gt; 你的浏览器似乎不支持或者禁用了 HTML5 &amp;lt;code&amp;gt;&amp;amp;lt;canvas&amp;amp;gt;&amp;lt;/code&amp;gt; 元素。 &amp;lt;/canvas&amp;gt; &amp;lt;script id=&amp;#34;vertex-shader-2d&amp;#34; type=&amp;#34;x-shader/x-vertex&amp;#34;&amp;gt; attribute vec2 a_position; uniform mat3 u_matrix; varying vec4 v_color; void main() { gl_Position = vec4((u_matrix * vec3(a_position,</description>
    </item>
    
    <item>
      <title>计算一个DOM元素的中心点</title>
      <link>https://Sentisfate.github.io/docs/df4gowc920t4wmdq/</link>
      <pubDate>Mon, 17 Jul 2023 02:29:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/df4gowc920t4wmdq/</guid>
      <description>使用getBoundingClientRect 该位置是相对于视口的一个矩形，范围包含边框。利用其可以计算中心点</description>
    </item>
    
    <item>
      <title>帧缓冲</title>
      <link>https://Sentisfate.github.io/docs/ewx2x3unsgnpc1m6/</link>
      <pubDate>Fri, 14 Jul 2023 07:50:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ewx2x3unsgnpc1m6/</guid>
      <description>一个帧缓冲只是一个 attachments 的集合。仅此而已！它是用来允许渲染到纹理或渲染到渲染缓冲中的。 一个帧缓冲对象的伪代码： class Framebuffer { constructor() { this.attachments = new Map(); // 按 attachment point 排列的 attachments</description>
    </item>
    
    <item>
      <title>Excalidraw 本地部署</title>
      <link>https://Sentisfate.github.io/docs/gtkaskkfs14sg2ym/</link>
      <pubDate>Fri, 14 Jul 2023 01:46:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gtkaskkfs14sg2ym/</guid>
      <description>https://excalidraw.com/ 一个非常好用的开源在线画板工具，由于公司防火墙的原因被墙，因此决定本地部署一个。步骤如下： 下载源码，https://gitee.com/m</description>
    </item>
    
    <item>
      <title>ele-tree 筛选节点手写</title>
      <link>https://Sentisfate.github.io/docs/qd4vpkc34ms7c1t7/</link>
      <pubDate>Thu, 13 Jul 2023 09:42:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qd4vpkc34ms7c1t7/</guid>
      <description>watch: { filterText(val) { const root = this.$refs.tree.store.root; for (let child of root.childNodes) { this.dfs(child, val); } }, }, methods: { filterNode(value, data, node) { if (!value) return true; return data.label.includes(value); }, dfs(root, val) { if (!root) { return false; } // 当前节点依据过滤条件的显示状态 let visible = this.filterNode(val, root.data); // 当前节点的展开</description>
    </item>
    
    <item>
      <title>多叉树</title>
      <link>https://Sentisfate.github.io/docs/yoobz9gq3c4l112f/</link>
      <pubDate>Thu, 13 Jul 2023 06:59:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yoobz9gq3c4l112f/</guid>
      <description>DFS 递归实现</description>
    </item>
    
    <item>
      <title>深度优先搜索 DFS</title>
      <link>https://Sentisfate.github.io/docs/barkixavg1zul3qs/</link>
      <pubDate>Thu, 13 Jul 2023 06:53:02 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/barkixavg1zul3qs/</guid>
      <description>DFS 是遍历图存储结构的一种算法，使用于无向图，有向图。</description>
    </item>
    
    <item>
      <title>帧缓冲</title>
      <link>https://Sentisfate.github.io/docs/ggzhucipcg6as0gz/</link>
      <pubDate>Thu, 13 Jul 2023 01:46:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ggzhucipcg6as0gz/</guid>
      <description></description>
    </item>
    
    <item>
      <title>VAO 顶点数组对象</title>
      <link>https://Sentisfate.github.io/docs/suml95inpwqvweh2/</link>
      <pubDate>Tue, 11 Jul 2023 03:33:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/suml95inpwqvweh2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>gl.createXXX</title>
      <link>https://Sentisfate.github.io/docs/azlg6ta3yg15mdgo/</link>
      <pubDate>Tue, 11 Jul 2023 02:18:22 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/azlg6ta3yg15mdgo/</guid>
      <description>在WebGL中，使用gl.create方法创建的一些对象是在GPU中分配的。这些对象包括纹理对象、缓冲对象和着色器对象。纹理对象：使用gl.</description>
    </item>
    
    <item>
      <title>nginx</title>
      <link>https://Sentisfate.github.io/docs/szn3ti3lzx1u7z11/</link>
      <pubDate>Mon, 10 Jul 2023 00:48:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/szn3ti3lzx1u7z11/</guid>
      <description>#user nobody; worker_processes 1; #error_log logs/error.log; #error_log logs/error.log notice; #error_log logs/error.log info; #pid logs/nginx.pid; events { worker_connections 1024; } http { include mime.types; default_type application/octet-stream; #log_format main &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#34;$request&amp;#34; &amp;#39; # &amp;#39;$status $body_bytes_sent &amp;#34;$http_referer&amp;#34; &amp;#39; # &amp;#39;&amp;#34;$http_user_agent&amp;#34; &amp;#34;$http_x_forwarded_for&amp;#34;&amp;#39;; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; #枣庄林长制 server { listen 8022; server_name localhost; server_tokens off; #charset koi8-r;</description>
    </item>
    
    <item>
      <title>文件上传</title>
      <link>https://Sentisfate.github.io/docs/en0rkylr58ns9y67/</link>
      <pubDate>Thu, 06 Jul 2023 07:36:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/en0rkylr58ns9y67/</guid>
      <description></description>
    </item>
    
    <item>
      <title>图像处理</title>
      <link>https://Sentisfate.github.io/docs/nkcflytt029fsnh0/</link>
      <pubDate>Thu, 06 Jul 2023 03:04:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nkcflytt029fsnh0/</guid>
      <description>webgl通过纹理来操作图像。 渲染图像流程 编写着色器 attribute vec2 a_position; // 接收纹理坐标 attribute vec2 a_texCoord; // 传递顶点纹理坐标，用于插值; varying vec2 v_texCoord; uniform mat3 u_m; void main() { vec3 position=vec3(a_position.x,a_position.y,1.0); vec3 result=u_m*position; gl_Position = vec4(result.x,result.y,0,1);</description>
    </item>
    
    <item>
      <title>纹理</title>
      <link>https://Sentisfate.github.io/docs/hoi4g5unhcu8uf5d/</link>
      <pubDate>Thu, 06 Jul 2023 02:11:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hoi4g5unhcu8uf5d/</guid>
      <description>webgl中纹理通常是二维矩阵数据，可以传递给着色器使用，可以像下面这样声明一个均匀采样器。 uniform sampler2D someTexture; 纹理坐标系 ST 纹理也有自己的坐标范围，无论怎</description>
    </item>
    
    <item>
      <title>获取 Primitive(s)的包围球</title>
      <link>https://Sentisfate.github.io/docs/gizkkbh7gupgb624/</link>
      <pubDate>Wed, 05 Jul 2023 14:10:02 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gizkkbh7gupgb624/</guid>
      <description>function getBSFromPrimitive(primitive:Primitive){ if(!primitive.geometryInstances){ return BoundingSphere.fromBoundingSpheres(primitive._boundingSpheres) } let geometryInstances:GeometryInstance[]=[] if(!Array.isArray(primitive.geometryInstances)){ geometryInstances.push(primitive.geometryInstances) }else{ geometryInstances=primitive.geometryInstances } const boundingSpheres=geometryInstances.map((item)=&amp;gt;{ return item.geometry.boundingSphere }) return BoundingSphere.fromBoundingSpheres(boundingSpheres) } function getBSFromPrimitives(primitives:PrimitiveCollection):BoundingSphere{ const bsps=[] for(let i=0;i&amp;lt;primitives.length;i++){ const p=primitives.get(i) if(p instanceof PrimitiveCollection){ bsps.push(getBSFromPrimitives(p)) }else{ bsps.push(getBSFromPrimitive(p)) } } return BoundingSphere.fromBoundingSpheres(bsps) } viewer.camera.flyToBoundingSphere(getBSFromPrimitives(viewer.scene.primitives)) 用primitive绘制图形的时候，有这样一段代码： new Geometry({ attributes:</description>
    </item>
    
    <item>
      <title>着色器精度</title>
      <link>https://Sentisfate.github.io/docs/lgqhq1kg7l3ll1v3/</link>
      <pubDate>Wed, 05 Jul 2023 01:11:17 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lgqhq1kg7l3ll1v3/</guid>
      <description>precision mediump float; 表示float类型的精度，mediump表示32位精度，中等精度。</description>
    </item>
    
    <item>
      <title>属性Attribute变量</title>
      <link>https://Sentisfate.github.io/docs/zq5r25l134hg6izm/</link>
      <pubDate>Tue, 04 Jul 2023 07:47:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zq5r25l134hg6izm/</guid>
      <description>属性的设置流程 以这个顶点着色器为例 attribute vec2 a_position; attribute vec4 a_color; ... 着色器里有两个变量，一个是坐标，一个是颜色。初始化缓冲时，基本做了如下几步： gl.creat</description>
    </item>
    
    <item>
      <title>工作原理</title>
      <link>https://Sentisfate.github.io/docs/ba6kg76p0uqit3ol/</link>
      <pubDate>Tue, 04 Jul 2023 03:44:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ba6kg76p0uqit3ol/</guid>
      <description>webgl在gpu上的工作原理基本分为2部分： 将顶点转换到裁剪空间坐标 基于第一部分的结果绘制像素点 var primitiveType = gl.TRIANGLES; var offset = 0; var count = 9; gl.drawArrays(primitiveType, offset, count); 上面这段代码</description>
    </item>
    
    <item>
      <title>错误记录</title>
      <link>https://Sentisfate.github.io/docs/svtodw7q78u8twpt/</link>
      <pubDate>Tue, 04 Jul 2023 02:46:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/svtodw7q78u8twpt/</guid>
      <description>GL_INVALID_OPERATION: Uniform type does not match uniform method. uniform变量的类型与启用类型的方法不一致。WebGLRenderingContext.uniform[1234][fi</description>
    </item>
    
    <item>
      <title>遍历</title>
      <link>https://Sentisfate.github.io/docs/bkbigt/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bkbigt/</guid>
      <description></description>
    </item>
    
    <item>
      <title>其他</title>
      <link>https://Sentisfate.github.io/docs/yzgvo6/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yzgvo6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>链表相关</title>
      <link>https://Sentisfate.github.io/docs/pgcgv0/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pgcgv0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>动态规划相关</title>
      <link>https://Sentisfate.github.io/docs/iscc9a/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/iscc9a/</guid>
      <description></description>
    </item>
    
    <item>
      <title>贪心相关</title>
      <link>https://Sentisfate.github.io/docs/cigkip/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cigkip/</guid>
      <description></description>
    </item>
    
    <item>
      <title>图相关</title>
      <link>https://Sentisfate.github.io/docs/cgafig/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cgafig/</guid>
      <description></description>
    </item>
    
    <item>
      <title>字符串相关</title>
      <link>https://Sentisfate.github.io/docs/kdzv8f/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kdzv8f/</guid>
      <description></description>
    </item>
    
    <item>
      <title>模拟相关</title>
      <link>https://Sentisfate.github.io/docs/krbrnw/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/krbrnw/</guid>
      <description></description>
    </item>
    
    <item>
      <title>栈相关</title>
      <link>https://Sentisfate.github.io/docs/mx7ukf/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mx7ukf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vue相关</title>
      <link>https://Sentisfate.github.io/docs/syky7w/</link>
      <pubDate>Tue, 04 Jul 2023 01:46:02 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/syky7w/</guid>
      <description></description>
    </item>
    
    <item>
      <title>裁剪空间</title>
      <link>https://Sentisfate.github.io/docs/mwyermq8tmgvfzae/</link>
      <pubDate>Mon, 03 Jul 2023 00:53:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mwyermq8tmgvfzae/</guid>
      <description>裁剪空间是webgl能绘制的范围，-1~1，0在中间，当坐标超出这个范围时，不会显示出范围外的部分，此外，x和y方向的单位长度为canvas</description>
    </item>
    
    <item>
      <title>入门</title>
      <link>https://Sentisfate.github.io/docs/bz6zo38tcq45wv67/</link>
      <pubDate>Sun, 02 Jul 2023 09:27:30 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bz6zo38tcq45wv67/</guid>
      <description>判断一个画面是否足够好的标准，就是看这个画面是否足够亮，涉及到技术上的概念叫做全局光照。 特效是图形学中的一种简单的应用，困难的往往是生活中最</description>
    </item>
    
    <item>
      <title>Linux</title>
      <link>https://Sentisfate.github.io/docs/pba834k6ekaik1rf/</link>
      <pubDate>Thu, 29 Jun 2023 07:47:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pba834k6ekaik1rf/</guid>
      <description>一切皆文件。 常用命令</description>
    </item>
    
    <item>
      <title>线性代数与空间变换</title>
      <link>https://Sentisfate.github.io/docs/rxhankx129lwqbdv/</link>
      <pubDate>Thu, 29 Jun 2023 03:31:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rxhankx129lwqbdv/</guid>
      <description>线性代数 点积 应用： 判断两个向量的接近程度，如单位向量的两个向量（非单位向量可以转单位向量），值为越接近1，表示为越接近，体现为单位向量重合，</description>
    </item>
    
    <item>
      <title>相机</title>
      <link>https://Sentisfate.github.io/docs/ns3vgphrn22c51qr/</link>
      <pubDate>Thu, 29 Jun 2023 02:24:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ns3vgphrn22c51qr/</guid>
      <description>webgl相机分为两类，正投影相机和透视相机。 正投影相机 类似于工程图纸中的视角，远近的物体比例不变，多用于科学研究，工程图纸的应用。 透视相机</description>
    </item>
    
    <item>
      <title>管线</title>
      <link>https://Sentisfate.github.io/docs/dkn5x74au1grt7ee/</link>
      <pubDate>Thu, 29 Jun 2023 02:10:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dkn5x74au1grt7ee/</guid>
      <description></description>
    </item>
    
    <item>
      <title>深度测试</title>
      <link>https://Sentisfate.github.io/docs/gb6cyb8zldc56hn8/</link>
      <pubDate>Thu, 29 Jun 2023 02:06:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gb6cyb8zldc56hn8/</guid>
      <description>何为深度值 渲染过程中，物体之间可能会存在多个遮挡关系，遮挡关系可能是同时存在的，如A的一部分遮住了B，B的一部分遮住了A，因此没法依据物体的</description>
    </item>
    
    <item>
      <title>DataView</title>
      <link>https://Sentisfate.github.io/docs/omf6xbdpkyuvhf9o/</link>
      <pubDate>Thu, 29 Jun 2023 01:23:27 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/omf6xbdpkyuvhf9o/</guid>
      <description></description>
    </item>
    
    <item>
      <title>加载WMS服务</title>
      <link>https://Sentisfate.github.io/docs/ii5g0z0yg25ofwdg/</link>
      <pubDate>Wed, 28 Jun 2023 09:02:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ii5g0z0yg25ofwdg/</guid>
      <description>以Geoserver 的服务为例主要涉及API WMSLayer WMSLayerInfo const wmsLayer = new WMSLayer(&amp;#34;http://localhost:8080/geoserver/wms&amp;#34;, { format: &amp;#34;png&amp;#34;, resourceInfo: { copyright: &amp;#34;GeoServer&amp;#34;, description: &amp;#34;CD DEM&amp;#34;, extent: new Extent(110.48667429534434, 28.408119429996205, 112.2999236963396, 30.128876030438512, {wkid: 4326}), featureInfoFormat: &amp;#34;text/html&amp;#34;, getFeatureInfoURL: &amp;#34;http://localhost:8080/geoserver/ows&amp;#34;, getMapURL: &amp;#34;http://localhost:8080/geoserver/ows&amp;#34;, layerInfos: [ new WMSLayerInfo({ name: &amp;#34;newSpace:dem&amp;#34;, title: &amp;#34;title&amp;#34;, queryable: true, showPopup: true }) ], spatialReferences: [3857], version:</description>
    </item>
    
    <item>
      <title>获取地图服务遇到的问题</title>
      <link>https://Sentisfate.github.io/docs/obcagrk4il65cm4s/</link>
      <pubDate>Wed, 28 Jun 2023 05:58:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/obcagrk4il65cm4s/</guid>
      <description>获取元数据 获取元数据方面可以通过http://localhost:8080/geoserver/wms?service=WMS&amp;amp;re</description>
    </item>
    
    <item>
      <title>WMS服务</title>
      <link>https://Sentisfate.github.io/docs/psm94b3iqr9061zw/</link>
      <pubDate>Wed, 28 Jun 2023 02:01:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/psm94b3iqr9061zw/</guid>
      <description>支持的操作： GetCapabilities 请求服务的元数据 GetMap请求地图图像 GetFeatureInfo请求关于地图要素的信息 GetLegendGraphic请求</description>
    </item>
    
    <item>
      <title>TypedArray</title>
      <link>https://Sentisfate.github.io/docs/pm7bhup41curff3p/</link>
      <pubDate>Tue, 27 Jun 2023 07:21:32 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pm7bhup41curff3p/</guid>
      <description>介绍 一个 TypedArray 对象描述了底层二进制数据缓冲区的类数组视图。没有称为 TypedArray 的全局属性，也没有直接可用的 TypedArray 构造函数。但是，有很多不同的全局属性，其值是指</description>
    </item>
    
    <item>
      <title>bufferData()</title>
      <link>https://Sentisfate.github.io/docs/iikop2w7xgn1d0rp/</link>
      <pubDate>Tue, 27 Jun 2023 06:42:32 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/iikop2w7xgn1d0rp/</guid>
      <description>创建并初始化buffer对象的数据存储区参数：target 指定buffer的绑定点 gl.ARRAY_BUFFER： 包含顶点属性的buffer</description>
    </item>
    
    <item>
      <title>Buffer</title>
      <link>https://Sentisfate.github.io/docs/tdhfg1onu8neheob/</link>
      <pubDate>Tue, 27 Jun 2023 06:30:16 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tdhfg1onu8neheob/</guid>
      <description>缓冲区对象，什么是缓冲区对象</description>
    </item>
    
    <item>
      <title>问题搜集</title>
      <link>https://Sentisfate.github.io/docs/ug9wev84zgrapbqx/</link>
      <pubDate>Tue, 27 Jun 2023 05:49:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ug9wev84zgrapbqx/</guid>
      <description>Cesium 插值方法有哪些，原理，适用场景。</description>
    </item>
    
    <item>
      <title>GLSL与着色器</title>
      <link>https://Sentisfate.github.io/docs/xv7s3uct7tu28e4q/</link>
      <pubDate>Mon, 26 Jun 2023 09:41:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xv7s3uct7tu28e4q/</guid>
      <description>GLSL规范：https://www.khronos.org/files/opengles_shading_language.pdfwebg</description>
    </item>
    
    <item>
      <title>无标题文档</title>
      <link>https://Sentisfate.github.io/docs/ev78vuu53ktlaifb/</link>
      <pubDate>Mon, 26 Jun 2023 09:32:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ev78vuu53ktlaifb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>WebGPU</title>
      <link>https://Sentisfate.github.io/docs/aozmgse9cnp4kg8t/</link>
      <pubDate>Mon, 26 Jun 2023 07:57:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/aozmgse9cnp4kg8t/</guid>
      <description></description>
    </item>
    
    <item>
      <title>轨迹回放</title>
      <link>https://Sentisfate.github.io/docs/geyrohex2attuwpc/</link>
      <pubDate>Mon, 26 Jun 2023 07:01:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/geyrohex2attuwpc/</guid>
      <description>import { Viewer, Cartesian3, Cartographic, EllipsoidGeodesic, TimeIntervalCollection, TimeInterval, Color, JulianDate, SampledPositionProperty, VelocityOrientationProperty, Entity, ModelGraphics, } from &amp;#39;cesium&amp;#39;; type Track = Cartesian3[]; type TrackWithTime = Array&amp;lt;{ position: Cartesian3; time: Date }&amp;gt;; type TrackWithJuliDate = Array&amp;lt;{ position: Cartesian3; time: JulianDate; }&amp;gt;; type Tracks = Track | Track[] | TrackWithTime | TrackWithTime[]; type ModelUrl = string[] | string; type Speeds = number | number[]; //每条轨迹的速度</description>
    </item>
    
    <item>
      <title>绘制圆形轨道</title>
      <link>https://Sentisfate.github.io/docs/uwvo1sbp9k1ub9ib/</link>
      <pubDate>Mon, 26 Jun 2023 06:21:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uwvo1sbp9k1ub9ib/</guid>
      <description>先来看下效果图： 简单来说就是绘制一些以地球中心为圆心的圆形轨道。对于要画一个圆，至少得要知道它的方程。二维平面圆的方程有： 放到三维里会变得更</description>
    </item>
    
    <item>
      <title>关于互斥，至少一个字段类型的设计</title>
      <link>https://Sentisfate.github.io/docs/pcplhgn2vlxy27pq/</link>
      <pubDate>Thu, 22 Jun 2023 13:50:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pcplhgn2vlxy27pq/</guid>
      <description>有这样一个需求，需要一个这样的类型，该接口有两个字段a,b其中希望a,b两个字段至少有一个，但不能都没有，即赋值的时候，当都没有该类型时，会</description>
    </item>
    
    <item>
      <title>类型收窄</title>
      <link>https://Sentisfate.github.io/docs/hoqdomikkxr7mkzq/</link>
      <pubDate>Wed, 21 Jun 2023 09:31:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hoqdomikkxr7mkzq/</guid>
      <description>在处理联合类型时，我们有时会想让该值为其中的一种类型，方便处理。一种常用的做法是进行类型断言，但是治标不治本，因此我们需要进行类型收窄。类型</description>
    </item>
    
    <item>
      <title>类型断言的合理前提</title>
      <link>https://Sentisfate.github.io/docs/bla7qcmcein7iz0z/</link>
      <pubDate>Wed, 21 Jun 2023 06:59:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bla7qcmcein7iz0z/</guid>
      <description>💡什么样的类型断言才是合理的，从报错的提示来看，需要两个类型之间充分重叠，将类型看为集合的话，重叠可以看作是集合之间有交集那么这种交集是一种</description>
    </item>
    
    <item>
      <title>类型</title>
      <link>https://Sentisfate.github.io/docs/tnil3lo1n1g5vs6g/</link>
      <pubDate>Wed, 21 Jun 2023 02:28:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tnil3lo1n1g5vs6g/</guid>
      <description>变量类型注释 语法：const/let variable: Type=value 函数类型注释 参数与返回值 语法： function foo(param1: Type1,...):returnType{ ... } ts会检查函数的参数和返回值，无返回值时未void function foo(num:number):number{ return num*2 }</description>
    </item>
    
    <item>
      <title>规范</title>
      <link>https://Sentisfate.github.io/docs/ptx5cwg2biavhmr1/</link>
      <pubDate>Wed, 21 Jun 2023 02:01:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ptx5cwg2biavhmr1/</guid>
      <description>ECMAScript 规范 https://tc39.es/ecma262/</description>
    </item>
    
    <item>
      <title>问题</title>
      <link>https://Sentisfate.github.io/docs/cc938qxgkwm5qc1q/</link>
      <pubDate>Tue, 20 Jun 2023 03:39:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cc938qxgkwm5qc1q/</guid>
      <description>3.X exception in animation handler for: onAnimate 在弹出infoWindow时，如果将infowindow.show()放在请求成功的回调中，会概率报下面的错误，解决方案是将其</description>
    </item>
    
    <item>
      <title>BaseViewer</title>
      <link>https://Sentisfate.github.io/docs/nn0yd6p3v4rg4lsu/</link>
      <pubDate>Sun, 18 Jun 2023 07:15:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nn0yd6p3v4rg4lsu/</guid>
      <description>vue组件 一个基础的视图封装，以便快捷启用Cesium应用，该组件通过两种方式来暴露viewer对象 将viewer挂在window上，通过传</description>
    </item>
    
    <item>
      <title>this 指向问题</title>
      <link>https://Sentisfate.github.io/docs/ncarfxa9g6u15cl7/</link>
      <pubDate>Tue, 13 Jun 2023 08:28:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ncarfxa9g6u15cl7/</guid>
      <description>this 丢失 在写一个工具类的时候，遇到的这个问题 class C{ static a(){ console.log(this) var parser=this.b parser() this.b() const c=this.c c() // this.c() } static b(){ console.log(this) } static c(){ console.log(this) // this.b() } } C.a() // C.b() // C.c() 在调用类的静态方法时，如果将类的静态</description>
    </item>
    
    <item>
      <title>web appbuilder</title>
      <link>https://Sentisfate.github.io/docs/mpfbhpgnorlmsdlb/</link>
      <pubDate>Tue, 06 Jun 2023 02:22:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mpfbhpgnorlmsdlb/</guid>
      <description>图片来源自http://zhihu.geoscene.cn/article/3601 微件目录结构 文件含义 微件生命周期 自定义微件步骤</description>
    </item>
    
    <item>
      <title>样式绑定</title>
      <link>https://Sentisfate.github.io/docs/sa38kwgcui45uxet/</link>
      <pubDate>Mon, 05 Jun 2023 00:27:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sa38kwgcui45uxet/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Math</title>
      <link>https://Sentisfate.github.io/docs/qzyoah1irpvp0mhh/</link>
      <pubDate>Thu, 01 Jun 2023 08:43:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qzyoah1irpvp0mhh/</guid>
      <description>Math.lerp(p,q,time) 计算两个数之间的线性内插,time 范围0-1 function (p, q, time) { return (1.0 - time) * p + time * q; };</description>
    </item>
    
    <item>
      <title>对象可能未定义</title>
      <link>https://Sentisfate.github.io/docs/qng0gx2u09pfweut/</link>
      <pubDate>Thu, 01 Jun 2023 08:14:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qng0gx2u09pfweut/</guid>
      <description>这个情况多数是由于在访问一个类型可能为 undefined 的对象，此时解决方案有两类。 obj?.prop obj!.prop ?.表示不确定obj是否已经定义，如果存在就访问其属性，否则整个表达</description>
    </item>
    
    <item>
      <title>ES Module</title>
      <link>https://Sentisfate.github.io/docs/iwo4g8x5flmygzom/</link>
      <pubDate>Thu, 01 Jun 2023 02:17:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/iwo4g8x5flmygzom/</guid>
      <description>ESModule 已经成为了前后端开发的标配，很多情况下是能不用CommonJS就不用，但是CommonJS提供了一些全局变量却十分有用，如：__dirna</description>
    </item>
    
    <item>
      <title>分析功能</title>
      <link>https://Sentisfate.github.io/docs/srnntq417rlu8g68/</link>
      <pubDate>Wed, 31 May 2023 06:20:11 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/srnntq417rlu8g68/</guid>
      <description></description>
    </item>
    
    <item>
      <title>发布图层</title>
      <link>https://Sentisfate.github.io/docs/wrcd6yrt8bhz0c5s/</link>
      <pubDate>Mon, 29 May 2023 07:01:40 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wrcd6yrt8bhz0c5s/</guid>
      <description>大致分为以下几步： 新建工作区 命名空间随便建一个不重复的即可。 空间名称不能为中文 创建成功 新建存储仓库 选择该仓库的数据源 选择你要的数据类型 保存后</description>
    </item>
    
    <item>
      <title>GeoServer</title>
      <link>https://Sentisfate.github.io/docs/ksnfwuft373y5foc/</link>
      <pubDate>Mon, 29 May 2023 07:00:11 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ksnfwuft373y5foc/</guid>
      <description>官网 https://geoserver.org/ 安装教程 参看官网教程 https://docs.geoserver.org/latest/en/user/installation/in</description>
    </item>
    
    <item>
      <title>Clock</title>
      <link>https://Sentisfate.github.io/docs/qrq82aqg9rdfy1g7/</link>
      <pubDate>Mon, 29 May 2023 02:57:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qrq82aqg9rdfy1g7/</guid>
      <description>A simple clock for keeping track of simulated time. 用来跟踪时间的时钟。</description>
    </item>
    
    <item>
      <title>vite&#43;ts&#43;vue 报错</title>
      <link>https://Sentisfate.github.io/docs/wultvb1c70az2xqk/</link>
      <pubDate>Fri, 26 May 2023 01:18:01 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wultvb1c70az2xqk/</guid>
      <description>导入路径不能以ts结尾 这个错误是由于vite.config.ts 配置方面的问题解决方案 import { defineConfig } from &amp;#39;vite&amp;#39; import vue from &amp;#39;@vitejs/plugin-vue&amp;#39; import path from &amp;#39;path&amp;#39; // https://vitejs.dev/config/ export default defineConfig({ plugins: [vue()], base: &amp;#34;&amp;#34;, resolve: { alias: {</description>
    </item>
    
    <item>
      <title>sdk 思路</title>
      <link>https://Sentisfate.github.io/docs/tr258p1czs7boqx2/</link>
      <pubDate>Thu, 25 May 2023 07:28:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tr258p1czs7boqx2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>测量功能实现步骤</title>
      <link>https://Sentisfate.github.io/docs/lgwbv9pnrgvxqifn/</link>
      <pubDate>Thu, 25 May 2023 00:28:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lgwbv9pnrgvxqifn/</guid>
      <description></description>
    </item>
    
    <item>
      <title>arcgis api for js</title>
      <link>https://Sentisfate.github.io/docs/epwl28kgbtfak8vc/</link>
      <pubDate>Tue, 23 May 2023 05:37:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/epwl28kgbtfak8vc/</guid>
      <description>3.x入门 首先创建一个前端项目，这里以vue3+ts项目为例你可以下载我搭好的框架节省时间快速开始https://gitee.com/sst</description>
    </item>
    
    <item>
      <title>arcgis 问题</title>
      <link>https://Sentisfate.github.io/docs/rgh8zu5b0d6yzrc4/</link>
      <pubDate>Tue, 23 May 2023 02:13:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rgh8zu5b0d6yzrc4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>学习地址</title>
      <link>https://Sentisfate.github.io/docs/fkh6w449fu0snbsq/</link>
      <pubDate>Tue, 23 May 2023 01:17:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fkh6w449fu0snbsq/</guid>
      <description>Cesium官方社区地址 https://community.cesium.com/2. 高级教程文档 https://www.cnblogs.com/fuckgiser/category/847878.html3. Cesium前期功能方向示例 https://github.com/YanzheZhang/Cesium.HPUZYZ.Demo4. Cesium TitanEarth 自定义沙盒案例+官方案例 http://192.168.0.15:3001/Apps/Sandcastle/index.html5. 基于Cesium封装的SDK的案例集 火星</description>
    </item>
    
    <item>
      <title>集成天地图</title>
      <link>https://Sentisfate.github.io/docs/fzfm91olx71gc4on/</link>
      <pubDate>Mon, 22 May 2023 06:22:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fzfm91olx71gc4on/</guid>
      <description></description>
    </item>
    
    <item>
      <title>点击标签关闭网页前弹出确认对话框,以及刷新页面触发确认框</title>
      <link>https://Sentisfate.github.io/docs/riedao279wiunqxt/</link>
      <pubDate>Wed, 17 May 2023 07:56:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/riedao279wiunqxt/</guid>
      <description>window.addEventListener(&amp;#39;beforeunload&amp;#39;, (event) =&amp;gt; { event.preventDefault() event.returnValue = &amp;#34;&amp;#34; }) 测试过程中，关闭有时不会触发，刷新页面时会触发。</description>
    </item>
    
    <item>
      <title>html</title>
      <link>https://Sentisfate.github.io/docs/nfhcqg/</link>
      <pubDate>Tue, 25 Apr 2023 10:54:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nfhcqg/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GIS面试题</title>
      <link>https://Sentisfate.github.io/docs/bp2rwql3qdxdsrnz/</link>
      <pubDate>Tue, 25 Apr 2023 10:20:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bp2rwql3qdxdsrnz/</guid>
      <description>什么是地理信息系统 它是随着地理科学、计算机技术、遥感技术和信息科学的发展而产生的一门科学。就应用而言，是对空间数据进行 组织、管理、分析、显示</description>
    </item>
    
    <item>
      <title>BoundingRectangle</title>
      <link>https://Sentisfate.github.io/docs/rxc1pvhw3p452vdl/</link>
      <pubDate>Mon, 17 Apr 2023 05:38:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rxc1pvhw3p452vdl/</guid>
      <description></description>
    </item>
    
    <item>
      <title>添加标注</title>
      <link>https://Sentisfate.github.io/docs/zkrgxqngkkw1fu3a/</link>
      <pubDate>Mon, 17 Apr 2023 04:20:09 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zkrgxqngkkw1fu3a/</guid>
      <description>给点添加标注 点添加标注很简单，直接给实体添加label属性即可。 entity.label = new Cesium.LabelGraphics({ text: &amp;#39;abcda&amp;#39;, }); 标注被点盖住可以通过设置偏移让它移动到上面。 entity.label = new Cesium.LabelGraphics({ text: &amp;#39;abcda&amp;#39;, pixelOffset: new Cesium.Cartesian2(0.0,</description>
    </item>
    
    <item>
      <title>关于IIFE 立即调用函数</title>
      <link>https://Sentisfate.github.io/docs/hmmowuh5qz8o4w3m/</link>
      <pubDate>Wed, 29 Mar 2023 13:26:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hmmowuh5qz8o4w3m/</guid>
      <description>IIFE的全称为Immediately Invoked Function Expression，翻译过来就是立即调用函数表达式。 在浏览一些源码的时候，常常见到一些类似下面这</description>
    </item>
    
    <item>
      <title>更改geojson(entity)的属性</title>
      <link>https://Sentisfate.github.io/docs/feh4pqyykg3x5ry9/</link>
      <pubDate>Fri, 24 Mar 2023 06:37:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/feh4pqyykg3x5ry9/</guid>
      <description>在加载GeoJson的时候，可以配置一个全局的样式，如点，线，面的颜色，填充色，线宽，点的大小，面的边框等 但有些需求让对这些属性进行更改，或</description>
    </item>
    
    <item>
      <title>🙃 关于webgl语法的更新</title>
      <link>https://Sentisfate.github.io/docs/nhvdrv8mq1idbtdl/</link>
      <pubDate>Mon, 20 Mar 2023 14:16:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nhvdrv8mq1idbtdl/</guid>
      <description>Cesium 最近一次更新默认使用了webgl2的语法，原来的webgl1的语法不在默认支持了，需要单独配置，否则可能会出现如下的错误： RuntimeError: Fragment shader failed to compile. Compile log:</description>
    </item>
    
    <item>
      <title>Web Workers</title>
      <link>https://Sentisfate.github.io/docs/gwf8igrqkree91io/</link>
      <pubDate>Fri, 17 Mar 2023 09:53:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gwf8igrqkree91io/</guid>
      <description>Web Worker 为 Web 内容在后台线程中运行脚本提供了一种简单的方法。线程可以执行任务而不干扰用户界面。此外，他们可以使用XMLHttpRequest执行 I/O</description>
    </item>
    
    <item>
      <title>idea</title>
      <link>https://Sentisfate.github.io/docs/amrm4in7h9y34inw/</link>
      <pubDate>Fri, 17 Mar 2023 05:03:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/amrm4in7h9y34inw/</guid>
      <description>基于Cesium，IndexedDB，WebAssembly技术实现的WEBGIS系统 设计思路： 处理逻辑，业务，数据存储全部由用户本地组成 页</description>
    </item>
    
    <item>
      <title>WebAssembly</title>
      <link>https://Sentisfate.github.io/docs/bcm60i6p9hdqsslt/</link>
      <pubDate>Fri, 17 Mar 2023 03:10:36 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bcm60i6p9hdqsslt/</guid>
      <description>WebAssembly 是一种新的编码方式，可以在现代的网络浏览器中运行 － 它是一种低级的类汇编语言，具有紧凑的二进制格式，可以接近原生的性能运行，并为诸如 C / C +</description>
    </item>
    
    <item>
      <title>IndexedDB</title>
      <link>https://Sentisfate.github.io/docs/pg7m6ol3hvf03flq/</link>
      <pubDate>Fri, 17 Mar 2023 02:57:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pg7m6ol3hvf03flq/</guid>
      <description>IndexedDB是一个事务性数据库系统，，一种底层API，用于客户端存储大量结构化数据也包括文件/二进制大型对象（blobs））。调试工具</description>
    </item>
    
    <item>
      <title>yaxis</title>
      <link>https://Sentisfate.github.io/docs/xcnu233wegbcwe0l/</link>
      <pubDate>Fri, 17 Mar 2023 00:56:22 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xcnu233wegbcwe0l/</guid>
      <description>y轴组件，一般最多有两个，多余两个要配置offset id string 组件id show boolean 是否显示 gridIndex number alignTicks boolean 自动对齐刻度 position &#39;left&#39;|&#39;right&#39; right offset number y轴偏移，注：若未将 yAxis.axisLine.onZero 设为 false , 则该</description>
    </item>
    
    <item>
      <title>通用基础组件</title>
      <link>https://Sentisfate.github.io/docs/lwav68xglu7dzgr8/</link>
      <pubDate>Thu, 16 Mar 2023 09:11:36 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lwav68xglu7dzgr8/</guid>
      <description>通过传递option来生成图表，封装了通用的引用步骤</description>
    </item>
    
    <item>
      <title>参考站</title>
      <link>https://Sentisfate.github.io/docs/nmrq1vua7qmnnmwm/</link>
      <pubDate>Thu, 16 Mar 2023 07:50:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nmrq1vua7qmnnmwm/</guid>
      <description>http://echarts.zhangmuchen.top/#/index</description>
    </item>
    
    <item>
      <title>入门</title>
      <link>https://Sentisfate.github.io/docs/vvh0781esmvzbpr4/</link>
      <pubDate>Thu, 16 Mar 2023 07:42:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vvh0781esmvzbpr4/</guid>
      <description>参考资料： https://webglfundamentals.org/webgl/lessons/zh_cn/webgl-fundamentals.html 什么是WebGL WebGL 使得在支持 HTML 的 canvas 标签的浏览器中，不需要安装任何插件，便可以使用基于 OpenGL ES 2.0 的 API 在 canvas 中进行 2D 和 3D 渲染。WebGL 程</description>
    </item>
    
    <item>
      <title>设计思想，借鉴</title>
      <link>https://Sentisfate.github.io/docs/vmktkg/</link>
      <pubDate>Thu, 16 Mar 2023 07:15:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vmktkg/</guid>
      <description>antv map设计规范 动作名称 点图层 线图层 面图层 不可点击数据点 不透明度 30% 不透明度 30% 不透明度 30% 常态数据点 &amp;ndash; &amp;ndash; &amp;ndash; 悬停数据点 对象图形底部增加大于该图形直</description>
    </item>
    
    <item>
      <title>问题</title>
      <link>https://Sentisfate.github.io/docs/ggwgg4ttc9vkkszm/</link>
      <pubDate>Thu, 16 Mar 2023 02:19:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ggwgg4ttc9vkkszm/</guid>
      <description>图表不显示 这个问题可能是因为没有设置series系列导致的。</description>
    </item>
    
    <item>
      <title>问题集</title>
      <link>https://Sentisfate.github.io/docs/ypyteb0e2541iier/</link>
      <pubDate>Wed, 15 Mar 2023 08:32:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ypyteb0e2541iier/</guid>
      <description>在ts文件中引入一个js文件导出的内容 js不带类型，ts无法识别到，需要新建一个同名的 xxx.d.ts文件，声明导出内容的类别 export const dataset: any; export const dataset2:</description>
    </item>
    
    <item>
      <title>bar-chart</title>
      <link>https://Sentisfate.github.io/docs/qhmldk5pav536g3w/</link>
      <pubDate>Tue, 14 Mar 2023 05:23:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qhmldk5pav536g3w/</guid>
      <description></description>
    </item>
    
    <item>
      <title>node.js 自定义cli</title>
      <link>https://Sentisfate.github.io/docs/crvox33upna91sgk/</link>
      <pubDate>Tue, 14 Mar 2023 05:18:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/crvox33upna91sgk/</guid>
      <description>参考：https://www.jianshu.com/p/dc872fd2723b</description>
    </item>
    
    <item>
      <title>模板字符串</title>
      <link>https://Sentisfate.github.io/docs/ocekx3wnlw17bcda/</link>
      <pubDate>Tue, 14 Mar 2023 00:40:09 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ocekx3wnlw17bcda/</guid>
      <description>形如下面这样的是一个模板字符串 `string text` `string text line 1 string text line 2` `string text ${expression} string text` `string text ${`string text ${expression} string text`} string text` tag `string text ${expression} string text` 前面几个都很熟悉了，就最后一个不太了解，来详细看一</description>
    </item>
    
    <item>
      <title>Linux 上安装mysql</title>
      <link>https://Sentisfate.github.io/docs/psbwzy8qfd9k9p29/</link>
      <pubDate>Fri, 10 Mar 2023 06:15:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/psbwzy8qfd9k9p29/</guid>
      <description>docker方式安装 检查mysql是否安装 **rpm -qa | grep mysql**** 无输出表示没安装** rpm 是rpm软件包管理工具， 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的</description>
    </item>
    
    <item>
      <title>计算属性 computed</title>
      <link>https://Sentisfate.github.io/docs/gh2xx7na3bwqpe28/</link>
      <pubDate>Fri, 10 Mar 2023 02:17:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gh2xx7na3bwqpe28/</guid>
      <description></description>
    </item>
    
    <item>
      <title>关于package.json</title>
      <link>https://Sentisfate.github.io/docs/msvwxozpbdkbfiqp/</link>
      <pubDate>Thu, 09 Mar 2023 03:19:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/msvwxozpbdkbfiqp/</guid>
      <description>name 表示包的名字注意事项 名称可以通过require引入 不能与其他模块名称重复，可以通过 npm view name 来查看是否重复，不重复报404(如果不需要发布到n</description>
    </item>
    
    <item>
      <title>Internet media type</title>
      <link>https://Sentisfate.github.io/docs/xhtn0sl2b8n01ay2/</link>
      <pubDate>Tue, 07 Mar 2023 08:25:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xhtn0sl2b8n01ay2/</guid>
      <description>媒体类型列表 https://www.iana.org/assignments/media-types/media-types.xhtml</description>
    </item>
    
    <item>
      <title>解构赋值</title>
      <link>https://Sentisfate.github.io/docs/sfqom5bsf1xys1pt/</link>
      <pubDate>Mon, 06 Mar 2023 09:27:42 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sfqom5bsf1xys1pt/</guid>
      <description>先来看以下这个例子 const [a, b, ...{ pop, push }] = [1, 2]; console.log(pop, push); 打印结果： a，b为1，2很好理解，不用多说，但是pop，和push打印结果属实是把我惊吓了。为了解</description>
    </item>
    
    <item>
      <title>windows cmd语法</title>
      <link>https://Sentisfate.github.io/docs/wg9wvf2fvbh9ypm8/</link>
      <pubDate>Mon, 06 Mar 2023 08:35:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wg9wvf2fvbh9ypm8/</guid>
      <description>常用命令 dir 查看当前目录下的内容 参数：/Q显示文件及目录属系统哪个用户，/T:C显示文件创建时间，/T:A显示文件上次被访问时间，/T:W上次</description>
    </item>
    
    <item>
      <title>Express</title>
      <link>https://Sentisfate.github.io/docs/pxhsy1clnxrkix95/</link>
      <pubDate>Mon, 06 Mar 2023 08:12:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pxhsy1clnxrkix95/</guid>
      <description></description>
    </item>
    
    <item>
      <title>koa 入门</title>
      <link>https://Sentisfate.github.io/docs/bmtz33xnrsc8fqy0/</link>
      <pubDate>Mon, 06 Mar 2023 08:11:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bmtz33xnrsc8fqy0/</guid>
      <description>koa介绍 开发团队：express原开发团队定位：未来的Web应用框架 起步 安装 Koa需要 node v7.6.0或更高版本来支持ES2015、异步方法</description>
    </item>
    
    <item>
      <title>自定义hook</title>
      <link>https://Sentisfate.github.io/docs/akg2ocn1txm56w1t/</link>
      <pubDate>Thu, 02 Mar 2023 08:49:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/akg2ocn1txm56w1t/</guid>
      <description>为什么需要自定义hook vue3的组合式api，让一段逻辑的代码得以组合起来，但是同时也让多个逻辑代码揉在了一起，非常不方便代码的维护管理。</description>
    </item>
    
    <item>
      <title>实现复制粘贴</title>
      <link>https://Sentisfate.github.io/docs/lfvsymmixod0gkig/</link>
      <pubDate>Thu, 02 Mar 2023 05:43:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lfvsymmixod0gkig/</guid>
      <description>方法一、document.execCommand 思路，使用input来实现选中文本(这里使用textarea)，再通过document.ex</description>
    </item>
    
    <item>
      <title>计算机与操作系统相关</title>
      <link>https://Sentisfate.github.io/docs/ug3l1f/</link>
      <pubDate>Fri, 24 Feb 2023 01:07:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ug3l1f/</guid>
      <description></description>
    </item>
    
    <item>
      <title>在线练习git分支操作的网站</title>
      <link>https://Sentisfate.github.io/docs/uvytb9bmapwf81zx/</link>
      <pubDate>Wed, 22 Feb 2023 06:05:28 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uvytb9bmapwf81zx/</guid>
      <description>https://learngitbranching.js.org/</description>
    </item>
    
    <item>
      <title>Teleport</title>
      <link>https://Sentisfate.github.io/docs/cg8mo9x61vg2klg6/</link>
      <pubDate>Wed, 22 Feb 2023 05:38:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cg8mo9x61vg2klg6/</guid>
      <description>teleport 是vue的一个内置组件。其功能是将teleport内的模板传送到DOM结构的外层。下面是一个示例： &amp;lt;template&amp;gt; &amp;lt;div class=&amp;#34;outer&amp;#34;&amp;gt; &amp;lt;h3&amp;gt;Tooltips with Vue 3 Teleport&amp;lt;/h3&amp;gt; &amp;lt;div&amp;gt; &amp;lt;button @click=&amp;#34;open = true&amp;#34;&amp;gt;Open Modal&amp;lt;/button&amp;gt; &amp;lt;Teleport to=&amp;#34;body&amp;#34;&amp;gt; &amp;lt;div v-if=&amp;#34;open&amp;#34; class=&amp;#34;modal&amp;#34;&amp;gt; &amp;lt;p&amp;gt;Hello</description>
    </item>
    
    <item>
      <title>如何封装</title>
      <link>https://Sentisfate.github.io/docs/tkl44wcortxkhpa1/</link>
      <pubDate>Sun, 19 Feb 2023 15:19:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tkl44wcortxkhpa1/</guid>
      <description>解决这个问题前，要先了解何为封装。 封装，即隐藏对象的属性和实现细节，仅对外公开接口，控制在程序中属性的读和修改的访问级别；将抽象得到的数据和</description>
    </item>
    
    <item>
      <title>离线模式</title>
      <link>https://Sentisfate.github.io/docs/td3aeh4imsywenv3/</link>
      <pubDate>Sun, 19 Feb 2023 11:56:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/td3aeh4imsywenv3/</guid>
      <description>在一般使用cesium的服务的时候，常常会要用到token。但是，由于Cesium的服务器在国外，网络不好，经常会加载不出地球。因此可以考虑</description>
    </item>
    
    <item>
      <title>使用node.js搭建一个最基本的服务器</title>
      <link>https://Sentisfate.github.io/docs/kvogdksrmfbrg36g/</link>
      <pubDate>Thu, 16 Feb 2023 07:56:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kvogdksrmfbrg36g/</guid>
      <description>// 引入http模块 const http = require(&amp;#34;http&amp;#34;); // 创建server const server = http.createServer(); // 处理请求 server.on(&amp;#34;request&amp;#34;, (req, res) =&amp;gt; { res.setHeader(&amp;#34;content-type&amp;#34;, &amp;#34;text/html;charset=utf-8&amp;#34;); res.end(&amp;#34;&amp;lt;h1&amp;gt;hello&amp;lt;/h1&amp;gt;&amp;#34;); }); // 监听端口 server.listen(3000, function () { console.log(&amp;#34;已开启服</description>
    </item>
    
    <item>
      <title>Chrome插件开发</title>
      <link>https://Sentisfate.github.io/docs/byywxbvh5fs9ilb4/</link>
      <pubDate>Thu, 16 Feb 2023 02:59:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/byywxbvh5fs9ilb4/</guid>
      <description>轮播标签页 有这样一个需求，需要将标签页进行轮播，下面以谷歌浏览器为例。关于谷歌浏览器tab页自动切换。我要实现浏览器能够定时轮播标签页。有以</description>
    </item>
    
    <item>
      <title>css</title>
      <link>https://Sentisfate.github.io/docs/uf76yt/</link>
      <pubDate>Thu, 16 Feb 2023 01:59:27 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uf76yt/</guid>
      <description></description>
    </item>
    
    <item>
      <title>UseCallback</title>
      <link>https://Sentisfate.github.io/docs/xzx9hh/</link>
      <pubDate>Thu, 16 Feb 2023 01:58:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xzx9hh/</guid>
      <description></description>
    </item>
    
    <item>
      <title>React</title>
      <link>https://Sentisfate.github.io/docs/nyq3fa/</link>
      <pubDate>Thu, 16 Feb 2023 01:55:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nyq3fa/</guid>
      <description></description>
    </item>
    
    <item>
      <title>图片回显</title>
      <link>https://Sentisfate.github.io/docs/gieef4rt4okcg0oc/</link>
      <pubDate>Thu, 16 Feb 2023 01:26:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gieef4rt4okcg0oc/</guid>
      <description>有时后端会给前端直接返回图片数据流，前端需要将数据流转换为图片并预览显示。通常会有以下几种情况 后端返回的是url，前端可以直接通过img的s</description>
    </item>
    
    <item>
      <title>electron-egg</title>
      <link>https://Sentisfate.github.io/docs/qaiqldud3ftglq9m/</link>
      <pubDate>Tue, 14 Feb 2023 16:45:11 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qaiqldud3ftglq9m/</guid>
      <description>开启硬件加速</description>
    </item>
    
    <item>
      <title>Electron-egg</title>
      <link>https://Sentisfate.github.io/docs/ulg4idpb34udsmxs/</link>
      <pubDate>Tue, 14 Feb 2023 16:43:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ulg4idpb34udsmxs/</guid>
      <description>介绍 一个跨平台的前端项目打包框架。可以将项目打包为桌面端程序。官方文档: https://electronjs.org/docs 安装</description>
    </item>
    
    <item>
      <title>文件下载</title>
      <link>https://Sentisfate.github.io/docs/pco5ia8chzeg6ahy/</link>
      <pubDate>Mon, 13 Feb 2023 09:57:17 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pco5ia8chzeg6ahy/</guid>
      <description>思路 利用a标签下载文件 js创建一个隐藏的a标签 获得资源的url 设置a标签的**href=url**和**download=filename*</description>
    </item>
    
    <item>
      <title>插槽</title>
      <link>https://Sentisfate.github.io/docs/dseypw9q5tw0dlt7/</link>
      <pubDate>Mon, 13 Feb 2023 06:51:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dseypw9q5tw0dlt7/</guid>
      <description>vue3中的插槽和vue2中的插槽的区别。 具名插槽 vue3中依然可以按照vue2的写法来写插槽。此外，还提供了v-slot这个指令来写插槽。</description>
    </item>
    
    <item>
      <title>插槽</title>
      <link>https://Sentisfate.github.io/docs/lp05gnzdftgp3yqr/</link>
      <pubDate>Mon, 13 Feb 2023 06:35:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lp05gnzdftgp3yqr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>setup函数</title>
      <link>https://Sentisfate.github.io/docs/vxd45fioywk0ubfk/</link>
      <pubDate>Thu, 09 Feb 2023 06:10:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vxd45fioywk0ubfk/</guid>
      <description></description>
    </item>
    
    <item>
      <title>JS集锦</title>
      <link>https://Sentisfate.github.io/docs/cba9ey/</link>
      <pubDate>Wed, 08 Feb 2023 07:24:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cba9ey/</guid>
      <description></description>
    </item>
    
    <item>
      <title>app 全局变量</title>
      <link>https://Sentisfate.github.io/docs/fx6d6g3vtm3qho3q/</link>
      <pubDate>Tue, 07 Feb 2023 05:22:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fx6d6g3vtm3qho3q/</guid>
      <description>app.config.globalProperties.全局变量=变量 // 可以直接使用 全局变量</description>
    </item>
    
    <item>
      <title>无标题</title>
      <link>https://Sentisfate.github.io/docs/qlrczd/</link>
      <pubDate>Wed, 01 Feb 2023 14:04:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qlrczd/</guid>
      <description></description>
    </item>
    
    <item>
      <title>队列相关</title>
      <link>https://Sentisfate.github.io/docs/ikqn9v/</link>
      <pubDate>Wed, 01 Feb 2023 14:04:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ikqn9v/</guid>
      <description></description>
    </item>
    
    <item>
      <title>设计搜集</title>
      <link>https://Sentisfate.github.io/docs/bryr1updh2vve6ub/</link>
      <pubDate>Wed, 11 Jan 2023 10:22:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bryr1updh2vve6ub/</guid>
      <description>侧边栏导航条 settings页面 Cesium 相关界面设计</description>
    </item>
    
    <item>
      <title>有趣的js代码</title>
      <link>https://Sentisfate.github.io/docs/ggopsep9chmg30wv/</link>
      <pubDate>Wed, 11 Jan 2023 04:38:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ggopsep9chmg30wv/</guid>
      <description>防扒 ((function() { var callbacks = [], timeLimit = 50, open = false; setInterval(loop, 1); return { addListener: function(fn) { callbacks.push(fn); }, cancleListenr: function(fn) { callbacks = callbacks.filter(function(v) { return v !== fn; }); } } function loop() { var startTime = new Date(); debugger; if (new Date() - startTime &amp;gt; timeLimit) { if (!open) { callbacks.forEach(function(fn) { fn.call(null); }); } open = true; window.stop(); aler</description>
    </item>
    
    <item>
      <title>React相关</title>
      <link>https://Sentisfate.github.io/docs/dkoge2prhuidx07n/</link>
      <pubDate>Sun, 08 Jan 2023 06:34:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dkoge2prhuidx07n/</guid>
      <description>问题一 Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn&amp;rsquo;t have a dependency array, or one of the dependencies changes on every render. 产生原因：在useEffect中调用了setState，更新视图时，us</description>
    </item>
    
    <item>
      <title>滚动条设计</title>
      <link>https://Sentisfate.github.io/docs/ymoqtrm21c5n7fwl/</link>
      <pubDate>Sat, 07 Jan 2023 16:28:35 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ymoqtrm21c5n7fwl/</guid>
      <description>CSS修改样式 参考：https://www.freecodecamp.org/chinese/news/css-scrollbar-tuto</description>
    </item>
    
    <item>
      <title>color picker</title>
      <link>https://Sentisfate.github.io/docs/eiwzbfsyokg168hv/</link>
      <pubDate>Fri, 30 Dec 2022 10:59:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/eiwzbfsyokg168hv/</guid>
      <description>React Color 官网：https://casesandberg.github.io/react-color/ 组件封装： .color-content { width: 36px; height: 14px; border-radius: 2px; } .color-swatch { padding: 5px; background: #fff; border-radius: 1px;</description>
    </item>
    
    <item>
      <title>Blob 文件操作</title>
      <link>https://Sentisfate.github.io/docs/wpszwhm1tsigllll/</link>
      <pubDate>Thu, 29 Dec 2022 06:39:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wpszwhm1tsigllll/</guid>
      <description>文件读取 function createQueue() { const list = []; let offset = 0; const dequeue = () =&amp;gt; { let res = list[offset]; list[offset] = undefined; offset++; if (offset &amp;gt; (list.length - offset) / 2) { // 删除前面的空数据 list.splice(0, offset); offset = 0; } return res; }; const enqueue = (...arr) =&amp;gt; { list.push(...arr); }; const pop = () =&amp;gt; {</description>
    </item>
    
    <item>
      <title>队列</title>
      <link>https://Sentisfate.github.io/docs/mkg7pbeglmqo858o/</link>
      <pubDate>Fri, 23 Dec 2022 08:20:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mkg7pbeglmqo858o/</guid>
      <description>class Queue { constructor(size) { this.list = []; //长度 this.length = size; this._offset = 0; } enqueue(...arr) { this.list.push(...arr); this.length += arr.length; } dequeue() { let res = this.list[this._offset]; // 清空偏移前面的数据 this.list[this._offset] = undefined; this.length--; this._offset++; // 防止数组长度过大，应该在offset&amp;gt;</description>
    </item>
    
    <item>
      <title>字符编码</title>
      <link>https://Sentisfate.github.io/docs/vf3mh3ns7m7uot49/</link>
      <pubDate>Fri, 23 Dec 2022 04:11:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vf3mh3ns7m7uot49/</guid>
      <description>参考资料https://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.ht</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>https://Sentisfate.github.io/docs/rnb4id16rudpy613/</link>
      <pubDate>Fri, 23 Dec 2022 03:43:11 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rnb4id16rudpy613/</guid>
      <description>创建一个正则表达式 // 字面量形式创建 var re=/abc/ //RegExp 构造函数创建 var re=new RegExp(&amp;#39;abc&amp;#39;) 上面创建了1个正则，表示匹配字符串中出现连续的 abc 模式，创建方式有两种 字面量，模式由</description>
    </item>
    
    <item>
      <title>throw 异常抛出</title>
      <link>https://Sentisfate.github.io/docs/kvfllro1gklg23o5/</link>
      <pubDate>Sat, 17 Dec 2022 13:04:42 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kvfllro1gklg23o5/</guid>
      <description>情景 在编程过程中，bug，函数的不正常引用，类型错误，undefined和null的异常赋值等，常会导致程序崩溃。为了防止以上情况的出现，会</description>
    </item>
    
    <item>
      <title>拖拽上传</title>
      <link>https://Sentisfate.github.io/docs/cfhewdft2dz34uoy/</link>
      <pubDate>Sat, 17 Dec 2022 08:05:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cfhewdft2dz34uoy/</guid>
      <description>涉及到的事件html 原生拖放事件。概览：设置dragover 和drop事件 **e.preventtDefault()**，在drop事件中通</description>
    </item>
    
    <item>
      <title>Modal 外层容器去除</title>
      <link>https://Sentisfate.github.io/docs/px897ubpe33uvdft/</link>
      <pubDate>Fri, 16 Dec 2022 02:11:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/px897ubpe33uvdft/</guid>
      <description>有时候不希望弹出的对话框带有遮罩层。这个问题的解决方案可以用这三个api来解决。 但是外层对话框容器仍然存在。其遮盖的html元素无法进行交互</description>
    </item>
    
    <item>
      <title>upload 组件设计</title>
      <link>https://Sentisfate.github.io/docs/mv3v7wmng5d3v1ff/</link>
      <pubDate>Thu, 15 Dec 2022 09:14:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mv3v7wmng5d3v1ff/</guid>
      <description>基本原理 关于触发选择文件的input[file]的方法。 const selectFile = () =&amp;gt; { // 触发文件选择 document.getElementById(&amp;#39;upload&amp;#39;).click(); };</description>
    </item>
    
    <item>
      <title>svg 的大小颜色修改</title>
      <link>https://Sentisfate.github.io/docs/hh8quyqnwzxwkp8p/</link>
      <pubDate>Wed, 14 Dec 2022 12:58:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hh8quyqnwzxwkp8p/</guid>
      <description>&amp;lt;svg t=&amp;#34;1671022541939&amp;#34; class=&amp;#34;icon&amp;#34; viewBox=&amp;#34;0 0 1024 1024&amp;#34; version=&amp;#34;1.1&amp;#34; xmlns=&amp;#34;http://www.w3.org/2000/svg&amp;#34; p-id=&amp;#34;11707&amp;#34; width=&amp;#34;1em&amp;#34; height=&amp;#34;1em&amp;#34; fill=&amp;#34;currentColor&amp;#34; &amp;gt; &amp;lt;path d=&amp;#34;M880.64 20.48H143.36a122.88 122.88 0 0 0-122.88 122.88v737.28a122.88 122.88 0 0 0 122.88 122.88h737.28a122.88 122.88 0 0 0 122.88-122.88V143.36a122.88 122.88 0 0 0-122.88-122.88z m71.68 122.88v179.2H708.1984V71.68H880.64A71.68 71.68 0 0 1 952.32 143.36zM380.5184 650.24v-276.48h276.48v276.48z m276.48 51.2V952.32h-276.48V701.44z m-327.68-51.2H71.68v-276.48h257.6384z m51.2-327.68V71.68h276.48v250.88z m327.68 51.2H952.32v276.48H708.1984zM143.36 71.68h185.9584v250.88H71.68V143.36A71.68 71.68 0 0 1 143.36 71.68zM71.68 880.64v-179.2h257.6384V952.32H143.36A71.68 71.68 0 0 1 71.68 880.64zM880.64 952.32h-172.4416V701.44H952.32V880.64a71.68 71.68 0 0</description>
    </item>
    
    <item>
      <title>静态资源路径问题</title>
      <link>https://Sentisfate.github.io/docs/dv7c6uia6peacdls/</link>
      <pubDate>Wed, 14 Dec 2022 05:44:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dv7c6uia6peacdls/</guid>
      <description>https://cn.vitejs.dev/guide/assets.html使用import 进行导入，如： import pic from &amp;#39;@/assets/OIP-C.jfif&amp;#39;; 对于ts，会报不是一个模</description>
    </item>
    
    <item>
      <title>Cesium 坐标系统</title>
      <link>https://Sentisfate.github.io/docs/nbps42euwn0zn5tf/</link>
      <pubDate>Wed, 14 Dec 2022 04:11:16 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nbps42euwn0zn5tf/</guid>
      <description>平面坐标系 Cartesian2 平面直角坐标系，描述的是屏幕坐标，左上角点为原点。 空间坐标系 Cartsian3 特点1）笛卡尔坐标系是米单位;2）笛卡尔坐标系原点是地球几何中心；</description>
    </item>
    
    <item>
      <title>URL</title>
      <link>https://Sentisfate.github.io/docs/wtgk3c79bkhbztdf/</link>
      <pubDate>Tue, 13 Dec 2022 09:07:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wtgk3c79bkhbztdf/</guid>
      <description>URL.createObjectURL() 参数file，blob返回一个url注意需要主动调用 URL.revokeObjectURL(url)来释放url对象</description>
    </item>
    
    <item>
      <title>获取鼠标位置坐标</title>
      <link>https://Sentisfate.github.io/docs/yizhiny0989zgxag/</link>
      <pubDate>Sun, 11 Dec 2022 08:35:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yizhiny0989zgxag/</guid>
      <description>三维地图获取位置坐标，当然要显示鼠标在地球上的坐标（不可能是太空的吧）。实时显示就需要监听鼠标的移动事件，整个���程大概如下。 鼠标移动 获取</description>
    </item>
    
    <item>
      <title>加载本地数据</title>
      <link>https://Sentisfate.github.io/docs/gml6fmm2rkb8ap2h/</link>
      <pubDate>Sun, 11 Dec 2022 07:07:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gml6fmm2rkb8ap2h/</guid>
      <description>1.shapefile 思路：Cesium无法直接识别shapefile，因此需要将shapefile格式文件进行转换，考虑到Cesium直接支持的矢量数据格式有</description>
    </item>
    
    <item>
      <title>去除cesium默认控件</title>
      <link>https://Sentisfate.github.io/docs/gb6gb3cwgbt5y190/</link>
      <pubDate>Sun, 11 Dec 2022 02:54:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gb6gb3cwgbt5y190/</guid>
      <description>api new Cesium.Viewer(container, options) https://cesium.com/learn/cesiumjs/ref-doc/Viewer.html#.ConstructorOptions 默认样式 ... const config = { animation: false, //左下角仪表盘 baseLayerPicker: false, //基础图层选择控件 fullscreenButton: false, //全屏控件 geocoder: false, //地名搜索控件 homeButton: false, //返回初始位置 sceneModePicker: false, //二维</description>
    </item>
    
    <item>
      <title>集成cesium</title>
      <link>https://Sentisfate.github.io/docs/lckft8ezl0fkn750/</link>
      <pubDate>Sat, 10 Dec 2022 12:38:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lckft8ezl0fkn750/</guid>
      <description>现在应该可以直接设置node_modules里的路径 步骤 创建react项目并安装相应依赖，清空默认内容 npm i cesium下载cesium的包 导</description>
    </item>
    
    <item>
      <title>behaviors</title>
      <link>https://Sentisfate.github.io/docs/ygkk15q88b4min2t/</link>
      <pubDate>Thu, 08 Dec 2022 11:09:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ygkk15q88b4min2t/</guid>
      <description>用法类似vue中的mixins，用于拆分逻辑。 创建behaviors.js文件导出Behavior对象 // my-behavior.js module.exports = Behavior({ data: { sharedText: &amp;#39;This is a piece of data shared between pages.&amp;#39; }, methods:</description>
    </item>
    
    <item>
      <title>文字动画</title>
      <link>https://Sentisfate.github.io/docs/ghbpf8z5grvadn4s/</link>
      <pubDate>Sun, 04 Dec 2022 14:23:42 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ghbpf8z5grvadn4s/</guid>
      <description>字幕滚动效果 思路：采取内外盒子的方式，外盒子设置overflow:hidden，内盒子设置width:fit-content，再将内盒子从右</description>
    </item>
    
    <item>
      <title>map初体验</title>
      <link>https://Sentisfate.github.io/docs/nwv1l5xbtgb023k7/</link>
      <pubDate>Sun, 04 Dec 2022 08:29:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nwv1l5xbtgb023k7/</guid>
      <description>map组件官方文档https://developers.weixin.qq.com/miniprogram/dev/component/ma</description>
    </item>
    
    <item>
      <title>错题集</title>
      <link>https://Sentisfate.github.io/docs/irfxg75em0pzl97u/</link>
      <pubDate>Fri, 02 Dec 2022 13:25:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/irfxg75em0pzl97u/</guid>
      <description>插槽不显示 slot插槽使用name字段时必须设置为多插槽，否则不会显示插入的内容 Component({ options: { multipleSlots: true // 在组件定义时的选项中启用多 slot 支持 }, properties: { /* ... */ }, methods:</description>
    </item>
    
    <item>
      <title>开发工具</title>
      <link>https://Sentisfate.github.io/docs/ubayzn/</link>
      <pubDate>Tue, 29 Nov 2022 03:45:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ubayzn/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Three.JS</title>
      <link>https://Sentisfate.github.io/docs/fgvwxg/</link>
      <pubDate>Tue, 29 Nov 2022 03:45:09 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fgvwxg/</guid>
      <description></description>
    </item>
    
    <item>
      <title>组件详解</title>
      <link>https://Sentisfate.github.io/docs/itfrrggmug1y9a6v/</link>
      <pubDate>Sun, 27 Nov 2022 09:31:28 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/itfrrggmug1y9a6v/</guid>
      <description>注意，所有组件与属性都是小写，并且以**-**连接 基础组件 详见 视图容器 | 微信开放文档 属性 公有属性 所有组件都有的属性 属性名 类型 描述 注解 id String 组件</description>
    </item>
    
    <item>
      <title>事件对象</title>
      <link>https://Sentisfate.github.io/docs/fa1fi8fosa2geb24/</link>
      <pubDate>Sat, 26 Nov 2022 14:49:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fa1fi8fosa2geb24/</guid>
      <description>详细属性见事件 | 微信开放文档</description>
    </item>
    
    <item>
      <title>花样事件绑定</title>
      <link>https://Sentisfate.github.io/docs/ogv090lncg76lxrg/</link>
      <pubDate>Sat, 26 Nov 2022 12:29:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ogv090lncg76lxrg/</guid>
      <description>数据绑定 使用{{}}进行数据绑定，绑定的变量表示的字符串，是page.js内注册的方法名，如： &amp;lt;button id=&amp;#34;btn&amp;#34; bindtap=&amp;#34;{{handle</description>
    </item>
    
    <item>
      <title>882 细分图中的可到达节点</title>
      <link>https://Sentisfate.github.io/docs/nih90olls9of8how/</link>
      <pubDate>Sat, 26 Nov 2022 02:50:35 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nih90olls9of8how/</guid>
      <description>/** * @param {number[][]} edges * @param {number} M * @param {number} N * @return {number} */ var reachableNodes = function(edges, M, N) { let res = 0, heap = new Heap(), state = new Array(N).fill(0), graph = Array.from(new Array(N), ()=&amp;gt; []), distance = new Array(N).fill(Number.MAX_SAFE_INTEGER); for(let i = 0; i &amp;lt; edges.length; i++){ graph[edges[i][0]].push([edges[i][1], edges[i][2]]); graph[edges[i][1]].push([edges[i][0], edges[i][2]]); } distance[0] = 0; heap.insert([0, distance[0]]); while(heap.length!= 0){ let t = heap.remove();</description>
    </item>
    
    <item>
      <title>809 情感丰富的文字</title>
      <link>https://Sentisfate.github.io/docs/iyfq1db9nn23pkq1/</link>
      <pubDate>Fri, 25 Nov 2022 03:27:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/iyfq1db9nn23pkq1/</guid>
      <description>思路： :::info 关键在于什么是扩张？ 扩张操作是指向字母组中添加连续相同的字母使其长度达到3或以上 判断字符串s是否可以由字符串a扩张而来，只需要进行如</description>
    </item>
    
    <item>
      <title>区间子数组的个数</title>
      <link>https://Sentisfate.github.io/docs/ug957s5a9bnum2gr/</link>
      <pubDate>Thu, 24 Nov 2022 04:01:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ug957s5a9bnum2gr/</guid>
      <description>/** * @param {number[]} nums * @param {number} left * @param {number} right * @return {number} */ var numSubarrayBoundedMax = function(nums, left, right) { // last1为上一个符合left&amp;lt;= num&amp;lt;=right 的索引，last2为上一个大于right的索引 //</description>
    </item>
    
    <item>
      <title>API</title>
      <link>https://Sentisfate.github.io/docs/kxtbxs4losoka3mw/</link>
      <pubDate>Wed, 23 Nov 2022 14:31:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kxtbxs4losoka3mw/</guid>
      <description></description>
    </item>
    
    <item>
      <title>tab切换对应的生命周期</title>
      <link>https://Sentisfate.github.io/docs/zoci8zm3e7l7no5e/</link>
      <pubDate>Wed, 23 Nov 2022 14:03:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zoci8zm3e7l7no5e/</guid>
      <description>tabbar 页面是什么意思？用什么跳转到tabbar页面 - 腾讯云开发者社区-腾讯云我们以A,B页面为Tabbar页面，C是从A页面打开的页面，D是从C</description>
    </item>
    
    <item>
      <title>无标题</title>
      <link>https://Sentisfate.github.io/docs/ef7xun/</link>
      <pubDate>Tue, 22 Nov 2022 06:11:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ef7xun/</guid>
      <description></description>
    </item>
    
    <item>
      <title>关于像素不得不知道的那点事</title>
      <link>https://Sentisfate.github.io/docs/dq7fd2l31av0xbhr/</link>
      <pubDate>Mon, 21 Nov 2022 10:49:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dq7fd2l31av0xbhr/</guid>
      <description>概念 英寸，寸，长度单位，固定不变，绝对的 像素 图片的最小单元格 分辨率 一个图像的像素的个数可以理解成分辨率，例如30.72万像素可以表达成640</description>
    </item>
    
    <item>
      <title>808 分汤</title>
      <link>https://Sentisfate.github.io/docs/xye2pxoke1elqgu2/</link>
      <pubDate>Mon, 21 Nov 2022 04:11:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xye2pxoke1elqgu2/</guid>
      <description>/** * @param {number} n * @return {number} */ var soupServings = function(n) { // 超出4800的数据与1的差精度在10^-5 if(n&amp;gt;4800) return 1 // 我们将数据进行简化 n=Math.ceil(n/25) //以25为1份 // 总共需要分配 Math.ceil(2n/100) 次 // 每次</description>
    </item>
    
    <item>
      <title>二叉树相关</title>
      <link>https://Sentisfate.github.io/docs/ud5x3c/</link>
      <pubDate>Mon, 21 Nov 2022 04:10:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ud5x3c/</guid>
      <description></description>
    </item>
    
    <item>
      <title>799 香槟塔</title>
      <link>https://Sentisfate.github.io/docs/mg3ukf3vgf19ygsc/</link>
      <pubDate>Sun, 20 Nov 2022 03:56:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mg3ukf3vgf19ygsc/</guid>
      <description>思路： :::info 每个香槟的含量(不考虑溢出)由其上面两个香槟的溢出部分决定第i行第j列可以表示如下dp[i][j]=(dp[i][j]-1)/2+(</description>
    </item>
    
    <item>
      <title>fatal: refusing to merge unrelated histories</title>
      <link>https://Sentisfate.github.io/docs/uci2ar3au0t71fgb/</link>
      <pubDate>Sat, 19 Nov 2022 09:33:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uci2ar3au0t71fgb/</guid>
      <description>原因，本地和远程仓库没有取得关系，在git pull 和git push中可能会遇到解决方案在操作命令后加上 --allow-unrelated-histories</description>
    </item>
    
    <item>
      <title>上传项目至远程仓库</title>
      <link>https://Sentisfate.github.io/docs/xtz1mkfy070t5ciy/</link>
      <pubDate>Sat, 19 Nov 2022 08:47:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xtz1mkfy070t5ciy/</guid>
      <description>创建远程仓库 初始化本地仓库，即在项目根目录git init git add git commit -m &#39;&#39; 将本地仓库与远程仓库关联git remote add &amp;lt;自定义远程仓库名&amp;gt; &amp;lt;远程</description>
    </item>
    
    <item>
      <title>入门概览</title>
      <link>https://Sentisfate.github.io/docs/cn574nzu2i2nt0b9/</link>
      <pubDate>Sat, 19 Nov 2022 08:14:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cn574nzu2i2nt0b9/</guid>
      <description>开发者工具介绍 需要注意的是，appid可以使用测试号，如果发布则必填注册的小程序appid 有后端服务需要勾选��信云开发 点点就知道是干什么用</description>
    </item>
    
    <item>
      <title>小程序开发</title>
      <link>https://Sentisfate.github.io/docs/pg57qy0pmbsws1up/</link>
      <pubDate>Fri, 18 Nov 2022 08:29:02 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pg57qy0pmbsws1up/</guid>
      <description>特点： 小，免安装 (实际是要下载安装的，2M左右，超出要分包) 操作更接近原生app 安全 开发成本低 维护方便(前端开发) 注册流程 官网： https://mp.weixin.qq.com/cgi-bin/wx 开发工具 https://developers.weixin.qq.com/miniprogram/dev/devtools/devtools.html</description>
    </item>
    
    <item>
      <title>891 子序列宽度之和</title>
      <link>https://Sentisfate.github.io/docs/tg5uuorf5dy6gy1h/</link>
      <pubDate>Fri, 18 Nov 2022 03:24:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tg5uuorf5dy6gy1h/</guid>
      <description>/** * @param {number[]} nums * @return {number} */ var sumSubseqWidths = function(nums) { const MOD = 1000000007; nums.sort((a, b) =&amp;gt; a - b); let res = 0; let x = nums[0], y = 2; for (let j = 1; j &amp;lt; nums.length; j++) { res = (res + nums[j] * (y - 1) - x) % MOD; x = (x * 2 + nums[j]) % MOD; y = y</description>
    </item>
    
    <item>
      <title>Vite</title>
      <link>https://Sentisfate.github.io/docs/vvxzng/</link>
      <pubDate>Thu, 17 Nov 2022 07:18:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vvxzng/</guid>
      <description></description>
    </item>
    
    <item>
      <title>React</title>
      <link>https://Sentisfate.github.io/docs/md5luy/</link>
      <pubDate>Thu, 17 Nov 2022 07:17:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/md5luy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端通关</title>
      <link>https://Sentisfate.github.io/docs/ekdkgg/</link>
      <pubDate>Thu, 17 Nov 2022 07:17:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ekdkgg/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sunday算法</title>
      <link>https://Sentisfate.github.io/docs/hgyhap/</link>
      <pubDate>Thu, 17 Nov 2022 07:14:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hgyhap/</guid>
      <description></description>
    </item>
    
    <item>
      <title>792 匹配子序列的单词数</title>
      <link>https://Sentisfate.github.io/docs/ghr55e4fgqo19yus/</link>
      <pubDate>Thu, 17 Nov 2022 04:20:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ghr55e4fgqo19yus/</guid>
      <description>/** * @param {string} s * @param {string[]} words * @return {number} */ var numMatchingSubseq = function(s, words) { // 比较 word 的每个字符在s中的顺序，即索引大小为递增即可， let count=words.length const map=new Map() for(let i=0;i&amp;lt;s.length;i++){ if(map.has(s[i])) map.get(s[i]).push(i) else map.set(s[i],[i]) } for(let word of words){ //记录单词中字</description>
    </item>
    
    <item>
      <title>775 全局倒置和局部倒置</title>
      <link>https://Sentisfate.github.io/docs/nvvcc5znr3nv6mzf/</link>
      <pubDate>Wed, 16 Nov 2022 03:57:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nvvcc5znr3nv6mzf/</guid>
      <description>思路： :::info 局部倒置一定是全局倒置。也就是说非局部倒置的全局倒置存在，则为false，否则为true，即查找非相邻逆序对。 暴力法，时间复杂度为O</description>
    </item>
    
    <item>
      <title>antDC</title>
      <link>https://Sentisfate.github.io/docs/ofdyg7/</link>
      <pubDate>Wed, 16 Nov 2022 03:30:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ofdyg7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>1710 卡车上的最大单元数</title>
      <link>https://Sentisfate.github.io/docs/glq6s1eu64f9wcxt/</link>
      <pubDate>Tue, 15 Nov 2022 03:37:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/glq6s1eu64f9wcxt/</guid>
      <description>/** * @param {number[][]} boxTypes * @param {number} truckSize * @return {number} */ var maximumUnits = function(boxTypes, truckSize) { // 贪心+排序 // 对箱子按容量排序降序 boxTypes.sort((a,b)=&amp;gt;b[1]-a[1]) let maxSum=0 let n=0 for(let [num,size] of boxTypes){ if(n+num&amp;lt;truckSize){ n+=num maxSum+=num*size }else{ maxSum+=size*(truckSize-n) break } } return maxSum };</description>
    </item>
    
    <item>
      <title>github&#43;PicGO图床搭建</title>
      <link>https://Sentisfate.github.io/posts/tutr23bce4h2ynsq/</link>
      <pubDate>Mon, 14 Nov 2022 16:09:27 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/posts/tutr23bce4h2ynsq/</guid>
      <description>PicGO下载地址：GitHub - Molunerfinn/PicGo: A simple &amp;amp; beautiful tool for pictures uploading built by vue-cli-electron-builder github创建一个仓库，用于存储图床 github新建一个token，记得保存，后</description>
    </item>
    
    <item>
      <title>805 数组的均值分割</title>
      <link>https://Sentisfate.github.io/docs/if5zreidxkz5q1rq/</link>
      <pubDate>Mon, 14 Nov 2022 03:36:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/if5zreidxkz5q1rq/</guid>
      <description>思路： :::info 不难证明，分割后的两数的均值如果相等，则必定和原数组的均值相等。也就是说，题目可以转化成，能否找到数组中的一个子集，使得其均值为原数</description>
    </item>
    
    <item>
      <title>语雀文档转移至hexo</title>
      <link>https://Sentisfate.github.io/docs/bfb5q1kmggx8op6k/</link>
      <pubDate>Sun, 13 Nov 2022 12:16:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bfb5q1kmggx8op6k/</guid>
      <description>平常的话，一般都是在用语雀记笔记总结之类的，说实话，个人感觉写作体验非常好。这时候就在想，能不能将语雀文档转移到hexo博客上呢。一开始自己</description>
    </item>
    
    <item>
      <title>791 自定义字符串排序</title>
      <link>https://Sentisfate.github.io/docs/qluviqzt8po11w7g/</link>
      <pubDate>Sun, 13 Nov 2022 03:41:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qluviqzt8po11w7g/</guid>
      <description>/** * @param {string} order * @param {string} s * @return {string} */ var customSortString = function(order, s) { //使用sort排序，根据order 中的顺序，也就是索引大小来排序s中的字符 let chs=s.split(&amp;#39;&amp;#39;) chs.sort((a,b)=&amp;gt;order.indexOf(a)-order.indexOf(b)) return chs.join(&amp;#39;&amp;#39;) }; /** * @param {string} order * @param</description>
    </item>
    
    <item>
      <title>790 多米诺和托米诺平铺</title>
      <link>https://Sentisfate.github.io/docs/efp8uhkmquws5us0/</link>
      <pubDate>Sat, 12 Nov 2022 03:41:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/efp8uhkmquws5us0/</guid>
      <description>思路： :::info 对于从左向右铺前i列，第i列前的瓷砖全部铺满，则第i列有如下四种状态： 全空 上空 下空 全满 使用dp[i][j]来记录第i列状态为**j+</description>
    </item>
    
    <item>
      <title>1704 判断字符串的两半是否相似</title>
      <link>https://Sentisfate.github.io/docs/sq4vtznbr3p74u3y/</link>
      <pubDate>Fri, 11 Nov 2022 03:50:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sq4vtznbr3p74u3y/</guid>
      <description>思路： :::tips 首尾指针，一次遍历 ::: /** * @param {string} s * @return {boolean} */ var halvesAreAlike = function(s) { const yuanyin=[&amp;#39;a&amp;#39;,&amp;#39;e&amp;#39;,&amp;#39;i&amp;#39;,&amp;#39;o&amp;#39;,&amp;#39;u&amp;#39;] let start=0,end=s.length-1 let a=0,b=0 while(start&amp;lt;end){ if(yuanyin.includes(s[start].toLowerCase())) a++ if(yuanyin.includes(s[end].toLowerCase())) b++ start++ end-- } return a==b };</description>
    </item>
    
    <item>
      <title>算法知识</title>
      <link>https://Sentisfate.github.io/docs/odhrg8/</link>
      <pubDate>Fri, 11 Nov 2022 02:34:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/odhrg8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>864 获取所有钥匙的最短路径</title>
      <link>https://Sentisfate.github.io/docs/cgv9t38e7pqetmgr/</link>
      <pubDate>Thu, 10 Nov 2022 03:16:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cgv9t38e7pqetmgr/</guid>
      <description>思路： :::tips bfs+状态压缩 ::: /** * @param {string[]} grid * @return {number} */ const dirs = [[-1, 0], [1, 0], [0, -1], [0, 1]]; var shortestPathAllKeys = function(grid) { const m = grid.length, n = grid[0].length; let sx = 0, sy = 0; const keyToIndex = new Map(); for (let i = 0; i &amp;lt; m; ++i) { for (let j</description>
    </item>
    
    <item>
      <title>764. 最大加号标志</title>
      <link>https://Sentisfate.github.io/docs/cca7b3rtnhtr09hr/</link>
      <pubDate>Wed, 09 Nov 2022 03:23:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cca7b3rtnhtr09hr/</guid>
      <description>思路：动态规划 :::tips 求得以每格子为中心所能形成的最大加号的阶数，用dp[i][j]来表示。如何求呢？观察到加号中心格子上下左右都为1，也就是统计</description>
    </item>
    
    <item>
      <title>使用github和PicGO搭建图床</title>
      <link>https://Sentisfate.github.io/docs/hdgdo02m7w2g5gni/</link>
      <pubDate>Tue, 08 Nov 2022 12:17:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hdgdo02m7w2g5gni/</guid>
      <description>PicGO下载地址：GitHub - Molunerfinn/PicGo: A simple &amp;amp; beautiful tool for pictures uploading built by vue-cli-electron-builder github创建一个仓库，用于存储图床 github新建一个token，记得保存，后</description>
    </item>
    
    <item>
      <title>网页版制作QQ链接</title>
      <link>https://Sentisfate.github.io/docs/fwrmhewlg3tki7iu/</link>
      <pubDate>Tue, 08 Nov 2022 11:03:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fwrmhewlg3tki7iu/</guid>
      <description>tencent://AddContact/?fromId=45&amp;amp;fromSubId=1&amp;amp;subcmd=all&amp;amp;uin=8888888</description>
    </item>
    
    <item>
      <title>1684 统一一致字符串的数目</title>
      <link>https://Sentisfate.github.io/docs/mxxatuwwsv21y6pl/</link>
      <pubDate>Tue, 08 Nov 2022 04:16:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mxxatuwwsv21y6pl/</guid>
      <description>/** * @param {string} allowed * @param {string[]} words * @return {number} */ var countConsistentStrings = function(allowed, words) { let map=new Map() for(let i=0;i&amp;lt;allowed.length;i++){ map.set(allowed[i],allowed[i]) } let count=words.length for(let word of words){ for(let i=0;i&amp;lt;word.length;i++){ if(!map.has(word[i])){ count-- break } } } return count };</description>
    </item>
    
    <item>
      <title>816 模糊坐标</title>
      <link>https://Sentisfate.github.io/docs/rd51pbnq3gqyk9uq/</link>
      <pubDate>Mon, 07 Nov 2022 03:53:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rd51pbnq3gqyk9uq/</guid>
      <description>思路： :::tips 整体思路如下： 先不考虑非法数字，将字符串用逗号分割，得到横纵坐标。 对横纵坐标进行小数点分隔，同样不考虑非法数字，得到初步的结果。 对上</description>
    </item>
    
    <item>
      <title>769.最多能完成排序的块</title>
      <link>https://Sentisfate.github.io/docs/mye6x1r4himw493m/</link>
      <pubDate>Sun, 06 Nov 2022 04:11:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mye6x1r4himw493m/</guid>
      <description>/** * @param {number[]} arr * @return {number} */ var maxChunksToSorted = function(arr) { //索引为0-n-1 // 排序后为0 - n-1 // 只要比较索引和与前i项和是否一致即可 let iSum=0 let sum=0 let res=0 for(let i=0;i&amp;lt;arr.length;i++){ iSum+=i sum+=arr[i] if(iSum==sum) res++ } return res };</description>
    </item>
    
    <item>
      <title>Git 教程</title>
      <link>https://Sentisfate.github.io/docs/fggrbu/</link>
      <pubDate>Sat, 05 Nov 2022 07:59:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fggrbu/</guid>
      <description>配置 查看配置 git config -l 查看系统配置git config --system --list 查看用户自定义配置git config --global --list 配置用户名和邮箱 git config --global user.name &amp;#34;&amp;lt;username&amp;gt;&amp;#34; git config --global user.email &amp;#34;&amp;lt;your email&amp;gt;&amp;#34; 环境变量只是为了在任何地方使用</description>
    </item>
    
    <item>
      <title>1106 解析布尔表达式</title>
      <link>https://Sentisfate.github.io/docs/ubpu3ic3xs03zgiq/</link>
      <pubDate>Sat, 05 Nov 2022 04:11:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ubpu3ic3xs03zgiq/</guid>
      <description>/** * @param {string} expression * @return {boolean} */ var parseBoolExpr = function(expression) { // 用栈来记录 let bools=[]//记录逻辑值 let ops=[]//记录逻辑操作符 let len=expression.length for(let i=0;i&amp;lt;len;i++ ){ let c=expression[i] if(c==&amp;#39;,&amp;#39;) continue if(c==&amp;#39;!&amp;#39;||c==&amp;#39;|&amp;#39;||c==&amp;#39;&amp;amp;&amp;#39;) ops.push(c) else if(c!=&amp;#39;)&amp;#39;){ if(c==&amp;#39;(&amp;#39;) bools.push(c) //转</description>
    </item>
    
    <item>
      <title>754 到达终点数字</title>
      <link>https://Sentisfate.github.io/docs/agmq4d/</link>
      <pubDate>Fri, 04 Nov 2022 04:09:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/agmq4d/</guid>
      <description>思路： :::tips 先朝target方向一直走，如果刚好到达，则次数就是最小次数。否则当第一次超过target时，记超出的距离为d，有两种情况。 d为偶数</description>
    </item>
    
    <item>
      <title>hexo 搭建个人博客(静态）</title>
      <link>https://Sentisfate.github.io/docs/vq9pap/</link>
      <pubDate>Thu, 03 Nov 2022 13:54:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vq9pap/</guid>
      <description>一、前置要求 node.js v12版本以上 git 安装hexo 全局安装 npm install -g hexo-cli 局部安装 npm i hexo 将hexo所在node_modules配置环境变量之中即可使用hex</description>
    </item>
    
    <item>
      <title>1668 最大重复子字符串</title>
      <link>https://Sentisfate.github.io/docs/hi51z4/</link>
      <pubDate>Thu, 03 Nov 2022 03:26:36 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hi51z4/</guid>
      <description>/** * @param {string} sequence * @param {string} word * @return {number} */ var maxRepeating = function(sequence, word) { let len=sequence.length let n=word.length let max=0 for(let i=0;i&amp;lt;len;i++){ let count=0 let j=i while(sequence.slice(j,j+n)==word){ count++ j=j+n } max=Math.max(max,count) } return max };</description>
    </item>
    
    <item>
      <title>1620 网络信号最好的坐标</title>
      <link>https://Sentisfate.github.io/docs/dbf0g8/</link>
      <pubDate>Wed, 02 Nov 2022 03:27:35 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dbf0g8/</guid>
      <description>var bestCoordinate = function(towers, radius) { let xMax = Number.MIN_VALUE, yMax = -Number.MAX_VALUE; for (const tower of towers) { let x = tower[0], y = tower[1]; xMax = Math.max(xMax, x); yMax = Math.max(yMax, y); } let cx = 0, cy = 0; let maxQuality = 0; for (let x = 0; x &amp;lt;= xMax; x++) { for (let y = 0; y &amp;lt;= yMax; y++) { const coordinate = [x,</description>
    </item>
    
    <item>
      <title>1622 检查两个字符串数组是否相等</title>
      <link>https://Sentisfate.github.io/docs/dxcx4x/</link>
      <pubDate>Tue, 01 Nov 2022 02:27:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dxcx4x/</guid>
      <description>思路： :::tips 最容易想到的是，先拼接，再比较，时间复杂度为O(n+m)，空间复杂度O(n+m)如果再细想一下，字符串的第一个字符就不相等，此时拼接</description>
    </item>
    
    <item>
      <title>481 神奇的字符串</title>
      <link>https://Sentisfate.github.io/docs/uib8o6/</link>
      <pubDate>Mon, 31 Oct 2022 03:08:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uib8o6/</guid>
      <description>思路： :::tips 对于s=&amp;lsquo;1221121221&amp;hellip;&amp;rsquo;,可以看成是由1个1，2个2，2个1，1个2，1个1，2个2</description>
    </item>
    
    <item>
      <title>784 字母大小写全排列</title>
      <link>https://Sentisfate.github.io/docs/umnerg/</link>
      <pubDate>Sun, 30 Oct 2022 03:24:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/umnerg/</guid>
      <description>var letterCasePermutation = function(s) { const ans = []; const dfs = (arr, pos, res) =&amp;gt; { while (pos &amp;lt; arr.length &amp;amp;&amp;amp; isDigit(arr[pos])) { pos++; } if (pos === arr.length) { res.push(arr.join(&amp;#34;&amp;#34;)); return; } arr[pos] = String.fromCharCode(arr[pos].charCodeAt() ^ 32); dfs(arr, pos + 1, res); arr[pos] = String.fromCharCode(arr[pos].charCodeAt() ^ 32); dfs(arr, pos + 1, res); } dfs([...s], 0, ans); return ans; }; const isDigit = (ch) =&amp;gt; { return parseFloat(ch).toString() ===</description>
    </item>
    
    <item>
      <title>1773 统计匹配检索规则的物品数量</title>
      <link>https://Sentisfate.github.io/docs/kcw7fd/</link>
      <pubDate>Sat, 29 Oct 2022 03:31:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kcw7fd/</guid>
      <description>/** * @param {string[][]} items * @param {string} ruleKey * @param {string} ruleValue * @return {number} */ var countMatches = function(items, ruleKey, ruleValue) { let sum=0 let index if(ruleKey==&amp;#39;color&amp;#39;) index=1 else if(ruleKey==&amp;#39;type&amp;#39;) index=0 else index=2 for(let item of items){ if(item[index]==ruleValue) sum++ } return sum };</description>
    </item>
    
    <item>
      <title>907 子数组的最小值之和</title>
      <link>https://Sentisfate.github.io/docs/ix928k/</link>
      <pubDate>Fri, 28 Oct 2022 02:23:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ix928k/</guid>
      <description>思路： :::tips 对于最终结果，数组中的每个元素都有贡献度 贡献度取决于包含该元素的且该元素为子数组的最小值的个数。 个数如何求解以[1,3,4,2,6,</description>
    </item>
    
    <item>
      <title>862 和为k的最短子数组</title>
      <link>https://Sentisfate.github.io/docs/ca4rgy/</link>
      <pubDate>Wed, 26 Oct 2022 02:40:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ca4rgy/</guid>
      <description>var shortestSubarray = function(nums, k) { const n = nums.length; const preSumArr = new Array(n + 1).fill(0); for (let i = 0; i &amp;lt; n; i++) { preSumArr[i + 1] = preSumArr[i] + nums[i]; } let res = n + 1; const queue = []; for (let i = 0; i &amp;lt;= n; i++) { const curSum = preSumArr[i]; while (queue.length != 0 &amp;amp;&amp;amp; curSum - preSumArr[queue[0]] &amp;gt;= k) {</description>
    </item>
    
    <item>
      <title>934 最短的桥</title>
      <link>https://Sentisfate.github.io/docs/hl5n2u/</link>
      <pubDate>Tue, 25 Oct 2022 03:36:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hl5n2u/</guid>
      <description>var shortestBridge = function(grid) { const n = grid.length; const dirs = [[-1, 0], [1, 0], [0, 1], [0, -1]]; for (let i = 0; i &amp;lt; n; i++) { for (let j = 0; j &amp;lt; n; j++) { if (grid[i][j] === 1) { const queue = []; dfs(i, j, grid, queue); let step = 0; while (queue.length !== 0) { const sz = queue.length; for (let k =</description>
    </item>
    
    <item>
      <title>1768 交替合并字符串</title>
      <link>https://Sentisfate.github.io/docs/figwb6/</link>
      <pubDate>Sun, 23 Oct 2022 03:10:42 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/figwb6/</guid>
      <description>/** * @param {string} word1 * @param {string} word2 * @return {string} */ var mergeAlternately = function(word1, word2) { let res=&amp;#39;&amp;#39; let len1=word1.length let len2=word2.length let i=0 while(i&amp;lt;len1&amp;amp;&amp;amp;i&amp;lt;len2){ res+=word1[i] res+=word2[i] i++ } if(i==len1) res+=word2.slice(i) else res+=word1.slice(i) return res };</description>
    </item>
    
    <item>
      <title>1235 规划兼职工作</title>
      <link>https://Sentisfate.github.io/docs/rbnkyd/</link>
      <pubDate>Sat, 22 Oct 2022 03:47:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rbnkyd/</guid>
      <description>/** * @param {number[]} startTime * @param {number[]} endTime * @param {number[]} profit * @return {number} */ var jobScheduling = function(startTime, endTime, profit) { // 将工作按结束时间排序，使用dp[i]计算前i个兼职能获得的最大利润 const dp=[0] let n=startTime.length const jobs=new Array(n) for(let i=0;i&amp;lt;n;i++){ jobs[i]=[startTime[i],endTime[i],profit[i]] } jobs.sort((a,b)=&amp;gt;a[1]-b[1])</description>
    </item>
    
    <item>
      <title>901 股票价格的跨度</title>
      <link>https://Sentisfate.github.io/docs/ialb6c/</link>
      <pubDate>Fri, 21 Oct 2022 03:01:01 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ialb6c/</guid>
      <description>var StockSpanner = function() { //用单调栈来存储股票价格，保证栈内的价格单调减，如果下一天的价格大于等于栈顶的价格，则出栈，直至栈顶的价格大于下一天的价格，此时</description>
    </item>
    
    <item>
      <title>第k个语法符号</title>
      <link>https://Sentisfate.github.io/docs/lbu62x/</link>
      <pubDate>Thu, 20 Oct 2022 05:08:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lbu62x/</guid>
      <description>/** * @param {number} n * @param {number} k * @return {number} */ var kthGrammar = function(n, k) { if(k==1) return 0 if(k==2) return 1 // 针对k不为1的情况，第i行k如果小于 // 0 // 01 // 0110 // 01101001 // 0110100110010110 // 不难发现第n行有2^(n-1)</description>
    </item>
    
    <item>
      <title>1700 无法吃午餐的学生的数量</title>
      <link>https://Sentisfate.github.io/docs/qpgbag/</link>
      <pubDate>Wed, 19 Oct 2022 02:43:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qpgbag/</guid>
      <description>解法1. 暴力循环+标记 /** * @param {number[]} students * @param {number[]} sandwiches * @return {number} */ var countStudents = function(students, sandwiches) { // 什么时候所有学生都吃不到三明治，对于栈顶的三明治，students里没有对应的</description>
    </item>
    
    <item>
      <title>902 最大为N的数字组合</title>
      <link>https://Sentisfate.github.io/docs/fiei79/</link>
      <pubDate>Tue, 18 Oct 2022 11:27:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fiei79/</guid>
      <description>/** * @param {string[]} digits * @param {number} n * @return {number} */ var atMostNGivenDigitSet = function(digits, n) { let len=digits.length let nums=n.toString().split(&amp;#39;&amp;#39;) let d=nums.length // 比较n的最高位是否大于digits的最大值，如果大于，则说明任意组合都可以满足要求，则结</description>
    </item>
    
    <item>
      <title>940不同的子序列</title>
      <link>https://Sentisfate.github.io/docs/qtehqe/</link>
      <pubDate>Sat, 15 Oct 2022 05:15:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qtehqe/</guid>
      <description>/** * @param {string} s * @return {number} */ var distinctSubseqII = function(s) { //对于字符串s，使用dp[i]来存储以前i+1个字符组成的子序列的个数。 //对于dp[i]而言，子序列相较于d</description>
    </item>
    
    <item>
      <title>rem适配布局</title>
      <link>https://Sentisfate.github.io/docs/app1av/</link>
      <pubDate>Wed, 12 Oct 2022 10:59:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/app1av/</guid>
      <description>一、媒体查询 媒体查询(Media Query) CSS3新语法。 可以针对不同的屏幕尺寸设置不同的css样式 语法： @media mediatype and|not|only (media feature) { css-code } @media 声明 mediatype 媒体类型 all 所有设备</description>
    </item>
    
    <item>
      <title>817.链表组件</title>
      <link>https://Sentisfate.github.io/docs/vs0uxs/</link>
      <pubDate>Wed, 12 Oct 2022 08:40:49 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vs0uxs/</guid>
      <description>解法1 遍历链表 思路： :::tips 逐个遍历链表的结点，如果其中结点的值在数组中，则遍历下一个，查看是否在数组中，不满足，计数加一，满足则继续。 ::: /** * Definition for</description>
    </item>
    
    <item>
      <title>js</title>
      <link>https://Sentisfate.github.io/docs/gf6r4c/</link>
      <pubDate>Tue, 11 Oct 2022 10:00:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gf6r4c/</guid>
      <description></description>
    </item>
    
    <item>
      <title>前端集锦</title>
      <link>https://Sentisfate.github.io/docs/ea5ev0/</link>
      <pubDate>Tue, 11 Oct 2022 09:59:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ea5ev0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>870 优势洗牌 (田忌赛马)</title>
      <link>https://Sentisfate.github.io/docs/fbfmqx/</link>
      <pubDate>Sat, 08 Oct 2022 03:37:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fbfmqx/</guid>
      <description>解法1 贪心+排序 思路： 同层次的马进行比较，如果比的过就比，比不过，就去跟对方最高层次的马比较 临界条件： :::info ::: 证明： :::tips ::: /** * @param {number[]} nums1 * @param {number[]} nums2 * @return {number[]}</description>
    </item>
    
    <item>
      <title>921 使括号有效的最少添加</title>
      <link>https://Sentisfate.github.io/docs/exfk3v/</link>
      <pubDate>Fri, 07 Oct 2022 03:13:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/exfk3v/</guid>
      <description>/** * @param {string} s * @return {number} */ var minAddToMakeValid = function(s) { while(s.includes(&amp;#39;()&amp;#39;)) s=s.replace(&amp;#39;()&amp;#39;,&amp;#39;&amp;#39;) return s.length }; /** * @param {string} s * @return {number} */ var minAddToMakeValid = function(s) { const stack=[] for(let i=0;i&amp;lt;s.length;i++){ if(stack.length&amp;amp;&amp;amp;stack[stack.length-1]==&amp;#39;(&amp;#39;&amp;amp;&amp;amp;s[i]==&amp;#39;)&amp;#39;){ stack.pop() continue } stack.push(s[i]) } return stack.length };</description>
    </item>
    
    <item>
      <title>1800.最大升序子数组的和</title>
      <link>https://Sentisfate.github.io/docs/rn2czh/</link>
      <pubDate>Fri, 07 Oct 2022 02:51:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rn2czh/</guid>
      <description>/** * @param {number[]} nums * @return {number} */ var maxAscendingSum = function(nums) { let max=nums[0] let sum=nums[0] for(let i=0;i&amp;lt;nums.length-1;i++){ if(nums[i]&amp;lt;nums[i+1]){ sum+=nums[i+1] }else{ sum=nums[i+1] } if(max&amp;lt;sum){ max=sum } } return max };</description>
    </item>
    
    <item>
      <title>二叉搜索树的后序遍历序列</title>
      <link>https://Sentisfate.github.io/docs/krehyp/</link>
      <pubDate>Mon, 03 Oct 2022 02:50:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/krehyp/</guid>
      <description>题目描述 解法1 单调栈 思路： 后序遍历等于前序遍历的倒序 对于根右左顺序，下个结点如果大于根结点，则该结点为根结点的右子树，反之为左子树，此外，为</description>
    </item>
    
    <item>
      <title>grid 布局</title>
      <link>https://Sentisfate.github.io/docs/kgd3ec/</link>
      <pubDate>Sun, 02 Oct 2022 10:13:28 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kgd3ec/</guid>
      <description>:::tips grid 布局，将网页栅格化，通过设置行高，列宽，网格线等，来实现页面的布局 ::: 父元素设置 display:grid grid-template-columns:100px 100px 100px grid-template-rows:repeat(3,100px) 也可以设置1fr来实现响应式布局 跨行跨列 grid-template-areas:&#39;a a a&#39; &#39;b</description>
    </item>
    
    <item>
      <title>错题</title>
      <link>https://Sentisfate.github.io/docs/bzku3i/</link>
      <pubDate>Sun, 02 Oct 2022 07:22:28 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bzku3i/</guid>
      <description>input type=&amp;lsquo;tel&amp;rsquo; 输入电话号码 html5中用于显示已知范围的标量测量 CSS3动画需要用@keyframes规则和animation属性 comment 属于一个注释节点 c</description>
    </item>
    
    <item>
      <title>在LR字符串中交换相邻字符</title>
      <link>https://Sentisfate.github.io/docs/etngb5/</link>
      <pubDate>Sun, 02 Oct 2022 03:17:40 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/etngb5/</guid>
      <description>题目描述 解法1 思路： 对于题目中描述，L只能向左移动，R只能向右移动，移动的前提是，与之相邻的是X，且移动后相对位置不会发生变化，此外，注意到</description>
    </item>
    
    <item>
      <title>B-树</title>
      <link>https://Sentisfate.github.io/docs/fg8vvg/</link>
      <pubDate>Fri, 30 Sep 2022 04:29:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fg8vvg/</guid>
      <description>漫画：什么是B-树？</description>
    </item>
    
    <item>
      <title>完全二叉树</title>
      <link>https://Sentisfate.github.io/docs/xg419m/</link>
      <pubDate>Fri, 30 Sep 2022 03:41:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xg419m/</guid>
      <description>:::tips 只有最后一层的节点数不是满的，其余都是满的 ::: 满二叉树一般指完美二叉树</description>
    </item>
    
    <item>
      <title>分裂二叉树的最大乘积</title>
      <link>https://Sentisfate.github.io/docs/lhdlz8/</link>
      <pubDate>Thu, 29 Sep 2022 09:57:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lhdlz8/</guid>
      <description>题目描述 解法1 dfs 思路： 记所有节点的和为total，分裂后的两边的子树和为x,y要想使x*y最大，则x和y应该尽可能靠近total/2，也就是</description>
    </item>
    
    <item>
      <title>字符串轮转</title>
      <link>https://Sentisfate.github.io/docs/euvbr2/</link>
      <pubDate>Thu, 29 Sep 2022 08:51:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/euvbr2/</guid>
      <description>题目描述 解法1 拼接字符串 思路： 不难发现，s2如果是轮转的字符串的话，s2必定是s1+s1的子串 临界条件： :::info ::: 证明： :::tips ::: /** * @param {string} s1 * @param {string} s2 * @return</description>
    </item>
    
    <item>
      <title>vue响应式为什么不能监听数组</title>
      <link>https://Sentisfate.github.io/docs/xdmhs9/</link>
      <pubDate>Thu, 29 Sep 2022 08:06:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xdmhs9/</guid>
      <description>:::tips 不能监听数组索引和长度的变更 无法监听 属性的添加和删除 必须遍历对象的每个属性，Object.defineProperty()是对对象属性的操</description>
    </item>
    
    <item>
      <title>第K个数</title>
      <link>https://Sentisfate.github.io/docs/affkpu/</link>
      <pubDate>Wed, 28 Sep 2022 10:58:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/affkpu/</guid>
      <description>题目描述 解法1 三指针 思路： 对于丑数ugliy，除1外，可以由3，5，7相乘构成的数，可以如下三个数列构成 前一个丑数乘3 前一个丑数乘5 前一个丑</description>
    </item>
    
    <item>
      <title>vue2和vue3的区别</title>
      <link>https://Sentisfate.github.io/docs/plnmtv/</link>
      <pubDate>Wed, 28 Sep 2022 09:42:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/plnmtv/</guid>
      <description>生命周期 数据响应式的实现原理不同 数据的定义上 模板根节点 组合式api 逻辑碎片化</description>
    </item>
    
    <item>
      <title>Set WeakSet Map WeakMap</title>
      <link>https://Sentisfate.github.io/docs/yw8ow1/</link>
      <pubDate>Tue, 27 Sep 2022 15:27:11 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yw8ow1/</guid>
      <description>set 成员不能重复，可以遍历，add，delete，hasweakset 成员都是对象(引用)，不能遍历，有add，delete，has等方法Ma</description>
    </item>
    
    <item>
      <title>生命周期</title>
      <link>https://Sentisfate.github.io/docs/ngos12/</link>
      <pubDate>Tue, 27 Sep 2022 15:15:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ngos12/</guid>
      <description>React 组件的生命周期有三个不同的阶段： 初始渲染阶段：这是组件即将开始其生命之旅并进入 DOM 的阶段。 更新阶段：一旦组件被添加到 DOM，它只有在 prop 或状态</description>
    </item>
    
    <item>
      <title>Redux</title>
      <link>https://Sentisfate.github.io/docs/vfseow/</link>
      <pubDate>Tue, 27 Sep 2022 15:14:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vfseow/</guid>
      <description> Action Reducer Store View </description>
    </item>
    
    <item>
      <title>坑</title>
      <link>https://Sentisfate.github.io/docs/wcy7rb/</link>
      <pubDate>Tue, 27 Sep 2022 14:50:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wcy7rb/</guid>
      <description>vue动态赋值img的src绑定本地路径时，图片不能够加载出来，要使用require 类型相关 typeof 数组相关 二维数组 小数精度相关 同步异步执行顺序 JSON.parse,</description>
    </item>
    
    <item>
      <title>html5新特性</title>
      <link>https://Sentisfate.github.io/docs/xadeqe/</link>
      <pubDate>Tue, 27 Sep 2022 09:55:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xadeqe/</guid>
      <description>新增选择器 document.querySelector、document.querySelectorAll 拖拽释放(Drag and drop) API 媒体播放的</description>
    </item>
    
    <item>
      <title>前后端同时通信</title>
      <link>https://Sentisfate.github.io/docs/unewgw/</link>
      <pubDate>Tue, 27 Sep 2022 08:06:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/unewgw/</guid>
      <description>websocket，是一种全双工协议，不支持断线重连，通信机制相对复杂 ajax轮询，兼容性好，但大都是无用请求</description>
    </item>
    
    <item>
      <title>判定字符串是否重排</title>
      <link>https://Sentisfate.github.io/docs/wfgdpo/</link>
      <pubDate>Tue, 27 Sep 2022 02:05:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wfgdpo/</guid>
      <description>题目描述 解法1 哈希表统计词频 思路： 统计s1的词频，在遍历s2，将遇到的单词词频减1 临界条件： :::info ::: 证明： :::tips ::: /** * @param {string} s1 * @param {string} s2 * @return {boolean} */ var CheckPermutation = function(s1,</description>
    </item>
    
    <item>
      <title>vue和react的区别</title>
      <link>https://Sentisfate.github.io/docs/vv6zd9/</link>
      <pubDate>Mon, 26 Sep 2022 16:15:32 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vv6zd9/</guid>
      <description>本文共约1450字，阅读完大约需要3分钟 相同点 都使用了Virtual DOM（虚拟DOM）Virtual DOM + Diff算法。 当ui更新时，根据r</description>
    </item>
    
    <item>
      <title>渲染机制</title>
      <link>https://Sentisfate.github.io/docs/nhqqy3/</link>
      <pubDate>Mon, 26 Sep 2022 08:45:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nhqqy3/</guid>
      <description>解析url DNS查询，一般一次，如果脚本，字体，图片来自不同主机，可能需要多次 TCP 三次握手 SYN&amp;ndash;SYN,ACK&amp;ndash;ACK TLS协商 https 四次握手 ClientHello-&amp;gt;serverHello-&amp;gt;clientKey-&amp;gt;finished 服务端响应资源 浏览器解析资源</description>
    </item>
    
    <item>
      <title>性能优化</title>
      <link>https://Sentisfate.github.io/docs/vlhsfk/</link>
      <pubDate>Mon, 26 Sep 2022 08:21:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vlhsfk/</guid>
      <description>指标 加载速度，TTFB第一个请求响应时间，首次渲染，页面加载时间，DNS解析耗时，TCP连接耗时，SSL连接耗时 前端性能优化的手段 加载优化 减</description>
    </item>
    
    <item>
      <title>Element UI</title>
      <link>https://Sentisfate.github.io/docs/cy4hwh/</link>
      <pubDate>Mon, 26 Sep 2022 08:19:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cy4hwh/</guid>
      <description>修改默认样式的方法 全局引入css样式 style 不加scoped，写样式，实际上修改的是全局的 style coped， /deep/ 选择器{样式} element提供的内联样</description>
    </item>
    
    <item>
      <title>浏览器相关</title>
      <link>https://Sentisfate.github.io/docs/whtmy6/</link>
      <pubDate>Mon, 26 Sep 2022 07:44:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/whtmy6/</guid>
      <description>浏览器是多进程的， :::tips 进程是系统进行资源分配和调度的基本单位，是线程的容器。程序是指令、数据及其组织形式的描述，进程是程序的实体。 ::: 线程的哪些</description>
    </item>
    
    <item>
      <title>Webpack</title>
      <link>https://Sentisfate.github.io/docs/ib5aow/</link>
      <pubDate>Mon, 26 Sep 2022 07:22:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ib5aow/</guid>
      <description>babel原理：</description>
    </item>
    
    <item>
      <title>异或运算</title>
      <link>https://Sentisfate.github.io/docs/pglp0r/</link>
      <pubDate>Mon, 26 Sep 2022 03:20:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pglp0r/</guid>
      <description>异或（xor）是一个数学运算符，它应用于逻辑运算。计算机符号位xor，运算法则为：a⊕b = (¬a ∧ b) ∨ (a ∧¬b)，如果a，b两个值不同，异或</description>
    </item>
    
    <item>
      <title>消失的两个数</title>
      <link>https://Sentisfate.github.io/docs/vw5yde/</link>
      <pubDate>Mon, 26 Sep 2022 03:10:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vw5yde/</guid>
      <description>题目描述 解法1 排序+一次遍历 思路： 这种算法直观，但是不符合题意的O(n)时间复杂度，和O(1)空间复杂度 临界条件： :::info ::: 证明： :::tips ::: /** * @param {number[]} nums *</description>
    </item>
    
    <item>
      <title>块级作用域是如何实现的</title>
      <link>https://Sentisfate.github.io/docs/zi6977/</link>
      <pubDate>Sun, 25 Sep 2022 10:03:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zi6977/</guid>
      <description>var声明的变量，编译过程中会被放在变量环境let声明的变量，编译过程中会被放到块级作用域中，函数体内的块级作用域里let声明变量并没有存放</description>
    </item>
    
    <item>
      <title>链表</title>
      <link>https://Sentisfate.github.io/docs/hggh51/</link>
      <pubDate>Fri, 23 Sep 2022 03:28:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hggh51/</guid>
      <description>设计一个单链表 function ListNode(val,next){ this.val=val this.next=next||null } var MyLinkedList = function() { this.size=0 this.head=new ListNode(0,null) }; /** * @param {number} index * @return {number} */ MyLinkedList.prototype.get = function(index) { if (index &amp;lt; 0 || index &amp;gt;= this.size) { return -1; } let cur = this.head; for(let i=0;i&amp;lt;=index;i++){ cur=cur.next } return cur.val; }; /** * @param {number} val * @return {void} */ MyLinkedList.prototype.addAtHead = function(val) {</description>
    </item>
    
    <item>
      <title>keep-alive</title>
      <link>https://Sentisfate.github.io/docs/uy6oa0/</link>
      <pubDate>Thu, 22 Sep 2022 14:10:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uy6oa0/</guid>
      <description>思路： :::warning 缓存组件提升性能，生命周期发生变化，条件缓存，路由配合条件缓存 ::: :::tips 作用是缓存组件，提升性能，被缓存的组件有如下变化： 生命周期，不会再</description>
    </item>
    
    <item>
      <title>Js垃圾回收机制</title>
      <link>https://Sentisfate.github.io/docs/ggut6i/</link>
      <pubDate>Thu, 22 Sep 2022 13:47:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ggut6i/</guid>
      <description>标记清除 将活动的对象标记，一段时间后，未标记的对象进行清除 GC会在运行时，给内存中的所有变量加上一个标记，为0， 从根对象开始遍历，将非垃圾对</description>
    </item>
    
    <item>
      <title>三栏布局</title>
      <link>https://Sentisfate.github.io/docs/gfobeh/</link>
      <pubDate>Thu, 22 Sep 2022 11:39:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gfobeh/</guid>
      <description>思路： :::warning 圣杯布局，双飞翼布局，三栏高度不定，中间栏内容多先渲染 ::: :::tips 三栏布局，要求左右两边盒子宽度固定，中间盒子宽度自适应，高度由内容决定 中间</description>
    </item>
    
    <item>
      <title>在二叉树中分配硬币</title>
      <link>https://Sentisfate.github.io/docs/lbip3d/</link>
      <pubDate>Thu, 22 Sep 2022 05:00:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lbip3d/</guid>
      <description>题目描述 解法1 dfs 思路： 每个节点需要移动的金币数量为，左右节点需要移动的数量，加上其本身 临界��件： :::info ::: 证明： :::tips ::: /** * Definition for a binary tree node. * function TreeNode(val, left, right) {</description>
    </item>
    
    <item>
      <title>能否连接形成数组</title>
      <link>https://Sentisfate.github.io/docs/us8ylq/</link>
      <pubDate>Thu, 22 Sep 2022 02:16:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/us8ylq/</guid>
      <description>题目描述 解法1 DFS+剪枝 思路： 遍历arr，如果当前元素在pieces[i]中的第一个元素的话，就比较pieces[i]中的每个元素，如果与</description>
    </item>
    
    <item>
      <title>diff算法</title>
      <link>https://Sentisfate.github.io/docs/tges4k/</link>
      <pubDate>Wed, 21 Sep 2022 15:03:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tges4k/</guid>
      <description>思路： :::warning patch +sameVnode -&amp;gt;patchVnode ::: :::tips diff算法是比较虚拟DOM是否发生变化的算法。虚拟Dom就是一个js对象，用来模拟一个真实DOM。拿虚拟DOM直接渲染一</description>
    </item>
    
    <item>
      <title>Proxy</title>
      <link>https://Sentisfate.github.io/docs/by8rly/</link>
      <pubDate>Wed, 21 Sep 2022 14:24:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/by8rly/</guid>
      <description>/* var docCookies = ... get the &amp;#34;docCookies&amp;#34; object here: https://developer.mozilla.org/zh-CN/docs/DOM/document.cookie#A_little_framework.3A_a_complete_cookies_reader.2Fwriter_with_full_unicode_support */ var docCookies = new Proxy(docCookies, { &amp;#34;get&amp;#34;: function (oTarget, sKey) { return oTarget[sKey] || oTarget.getItem(sKey) || undefined; }, &amp;#34;set&amp;#34;: function (oTarget, sKey, vValue) { if (sKey in oTarget) { return false; } return oTarget.setItem(sKey, vValue); }, &amp;#34;deleteProperty&amp;#34;: function (oTarget, sKey) { if (sKey in oTarget) { return false; } return oTarget.removeItem(sKey); }, &amp;#34;enumerate&amp;#34;: function (oTarget, sKey) { return</description>
    </item>
    
    <item>
      <title>vue3.0实现数据双向绑定</title>
      <link>https://Sentisfate.github.io/docs/cftno2/</link>
      <pubDate>Wed, 21 Sep 2022 13:26:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cftno2/</guid>
      <description>思路： :::warning Proxy，数据拦截，劫持整个对象，返回一个新对象，13种劫持 ::: :::tips vue3使用了ES6新增的proxy来实现数据劫持，这种方式会返回</description>
    </item>
    
    <item>
      <title>事件循环</title>
      <link>https://Sentisfate.github.io/docs/msh4qq/</link>
      <pubDate>Wed, 21 Sep 2022 12:28:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/msh4qq/</guid>
      <description>思路： :::warning 同步任务-&amp;gt;微任务-&amp;gt;宏任务-&amp;gt;&amp;hellip; 宏任务有：setTimeOut,setInterval,setIm</description>
    </item>
    
    <item>
      <title>hashRouter和historyRouter的区别</title>
      <link>https://Sentisfate.github.io/docs/ttymfi/</link>
      <pubDate>Wed, 21 Sep 2022 11:58:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ttymfi/</guid>
      <description>思路： :::warning #，window.onhashchange，history.pushState，window.onpopstate ::: :::tips 都是实现的前端</description>
    </item>
    
    <item>
      <title>变量提升，暂时性死区</title>
      <link>https://Sentisfate.github.io/docs/mwyvvh/</link>
      <pubDate>Wed, 21 Sep 2022 11:31:42 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mwyvvh/</guid>
      <description>思路： :::warning var声明的变量，function声明的函数会将函数名进行提前，let，const不会 ::: :::tips 只有变量名声明被提升到前，赋值操作不会，变</description>
    </item>
    
    <item>
      <title>未知宽高元素水平垂直居中</title>
      <link>https://Sentisfate.github.io/docs/vh9d4o/</link>
      <pubDate>Wed, 21 Sep 2022 11:24:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vh9d4o/</guid>
      <description>思路： :::warning 定位+位移，flex，grid，text-align+line-height， ::: display: flex; justify-content: center; align-items: center; display: grid; justify-content: center; align-items: center; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);</description>
    </item>
    
    <item>
      <title>尺寸设置的单位</title>
      <link>https://Sentisfate.github.io/docs/sf4ygx/</link>
      <pubDate>Wed, 21 Sep 2022 11:18:28 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sf4ygx/</guid>
      <description>思路： :::warning px,%,em,rem,vw,vh ::: px % em rem vw/vh</description>
    </item>
    
    <item>
      <title>this指向</title>
      <link>https://Sentisfate.github.io/docs/ipqy4g/</link>
      <pubDate>Wed, 21 Sep 2022 11:05:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ipqy4g/</guid>
      <description>思路： :::warning 全局执行上下文，函数执行上下文，严格模式，对象的方法，箭头函数无this，继承this ::: :::tips this存在的场景有三种，全局，函数和ev</description>
    </item>
    
    <item>
      <title>HTML语义化</title>
      <link>https://Sentisfate.github.io/docs/iz64gt/</link>
      <pubDate>Wed, 21 Sep 2022 10:44:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/iz64gt/</guid>
      <description>思路： :::warning 语义化标签，可读性强，利于SEO ::: :::tips headerfootermainarticleaside :::</description>
    </item>
    
    <item>
      <title>call apply bind</title>
      <link>https://Sentisfate.github.io/docs/cfbkht/</link>
      <pubDate>Wed, 21 Sep 2022 10:36:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cfbkht/</guid>
      <description>思路： :::tips call，apply改变this指向会调用函数，bind不调用，而是返回一个新的函数 ::: function foo(a, b) { console.log(this); return a + b; } // foo(1, 2); const obj = { name: &amp;#39;zhangsan&amp;#39; }; foo.apply(obj, [1, 2]);</description>
    </item>
    
    <item>
      <title>箭头函数</title>
      <link>https://Sentisfate.github.io/docs/sdlpxa/</link>
      <pubDate>Wed, 21 Sep 2022 10:29:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sdlpxa/</guid>
      <description>思路： :::success 没有this，this为父级上下文的this，没有原型，没有arguments，不能用super，call，apply，bind写法</description>
    </item>
    
    <item>
      <title>浮动</title>
      <link>https://Sentisfate.github.io/docs/obhpc7/</link>
      <pubDate>Wed, 21 Sep 2022 10:11:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/obhpc7/</guid>
      <description>思路： :::warning 脱标，向左向右浮动，父元素盒子塌陷，设置父元素overflowhidden，伪元素清除浮动 ::: :::tips 浮动元素可以设置宽高，父元素塌陷可以用</description>
    </item>
    
    <item>
      <title>null 和undefined的区别</title>
      <link>https://Sentisfate.github.io/docs/plmlz0/</link>
      <pubDate>Wed, 21 Sep 2022 09:34:22 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/plmlz0/</guid>
      <description>思路： :::success 类型，==，！==，二进制层考虑 ::: :::tips undefined是变量的初始状态，类型为undefined，变量未赋值，函数无返回值，函数的形</description>
    </item>
    
    <item>
      <title>相似度为k的字符串</title>
      <link>https://Sentisfate.github.io/docs/aet49g/</link>
      <pubDate>Wed, 21 Sep 2022 04:49:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/aet49g/</guid>
      <description>题目描述 解法1 BFS 思路： 不妨对s1进行交换操作，我们对s1的每个字符c1进行比较操作，如果和s2的字符c2相等的话，就跳过，比较下一个字符，如</description>
    </item>
    
    <item>
      <title>回溯</title>
      <link>https://Sentisfate.github.io/docs/pkmx65/</link>
      <pubDate>Tue, 20 Sep 2022 03:52:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pkmx65/</guid>
      <description>回溯算法框架需要思考3个问题 路径，已做出的选择 选择列表 结束条件</description>
    </item>
    
    <item>
      <title>划分为k个相等的子集</title>
      <link>https://Sentisfate.github.io/docs/rg1gc4/</link>
      <pubDate>Tue, 20 Sep 2022 03:51:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rg1gc4/</guid>
      <description>题目描述 解法1 回溯+剪枝 思路： 目标是要由k个集合，k个集合和相等，不妨记为m，先排除掉一些不可能的情况，假设nums必定能分成k份，每个元素</description>
    </item>
    
    <item>
      <title>js手写</title>
      <link>https://Sentisfate.github.io/docs/atv5zt/</link>
      <pubDate>Mon, 19 Sep 2022 13:44:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/atv5zt/</guid>
      <description>实现快速排序 基本思想是:通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这</description>
    </item>
    
    <item>
      <title>实现异步的方法</title>
      <link>https://Sentisfate.github.io/docs/at0qk6/</link>
      <pubDate>Mon, 19 Sep 2022 11:51:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/at0qk6/</guid>
      <description>思路： :::warning 回调，事件监听，定时器，Promise，generators/yeild，async/await ::: :::tips 回调是实现异步的最基本的方法，优</description>
    </item>
    
    <item>
      <title>样式优先级的规则</title>
      <link>https://Sentisfate.github.io/docs/ggtb21/</link>
      <pubDate>Mon, 19 Sep 2022 11:46:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ggtb21/</guid>
      <description>!import 优先级最高 需要覆盖全站或外部 CSS 的特定页面中使用 !important 行内样式 id选择器 类选择器 元素选择器 通配符 继承样式没有权值 同级，后写的覆盖先写的 不同样式属</description>
    </item>
    
    <item>
      <title>根据中缀表达式构造二叉表达式树</title>
      <link>https://Sentisfate.github.io/docs/tp59sp/</link>
      <pubDate>Mon, 19 Sep 2022 09:35:17 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tp59sp/</guid>
      <description>题目描述 解法1. 双栈法 思路： 观察二叉表达树，发现所有数字均为叶子节点。数字之间的操��符存在优先级。二叉表达树的中序遍历为运算字符串，可以先</description>
    </item>
    
    <item>
      <title>完美二叉树</title>
      <link>https://Sentisfate.github.io/docs/qg6gcf/</link>
      <pubDate>Mon, 19 Sep 2022 02:13:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qg6gcf/</guid>
      <description>一棵深度为k，且有 个节点的二叉树，称为完美二叉树（Perfect Binary Tree）。这种树的特点是每一层上的节点数都是最大节点数。 性质 共有 个结点 结</description>
    </item>
    
    <item>
      <title>为什么0.1&#43;0.2&gt;0.3</title>
      <link>https://Sentisfate.github.io/docs/vy5r28/</link>
      <pubDate>Sun, 18 Sep 2022 12:18:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vy5r28/</guid>
      <description>思路： :::warning 二进制，符号位，指数位，尾数位 ::: :::tips 二进制表示变量，第一位是符号位，后11位是指数位，也就是小数点移动的位数，最后52位来表示尾数0.</description>
    </item>
    
    <item>
      <title>如何判断变量的类型</title>
      <link>https://Sentisfate.github.io/docs/cnem9r/</link>
      <pubDate>Sun, 18 Sep 2022 11:51:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cnem9r/</guid>
      <description>思路： :::warning typeof，instanceof，Object.prototype.toString.call()，constructor ::: :::tips typeof 能</description>
    </item>
    
    <item>
      <title>vuex是什么，有什么属性</title>
      <link>https://Sentisfate.github.io/docs/rqoane/</link>
      <pubDate>Sun, 18 Sep 2022 08:21:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/rqoane/</guid>
      <description>思路： :::warning 公共数据，state，mutations，getters，actions，module，store.commit，store.dis</description>
    </item>
    
    <item>
      <title>BFC</title>
      <link>https://Sentisfate.github.io/docs/xnp5at/</link>
      <pubDate>Sun, 18 Sep 2022 07:33:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xnp5at/</guid>
      <description>思路： :::warning 块级格式上下文，独立的渲染区域，不会影响边界外的元素，形成条件：display，float，position，overflow，布局</description>
    </item>
    
    <item>
      <title>你可以获得最大的硬币数</title>
      <link>https://Sentisfate.github.io/docs/ve9l1t/</link>
      <pubDate>Sun, 18 Sep 2022 07:25:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ve9l1t/</guid>
      <description>题目描述 解法1 贪心+排序 思路： 对于当前这堆硬币来说，Alice一定会取走最多的那一堆硬币。如果我们不在Alice取的那轮中取走第二多的硬币，</description>
    </item>
    
    <item>
      <title>二叉树的秩</title>
      <link>https://Sentisfate.github.io/docs/tal4g3/</link>
      <pubDate>Sun, 18 Sep 2022 03:30:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tal4g3/</guid>
      <description>我们定义一棵二叉树的秩为从为从根节点开始到其叶节点中最长的一条树链上结点的个数。空节点秩为0</description>
    </item>
    
    <item>
      <title>并查集</title>
      <link>https://Sentisfate.github.io/docs/enywr2/</link>
      <pubDate>Sun, 18 Sep 2022 03:12:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/enywr2/</guid>
      <description>算法学习笔记(1) : 并查集并查集（英文：Disjoint-set data structure，直译为不交集数据结构）是一种数据结构，用于处理一些不交</description>
    </item>
    
    <item>
      <title>最大人工岛</title>
      <link>https://Sentisfate.github.io/docs/zh3dhg/</link>
      <pubDate>Sun, 18 Sep 2022 02:59:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zh3dhg/</guid>
      <description>题目描述 解法1 枚举+回溯 思路： 最大的岛是在我们改变0为1后的那一格所在岛屿的面积。因此只要找出所有的可以改0为1的位置，从该位置向外搜索岛屿</description>
    </item>
    
    <item>
      <title>CSRF 跨域请求伪造</title>
      <link>https://Sentisfate.github.io/docs/efgud1/</link>
      <pubDate>Sat, 17 Sep 2022 14:59:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/efgud1/</guid>
      <description>跨站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并执行一些操作（如发邮件，发消息，甚至财产操作</description>
    </item>
    
    <item>
      <title>跨域</title>
      <link>https://Sentisfate.github.io/docs/ly1vd6/</link>
      <pubDate>Sat, 17 Sep 2022 14:15:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ly1vd6/</guid>
      <description>思路： :::tips 同源策略，协议，域名，端口，corsjsonppostmessage ::: :::info 跨域是指浏览器当前页面某个接口请求地址和当前 的地址在，协议，</description>
    </item>
    
    <item>
      <title>说一说Promise是什么</title>
      <link>https://Sentisfate.github.io/docs/al3774/</link>
      <pubDate>Sat, 17 Sep 2022 13:35:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/al3774/</guid>
      <description>思路 :::tips 微任务，异步，三种状态，then，catch，Promise.resolve()，Promise.reject().Promise.a</description>
    </item>
    
    <item>
      <title>构造二叉树</title>
      <link>https://Sentisfate.github.io/docs/fwk0qq/</link>
      <pubDate>Sat, 17 Sep 2022 08:25:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fwk0qq/</guid>
      <description>前序，中序 var buildTree = function (preorder, inorder) { const helper = (preorder, inorder) =&amp;gt; { //中序遍历为空时，说明此节点为空,没有左右子树 if (inorder.length == 0) { return null; } let rootVal = preorder.shift(); let root = new TreeNode(rootVal); //找到根节点的左右</description>
    </item>
    
    <item>
      <title>获得二叉树的深度</title>
      <link>https://Sentisfate.github.io/docs/tk5af4/</link>
      <pubDate>Sat, 17 Sep 2022 08:19:32 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tk5af4/</guid>
      <description>const dfs = (root, depth) =&amp;gt; { if (root == null) { return depth - 1; } depth = Math.max(dfs(root.left, depth + 1), dfs(root.right, depth + 1)); return depth; };</description>
    </item>
    
    <item>
      <title>格式化时间戳</title>
      <link>https://Sentisfate.github.io/docs/gs3x1d/</link>
      <pubDate>Fri, 16 Sep 2022 14:43:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gs3x1d/</guid>
      <description>/** * yyyy-mm-dd-HH-MM-ss */ function useTime(timestamp) { const date = new Date(timestamp); let map = new Map(); const y = date.getFullYear(); const month = date.getMonth() + 1; const d = date.getDate(); const h = date.getHours(); const m = date.getMinutes(); const s = date.getSeconds(); map.set(&amp;#39;yyyy&amp;#39;, y); map.set(&amp;#39;mm&amp;#39;, month); map.set(&amp;#39;dd&amp;#39;, d); map.set(&amp;#39;HH&amp;#39;, h); map.set(&amp;#39;MM&amp;#39;, m); map.set(&amp;#39;ss&amp;#39;, s); return map; } function replace(str, substr, rpstr) { while (str.includes(substr)) { str = str.replace(substr, rpstr);</description>
    </item>
    
    <item>
      <title>击鼓传花</title>
      <link>https://Sentisfate.github.io/docs/qp246u/</link>
      <pubDate>Fri, 16 Sep 2022 14:07:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qp246u/</guid>
      <description>队列 function playGame(p, s) { while (p.length &amp;gt; 1) { for (let i = 0; i &amp;lt; s; i++) { let id = p.shift(); p.push(id); } p.shift(); } return p[0]; } let p = []; for (let i = 0; i &amp;lt; 100; i++) { p.push(i); } console.log(playGame(p, 10)); function playGame(p, s) { if (p.length == 1) { return p[0]; } for (let i = 0; i &amp;lt; s;</description>
    </item>
    
    <item>
      <title>对于闭包的理解</title>
      <link>https://Sentisfate.github.io/docs/efn3nu/</link>
      <pubDate>Fri, 16 Sep 2022 14:01:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/efn3nu/</guid>
      <description>词法环境是一种规范类型，用于根据ECMAScript代码的词法嵌套结构定义标识符与特定变量和函数的关联。词法环境由环境记录和对外部词法环境的</description>
    </item>
    
    <item>
      <title>Js数据类型</title>
      <link>https://Sentisfate.github.io/docs/uxsgnw/</link>
      <pubDate>Fri, 16 Sep 2022 13:47:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uxsgnw/</guid>
      <description>基本数据类型 number，string，boolean，undefined，null 引用 object，array，function，Date</description>
    </item>
    
    <item>
      <title>cookie sessionStorage localStorage的区别</title>
      <link>https://Sentisfate.github.io/docs/dvq8fn/</link>
      <pubDate>Fri, 16 Sep 2022 13:34:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dvq8fn/</guid>
      <description>生命周期 存储大小 存储位置 写入方式 数据共享 发送时是否携带 应用场景 cookie expires字段设置的失效时间，如果时浏览器端生成的，默认浏览器关闭时失效</description>
    </item>
    
    <item>
      <title>矩形面积2</title>
      <link>https://Sentisfate.github.io/docs/ufkm2w/</link>
      <pubDate>Fri, 16 Sep 2022 10:02:22 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ufkm2w/</guid>
      <description>题目描述 解法1 扫描线 思路： 用一个竖直扫描线来扫描这些矩形，则，矩形的面积为扫描线扫到矩形时的长度，乘以��动的距离 之和。 扫描线开始和结束的位</description>
    </item>
    
    <item>
      <title>扫描线</title>
      <link>https://Sentisfate.github.io/docs/vuagrz/</link>
      <pubDate>Fri, 16 Sep 2022 03:56:32 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vuagrz/</guid>
      <description>简介 扫描线一般运用在图形上面，用一条线在整个图上扫一遍，一般用于求解图形面积，周长问题。</description>
    </item>
    
    <item>
      <title>灯泡开关</title>
      <link>https://Sentisfate.github.io/docs/wdykm1/</link>
      <pubDate>Thu, 15 Sep 2022 04:30:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wdykm1/</guid>
      <description>题目描述 解法1 思路： 对于一个灯泡而言，只存在两种状态开1关0，当对开着的灯泡进行开关时，操作次数为奇数时，灯泡为0，操作次数为偶数时为1相当</description>
    </item>
    
    <item>
      <title>螺旋矩阵</title>
      <link>https://Sentisfate.github.io/docs/ha2ruo/</link>
      <pubDate>Wed, 14 Sep 2022 10:02:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ha2ruo/</guid>
      <description>题目描述 leetcode 解法1 模拟 思路： 将顺时针拆分为向右，向下，向左，向上四部分 临界条件： :::info ::: 证明： :::tips ::: /** * @param {number[][]} matrix * @return {number[]} */ var spiralOrder = function(matrix) { // 思路 let m=matrix.length let n=matrix[0].length let total=m*n let</description>
    </item>
    
    <item>
      <title>字符串相加</title>
      <link>https://Sentisfate.github.io/docs/fta9nb/</link>
      <pubDate>Wed, 14 Sep 2022 07:38:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fta9nb/</guid>
      <description>题目描述 leetcode 解法1 思路： 从后往前逐个相加，并记录进位 临界条件： :::info ::: 证明： :::tips ::: /** * @param {string} num1 * @param {string} num2 * @return {string} */ var addStrings = function(num1, num2) { let add=0 let str=&amp;#39;&amp;#39; let len1=num1.length let len2=num2.length let i=len1-1,j=len2-1 while(i&amp;gt;=0||j&amp;gt;=0){ let n1=Number(num1[i--])||0 let</description>
    </item>
    
    <item>
      <title>eval</title>
      <link>https://Sentisfate.github.io/docs/kz42bb/</link>
      <pubDate>Wed, 14 Sep 2022 07:17:40 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kz42bb/</guid>
      <description>eval() 函数会将传入的字符串当做 JavaScript 代码进行执行。能不用尽量不用，效率低，危险性高</description>
    </item>
    
    <item>
      <title>和等于k的最长子数组长度</title>
      <link>https://Sentisfate.github.io/docs/ms3cg9/</link>
      <pubDate>Wed, 14 Sep 2022 03:20:43 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ms3cg9/</guid>
      <description>题目描述 leetcode 解法1 滑动窗口 思路： 利用滑动窗口来枚举所有子数组，但是时间复杂度为O(n2),会超时，超时原因在于进行了大量的重复计算求和操作 临界</description>
    </item>
    
    <item>
      <title>最大交换</title>
      <link>https://Sentisfate.github.io/docs/wva4uo/</link>
      <pubDate>Tue, 13 Sep 2022 05:24:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wva4uo/</guid>
      <description>题目描述 leetcode 解法1 枚举+数组 思路：希望把最大的数字和第一个交换，不能则和第二个交换&amp;hellip; 将数字拆分为���单个数字构成的数组，逐个比</description>
    </item>
    
    <item>
      <title>ES6...</title>
      <link>https://Sentisfate.github.io/docs/lu9htm/</link>
      <pubDate>Mon, 12 Sep 2022 10:26:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lu9htm/</guid>
      <description>ES6,7,8&amp;hellip;11新特性 let，const 模板语法 箭头函数 promise 解构，展开 class super 模块化，export import generator for of，in ES7 includes 指数操作符</description>
    </item>
    
    <item>
      <title>事件</title>
      <link>https://Sentisfate.github.io/docs/lxtsig/</link>
      <pubDate>Mon, 12 Sep 2022 08:48:43 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lxtsig/</guid>
      <description>事件冒泡 DOM0和IE支持 从事件源向父级，一直到根元素 某元素某类型事件被触发，父元素同类型事件同样会触发 事件捕获 DOM2支持 从根元素HTML</description>
    </item>
    
    <item>
      <title>ES3</title>
      <link>https://Sentisfate.github.io/docs/lf5y3c/</link>
      <pubDate>Mon, 12 Sep 2022 05:59:30 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lf5y3c/</guid>
      <description>==与=== ==会触发隐式转换 对象转数字 先尝试调用对象的valueOf方法，如果有就返回返回值 调用对象的toString方法，返回将返回值原</description>
    </item>
    
    <item>
      <title>特殊数组的特征值</title>
      <link>https://Sentisfate.github.io/docs/pvggig/</link>
      <pubDate>Mon, 12 Sep 2022 04:00:43 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pvggig/</guid>
      <description>题目描述 leetcode 解法1 排序+枚举 思路： 将数组按降序排序，此时，对于第x个元素。如果满足 时，x为该数组的特征值。 临界条件： :::info 对于数组的第一个元素，如</description>
    </item>
    
    <item>
      <title>雇佣k名工人的最低成本</title>
      <link>https://Sentisfate.github.io/docs/gucqa0/</link>
      <pubDate>Sun, 11 Sep 2022 05:32:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gucqa0/</guid>
      <description>题目描述 解法1 排序+枚举 思路： 每个工人都有可能成为其中的一员 多名工人的工资应如何发？ 对于每个工人来说要尽可能少的发工资，也就是发最低期望的工</description>
    </item>
    
    <item>
      <title>N皇后</title>
      <link>https://Sentisfate.github.io/docs/xnq6nf/</link>
      <pubDate>Sat, 10 Sep 2022 14:07:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xnq6nf/</guid>
      <description>题目描述 leetcode 解法1 枚举+递归+回溯 思路： 枚举出所有可能的排列，并将可能的排列方式格式化输出。 可以用一个数组来存储每个皇后的位置，最后用每种可能</description>
    </item>
    
    <item>
      <title>字符串匹配算法--sunday</title>
      <link>https://Sentisfate.github.io/docs/zn1map/</link>
      <pubDate>Sat, 10 Sep 2022 12:27:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zn1map/</guid>
      <description>字符串匹配——Sunday算法_Switchvov的博客-CSDN博客_sunday 算法Sunday算法是从前往后匹配，在匹配失败时关注的是</description>
    </item>
    
    <item>
      <title>内存管理</title>
      <link>https://Sentisfate.github.io/docs/twheiq/</link>
      <pubDate>Sat, 10 Sep 2022 12:22:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/twheiq/</guid>
      <description>十年大佬讲述，操作系统内存管理(图文详解)</description>
    </item>
    
    <item>
      <title>数据库</title>
      <link>https://Sentisfate.github.io/docs/ox327m/</link>
      <pubDate>Sat, 10 Sep 2022 11:26:36 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ox327m/</guid>
      <description>数据库的特点有：数据的结构化，数据的共享性高，冗余度低，易扩充，数据独立性高，数据由DBMS统一管理和控制。</description>
    </item>
    
    <item>
      <title>进程的调度模式</title>
      <link>https://Sentisfate.github.io/docs/uhvgzb/</link>
      <pubDate>Sat, 10 Sep 2022 10:14:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uhvgzb/</guid>
      <description>进程的五种状态 创建态 就绪态 运行态 阻塞态 结束态 就绪态转换成运行态就是进程的调度 关于阻塞的进程 :::warning 正在进行的进程由于发生某事件而暂时无法继续执行时</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>https://Sentisfate.github.io/docs/fu5oww/</link>
      <pubDate>Sat, 10 Sep 2022 10:12:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fu5oww/</guid>
      <description>直接插入排序排序算法——直接插入排序（图文超详细！）_隰有游龙的博客-CSDN博客_直接插入排序</description>
    </item>
    
    <item>
      <title>修剪二叉搜索树</title>
      <link>https://Sentisfate.github.io/docs/yrm33a/</link>
      <pubDate>Sat, 10 Sep 2022 05:37:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yrm33a/</guid>
      <description>题目描述 leetcode 解法1 dfs 思路： 利用二叉搜索树的性质，左子树小于根节点小于右子树。 对于二叉搜索���而言，修剪后的可以看成为满足条件的根节点，左结点</description>
    </item>
    
    <item>
      <title>二叉搜索树转双向循环链表</title>
      <link>https://Sentisfate.github.io/docs/cwyq0a/</link>
      <pubDate>Fri, 09 Sep 2022 15:43:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cwyq0a/</guid>
      <description>题目描述 leetcode 解法1 dfs 思路： 利用中序遍历的结果可以获得双向链表的顺序。 问题的关���是将遍历的结点连接起来，可以将遍历过程中的上一个结点记忆下来</description>
    </item>
    
    <item>
      <title>接雨水</title>
      <link>https://Sentisfate.github.io/docs/xq6bzc/</link>
      <pubDate>Fri, 09 Sep 2022 09:50:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xq6bzc/</guid>
      <description>题目描述 解法1 动态规划 思路： 木桶效应，每个格子能接到的水由它两边最高的一块板中较短的一个决定。 可以用一个数组dp[i]来记录每个格子能接到的</description>
    </item>
    
    <item>
      <title>供暖器</title>
      <link>https://Sentisfate.github.io/docs/vvwv2n/</link>
      <pubDate>Fri, 09 Sep 2022 08:35:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vvwv2n/</guid>
      <description>题目描述 解法1 排序+双指针 思路： 目标要让所有房子都能供暖，因此可以查找每个房子到供暖器的最短距离。可以用动��规划来做，这里给出一种优化方案</description>
    </item>
    
    <item>
      <title>简化路径</title>
      <link>https://Sentisfate.github.io/docs/eabyzg/</link>
      <pubDate>Fri, 09 Sep 2022 04:06:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/eabyzg/</guid>
      <description>题目描述 解法1 用栈来模拟 思路： 将path进行按**/**分割，去除掉空字符串。栈为空时，为根文件夹， 当执行操作为..时，出栈一个元素， 执行操</description>
    </item>
    
    <item>
      <title>文件夹操作日志搜集器</title>
      <link>https://Sentisfate.github.io/docs/qf93yk/</link>
      <pubDate>Fri, 09 Sep 2022 03:11:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qf93yk/</guid>
      <description>题目描述 leetcode 解法1 使用栈来维护操作关系 思路： 栈为空时，为根文件夹， 当执行操作为../时，出栈一个元素， 执行操作为./时，不进行操作， 执行操作为</description>
    </item>
    
    <item>
      <title>腐烂的橘子</title>
      <link>https://Sentisfate.github.io/docs/yhw8qp/</link>
      <pubDate>Thu, 08 Sep 2022 17:19:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yhw8qp/</guid>
      <description>题目描述 leetcode 解法1 广度优先遍历bfs 思路： 查找的是感染所有新鲜橘子的最小时间，也就是说每次查找完腐烂的橘子周围的橘子再遍历后面的橘子，初始网格</description>
    </item>
    
    <item>
      <title>颜色分类</title>
      <link>https://Sentisfate.github.io/docs/ny3kcn/</link>
      <pubDate>Thu, 08 Sep 2022 05:12:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ny3kcn/</guid>
      <description>题目描述 leetcode 解法1 冒泡排序 思路： 将大值冒泡到后面 临界条件： :::info ::: 证明： :::tips ::: /** * @param {number[]} nums * @return {void} Do not return anything, modify nums in-place instead. */ var sortColors = function(nums) { // 使用冒泡排序 let len=nums.length for(let i=0;i&amp;lt;len;i++){ let min</description>
    </item>
    
    <item>
      <title>MySql</title>
      <link>https://Sentisfate.github.io/docs/qkv9al/</link>
      <pubDate>Thu, 08 Sep 2022 04:21:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qkv9al/</guid>
      <description>数据类型 整形 tinyint 8位二进制 1个字节 2^8 smallint 2个 2^16 int/integer 4个 bigint 8个 浮点型 float(m,d) m精度，表示总位数，d标度，表示小数点后的位数 4个字节 double(m,d) 8个字节 decimal(m,d) --钱常用类</description>
    </item>
    
    <item>
      <title>优美的排列</title>
      <link>https://Sentisfate.github.io/docs/qgrtx5/</link>
      <pubDate>Thu, 08 Sep 2022 04:01:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qgrtx5/</guid>
      <description>题目描述 leetcode 解法1 思路： 1~n个数最多有n-1种不同的差值，为1~n-1 不妨将n个数按升序排列 此时k为1。 当k为k时，可以这样排列 此时，从第n</description>
    </item>
    
    <item>
      <title>寻找峰值</title>
      <link>https://Sentisfate.github.io/docs/vv2lav/</link>
      <pubDate>Wed, 07 Sep 2022 14:26:22 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vv2lav/</guid>
      <description>题目描述 leetcode 解法1 思路： 要使时间复杂度为**O(log(n))**** 则考虑使用二分查找。** 每次查找数组的中间值，比较它和两边的大小，若满足</description>
    </item>
    
    <item>
      <title>数组相关</title>
      <link>https://Sentisfate.github.io/docs/xh02zf/</link>
      <pubDate>Wed, 07 Sep 2022 13:12:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xh02zf/</guid>
      <description>常用方法：获取最大值最小值及其相关索引 const getMaxAndMin=(nums)=&amp;gt;{ let max=nums[0] let maxi=0 let min=nums[0] let mini=0 nums.forEach((item,i)=&amp;gt;{ if(max&amp;lt;item){ max=item maxi=i }else if(min&amp;gt;item){ min=item mini=i } }) return [max,maxi,min,mini] }</description>
    </item>
    
    <item>
      <title>股票的最大利润</title>
      <link>https://Sentisfate.github.io/docs/uzxgtg/</link>
      <pubDate>Wed, 07 Sep 2022 13:06:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uzxgtg/</guid>
      <description>题目描述 解法1 动态规划 思路： 使用一个数组dp来记录当天买入，所能获得的最大利润。最后输出这个数组中的���和0的最大值. 临界条件： :::info 最晚le</description>
    </item>
    
    <item>
      <title>删除链表的倒数第 N 个结点</title>
      <link>https://Sentisfate.github.io/docs/ykz4zs/</link>
      <pubDate>Wed, 07 Sep 2022 10:37:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ykz4zs/</guid>
      <description>题目描述 解法1 线性表 思路： 将每个节点断开并存储到一个线性表里，删除掉倒数第N个元素，再合成一个链表 /** * Definition for singly-linked list. * function ListNode(val, next) { * this.val = (val===undefined ? 0 : val) * this.next</description>
    </item>
    
    <item>
      <title>动态规划法</title>
      <link>https://Sentisfate.github.io/docs/lhbwey/</link>
      <pubDate>Wed, 07 Sep 2022 09:56:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lhbwey/</guid>
      <description>核心思想，将大问题转换成若干小问题，寻求这些小问题的最优解，并保留记录，再将这一些列最优解组合成大问题的解。</description>
    </item>
    
    <item>
      <title>单词拆分</title>
      <link>https://Sentisfate.github.io/docs/yxf6oo/</link>
      <pubDate>Wed, 07 Sep 2022 04:42:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yxf6oo/</guid>
      <description>题目描述 leetcode 解法1 dfs 思路： 一个单词如果要能拆分，必定这个字符串的第一个字符开始到某一字符结束所构成的单词能够在字典种找到。并且剩下的字符串可以</description>
    </item>
    
    <item>
      <title>重排列单词间的空格</title>
      <link>https://Sentisfate.github.io/docs/gcl8uo/</link>
      <pubDate>Wed, 07 Sep 2022 03:14:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gcl8uo/</guid>
      <description>题目描述 解法1 模拟 思路： 统计单词的个数和空格的个数，再将空格平均分配，多余空格拼接到末尾 临界条件： :::info 单词个数为1时，空格需要全部拼接到字符串</description>
    </item>
    
    <item>
      <title>岛屿数量</title>
      <link>https://Sentisfate.github.io/docs/gcagg5/</link>
      <pubDate>Tue, 06 Sep 2022 16:21:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gcagg5/</guid>
      <description>题目描述 leetcode 解法1 dfs 思路： 岛屿问题可以看成是一个无向图。每个网格可以向上下左右四个地方扩张。可以考虑使用递归的方式进行深度优先搜索。 临界条件：</description>
    </item>
    
    <item>
      <title>重排列表</title>
      <link>https://Sentisfate.github.io/docs/mk9omt/</link>
      <pubDate>Tue, 06 Sep 2022 13:17:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mk9omt/</guid>
      <description>题目描述 解法1 双指针加数组 思路： 将链表的每个节点用一个数组存起来，用指针指向头尾节点，一次添加尾节点，头节点，并移动指针。 临界条件： :::info 其中 为</description>
    </item>
    
    <item>
      <title>图论</title>
      <link>https://Sentisfate.github.io/docs/aiz6gk/</link>
      <pubDate>Tue, 06 Sep 2022 11:52:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/aiz6gk/</guid>
      <description>简介 图论 (Graph theory) 是数学的一个分支，图是图论的主要研究对象。图 (Graph) 是由若干给定的顶点及连接两顶点的边所构成的图形，这种图形通常用来描述某些事物之间的</description>
    </item>
    
    <item>
      <title>统计子串中的唯一字符</title>
      <link>https://Sentisfate.github.io/docs/yoosaf/</link>
      <pubDate>Tue, 06 Sep 2022 03:14:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yoosaf/</guid>
      <description>题目描述 leetcode 解法1. 穷举法 思路： 采用滑动窗口来寻找所有的子串，并统计子串的唯一字符的个数 临界条件： :::info 窗口的起始位置索引 **i**，窗口的宽度 *</description>
    </item>
    
    <item>
      <title>跳跃游戏</title>
      <link>https://Sentisfate.github.io/docs/omlwlb/</link>
      <pubDate>Mon, 05 Sep 2022 12:30:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/omlwlb/</guid>
      <description>题目描述： leetcode 解法1.贪心 思路，希望能够一次（0次数组长度为1）跳完，不行的话，就两次，三次……上一次跳进最后一次的位置范围内。以此类推找到第</description>
    </item>
    
    <item>
      <title>贪心算法</title>
      <link>https://Sentisfate.github.io/docs/xz334f/</link>
      <pubDate>Mon, 05 Sep 2022 12:00:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xz334f/</guid>
      <description>概念 贪心算法（英语：greedy algorithm），是用计算机来模拟一个「贪心」的人做出决策的过程。这个人十分贪婪，每一步行动总是按某种指</description>
    </item>
    
    <item>
      <title>分发饼干</title>
      <link>https://Sentisfate.github.io/docs/hfoq64/</link>
      <pubDate>Mon, 05 Sep 2022 08:46:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hfoq64/</guid>
      <description>题目描述： 来源leetcode 解法1. 贪心+排序 思路，将饼干和孩子进行升序排序，并逐个比较孩子和饼干，满足就计数加一 /** * @param {number[]} g * @param {number[]} s * @return {number}</description>
    </item>
    
    <item>
      <title>罗马数字转数字</title>
      <link>https://Sentisfate.github.io/docs/lkn4la/</link>
      <pubDate>Mon, 05 Sep 2022 08:23:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lkn4la/</guid>
      <description>题目描述 leetcode 思路，罗马数字实际上就是字母对应的数字的一个求和过程。在遍历的过程中，多看一位，即可。 /** * @param {string} s * @return {number} */ var romanToInt = function(s) { let sum=0 let length=s.length //刚了</description>
    </item>
    
    <item>
      <title>判定字符串字符唯一</title>
      <link>https://Sentisfate.github.io/docs/unpage/</link>
      <pubDate>Mon, 05 Sep 2022 06:52:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/unpage/</guid>
      <description>题目描述 解法1 使用hash表 /** * @param {string} astr * @return {boolean} */ var isUnique = function(astr) { // 使用hash表 let map=new Map() for(let i=0;i&amp;lt;astr.length;i++){ let c=astr[i] if(map.has(c)){ return false } map.set(c,1) } return true }; 解法2. 比较该字符的第一个索引和最后</description>
    </item>
    
    <item>
      <title>二叉树的所有路径问题</title>
      <link>https://Sentisfate.github.io/docs/ylmr3l/</link>
      <pubDate>Mon, 05 Sep 2022 05:39:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ylmr3l/</guid>
      <description>题目描述： 来源 leetcode 思路：深度优先搜索，自定向下逐个遍历，在遍历的过程中，将当前节点的值添加到路径中，如果是叶子节点就返回，否则继续遍历。 /** * Definition</description>
    </item>
    
    <item>
      <title>深度优先遍历 DFS(depth-first-search)</title>
      <link>https://Sentisfate.github.io/docs/cglog0/</link>
      <pubDate>Mon, 05 Sep 2022 04:16:43 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cglog0/</guid>
      <description>通常使用递归的方式来遍历。 function dfs(root){ if(!root){ return } console.log(root.val) // 按前序遍历获取节点值，是一种自定向上的顺序 dfs(root.left) console.log(root.val)//按中序遍历</description>
    </item>
    
    <item>
      <title>寻找重复的子树</title>
      <link>https://Sentisfate.github.io/docs/zmght8/</link>
      <pubDate>Mon, 05 Sep 2022 04:05:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zmght8/</guid>
      <description>题目描述 来源 leetcode 思路：将二叉树序列化，并比较是否有重复的字符串。获得所有的子树序列化后的字符串存入哈希表，来得到重复的子串。如何序列化？通常有</description>
    </item>
    
    <item>
      <title>哈希表</title>
      <link>https://Sentisfate.github.io/docs/eqmszp/</link>
      <pubDate>Mon, 05 Sep 2022 03:06:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/eqmszp/</guid>
      <description>简介 哈希表又称散列表，一种以 **&amp;quot;key-value&amp;quot;** 形式存储数据的数据结构。所谓以 **&amp;quot;key-value&amp;quot;** 形式存储数据，是指任意的键值 **key**都唯一对应到内存中的某个位置。只需要</description>
    </item>
    
    <item>
      <title>二进制矩阵中的特殊位置</title>
      <link>https://Sentisfate.github.io/docs/gaoogl/</link>
      <pubDate>Sun, 04 Sep 2022 04:28:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gaoogl/</guid>
      <description>题目描述： 来源leetcode 解法1 思路1.找到所有1的位置，并将行列号唯一的1的个数计算出来。 /** * @param {number[][]} mat * @return {number} */ var numSpecial = function(mat) { // 思路：特殊位置</description>
    </item>
    
    <item>
      <title>Node.js readline 标准输入流</title>
      <link>https://Sentisfate.github.io/docs/obip8l/</link>
      <pubDate>Sat, 03 Sep 2022 08:45:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/obip8l/</guid>
      <description>使用步骤 引入模块 创建实例 设置提示符 开始接收用户输入 监听line事件 结束输入 监听结束事件 // 引入readline模块 const readline = require(&amp;#39;readline&amp;#39;); // 创建rl 接口实例 const</description>
    </item>
    
    <item>
      <title>最长数对链</title>
      <link>https://Sentisfate.github.io/docs/dsfauo/</link>
      <pubDate>Sat, 03 Sep 2022 03:32:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dsfauo/</guid>
      <description>题目描述 来源 leetcode 思路，要想要数对链最长，要保证数对的第二个元素小于下个数对的第一个元素。 解法一、贪心 对于一个数对链，始终发现该链中的数对的第二</description>
    </item>
    
    <item>
      <title>路径问题</title>
      <link>https://Sentisfate.github.io/docs/uaemeb/</link>
      <pubDate>Fri, 02 Sep 2022 07:03:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uaemeb/</guid>
      <description>自顶向下 从根节点到叶子节点的相关路径问题从根节点向下遍历，记录节点值的同时，如果是叶子节点，就将路径返回，非叶子节点就将节点值添加到路径中 const</description>
    </item>
    
    <item>
      <title>最大同值路径</title>
      <link>https://Sentisfate.github.io/docs/ugrgmm/</link>
      <pubDate>Fri, 02 Sep 2022 06:17:31 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ugrgmm/</guid>
      <description>题目描述 来源：https://leetcode.cn/problems/longest-univalue-path/ 思路：对于一般路径而言，</description>
    </item>
    
    <item>
      <title>数据结构</title>
      <link>https://Sentisfate.github.io/docs/dyeg3r/</link>
      <pubDate>Thu, 01 Sep 2022 14:45:32 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dyeg3r/</guid>
      <description>参考资料：Ol/Wikihttps://oi-wiki.org/ds/ 常见分类 栈 队列 链表 哈希表</description>
    </item>
    
    <item>
      <title>单调栈</title>
      <link>https://Sentisfate.github.io/docs/up9l05/</link>
      <pubDate>Thu, 01 Sep 2022 06:10:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/up9l05/</guid>
      <description>概念 依然是栈的结构，不过保持了栈中数据的单调性如：栈中自顶向下的元素为{1,2,4,5} 。 如果要插入一个3进入单调栈时，需要将1，2弹出 应用</description>
    </item>
    
    <item>
      <title>商品折扣的最终价格</title>
      <link>https://Sentisfate.github.io/docs/ceoe2z/</link>
      <pubDate>Thu, 01 Sep 2022 03:25:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ceoe2z/</guid>
      <description>题目描述 解法一 直接遍历法 时间复杂度O(n2),空间复杂度O(1)采用双指针法，来查找当前位置元素后是否有���于等于该元素的元素。 /** * @param {number[]} prices</description>
    </item>
    
    <item>
      <title>***DIV 边框进阶</title>
      <link>https://Sentisfate.github.io/docs/bt1l10/</link>
      <pubDate>Wed, 31 Aug 2022 12:47:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bt1l10/</guid>
      <description>炫酷的 CSS 边框动画，快来收藏吧！-css教程-PHP中文网 四角边框 利用 .lobal_echarts_box { position: relative; width: 100px; height: 32px; // csss实现四角边框 // box-shadow: 0 0 1.5vw #1f69b9b9 inset; background: linear-gradient(to bottom,#33cdfa 0px,#33cdfa 2px,transparent 3px,transparent 100%) left top no-repeat,</description>
    </item>
    
    <item>
      <title>验证栈序列</title>
      <link>https://Sentisfate.github.io/docs/lwwu34/</link>
      <pubDate>Wed, 31 Aug 2022 12:33:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lwwu34/</guid>
      <description>验证pushed和poped序列是否为某一空栈的操作结果。pushed记录的是入栈操作，poped记录的是出栈操作，pushed元素不重复，</description>
    </item>
    
    <item>
      <title>栈</title>
      <link>https://Sentisfate.github.io/docs/bg585v/</link>
      <pubDate>Wed, 31 Aug 2022 10:11:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bg585v/</guid>
      <description>一种先进后出的数据结构。如用一个数组来模拟这种结构，只允许通过push和pop来增删元素。</description>
    </item>
    
    <item>
      <title>二叉树</title>
      <link>https://Sentisfate.github.io/docs/bc77wa/</link>
      <pubDate>Tue, 30 Aug 2022 12:00:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bc77wa/</guid>
      <description>结构 function TreeNode(val, left, right) { this.val = (val===undefined ? 0 : val) this.left = (left===undefined ? null : left) this.right = (right===undefined ? null : right) } 遍历 深度遍历 dfs 注意前序和后序遍历，可以确定根节点，并且，如果将空节点标识出来后，就</description>
    </item>
    
    <item>
      <title>扁平化</title>
      <link>https://Sentisfate.github.io/docs/heaqza/</link>
      <pubDate>Tue, 30 Aug 2022 10:53:35 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/heaqza/</guid>
      <description>转为一维数组</description>
    </item>
    
    <item>
      <title>最大二叉树</title>
      <link>https://Sentisfate.github.io/docs/tks8pu/</link>
      <pubDate>Tue, 30 Aug 2022 05:47:16 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tks8pu/</guid>
      <description>构建二叉树 递归法 function TreeNode(val, left, right) { this.val = (val===undefined ? 0 : val) this.left = (left===undefined ? null : left) this.right = (right===undefined ? null : right) } /** * @param {number[]} nums * @return {TreeNode} */ var constructMaximumBinaryTree = function(nums) { //终止条件 if(nums.length==0){ return null } // 获取根节点 let max=nums[0],maxIndex=0 nums.forEach((item,index)=&amp;gt;{ if(item&amp;gt;max){ max=item</description>
    </item>
    
    <item>
      <title>关于n*n的方形</title>
      <link>https://Sentisfate.github.io/docs/wggu0l/</link>
      <pubDate>Thu, 25 Aug 2022 16:46:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wggu0l/</guid>
      <description>n*n的方格，整行列的涂黑，求得到k个方格的涂黑方法的种数 /** * @param {number} n * @param {number} k * @return {number} */ var paintingPlan = function(n, k) { if(k&amp;lt;n){ return 0 } if(k==n*n){ return 1 } //Ckn=n*n-1/2 const ckn=(k,n)=&amp;gt;{ let sum=1 for(let i=0;i&amp;lt;k;i++){ sum*=(n-i)/(k-i); } return sum } const isPrime=(num)=&amp;gt;{</description>
    </item>
    
    <item>
      <title>判断一个数N是否是质数</title>
      <link>https://Sentisfate.github.io/docs/niswow/</link>
      <pubDate>Thu, 25 Aug 2022 14:24:49 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/niswow/</guid>
      <description>法一、从3到N逐个判断 最简单直观 时间复杂度为O(N) 法二、从3到sqrt(N逐个判断) 非质数肯定存在两个约数，一个大于等于sqrt(N)，一</description>
    </item>
    
    <item>
      <title>两正序数组的中位数</title>
      <link>https://Sentisfate.github.io/docs/dhion4/</link>
      <pubDate>Mon, 22 Aug 2022 14:00:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dhion4/</guid>
      <description>解法1，合并排序后找中位数 时间复杂度 O((n+m)2) 空间复杂度 O(2m+2n) function getMediumNumByMerge() { const arr = [...nums1, ...nums2]; let m = nums1.length; let n = nums2.length; arr.sort((a, b) =&amp;gt; a - b); let medium = (m + n) / 2; if ((m + n) % 2) { medium = Math.floor(medium); return arr[medium]; } return (arr[medium]</description>
    </item>
    
    <item>
      <title>线段树 Segment Tree</title>
      <link>https://Sentisfate.github.io/docs/uofan3/</link>
      <pubDate>Mon, 22 Aug 2022 11:40:54 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uofan3/</guid>
      <description>概念 线段树 Segment tree 是⼀种⼆叉树形数据结构，</description>
    </item>
    
    <item>
      <title>滑动窗口</title>
      <link>https://Sentisfate.github.io/docs/zgnyzv/</link>
      <pubDate>Mon, 22 Aug 2022 11:30:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zgnyzv/</guid>
      <description>思想：窗口的位置和宽度都会变化，可以由窗口的左右指针来模拟。</description>
    </item>
    
    <item>
      <title>一、时间复杂度和空间复杂度</title>
      <link>https://Sentisfate.github.io/docs/qm6va4/</link>
      <pubDate>Mon, 22 Aug 2022 10:59:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qm6va4/</guid>
      <description>1.概念 时间复杂度评估的是程序处理数据所需的时间尺度 空间复杂度评估的是程序处理数据的所占内存规模 2.常见算法的复杂度 时间复杂度 算法举例 O(n!) permutation 排</description>
    </item>
    
    <item>
      <title>算法与数据结构</title>
      <link>https://Sentisfate.github.io/docs/az5llp/</link>
      <pubDate>Mon, 22 Aug 2022 10:56:01 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/az5llp/</guid>
      <description>绪论 此目录用于记录算法的学习经过</description>
    </item>
    
    <item>
      <title>空间数据</title>
      <link>https://Sentisfate.github.io/docs/pdw0wm/</link>
      <pubDate>Mon, 22 Aug 2022 02:26:31 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pdw0wm/</guid>
      <description>一、点 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Cesium App&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;../Cesium/Cesium.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;../Cesium/Widgets/widgets.css&amp;#34;&amp;gt; &amp;lt;script src=&amp;#34;../config/ion.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;../css/index.css&amp;#34;&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div class=&amp;#34;container&amp;#34; id=&amp;#34;cesium_container&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; //查看器,场景,实体,数据源的介绍 const viewer = new Cesium.Viewer(&amp;#34;cesium_container&amp;#34;,{ animation:false, timeline:false }) const entity = viewer.entities.add({ position:Cesium.Cartesian3.fromDegrees(114.30,30.50,1000), point:{ pixelSize:100, color:Cesium.Color.RED</description>
    </item>
    
    <item>
      <title>模型数据的加载</title>
      <link>https://Sentisfate.github.io/docs/oy0kuz/</link>
      <pubDate>Mon, 22 Aug 2022 01:42:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/oy0kuz/</guid>
      <description>const position = Cesium.Cartesian3.fromDegrees(114.30, 30.50, 1000); var orientation = new Cesium.Transforms.headingPitchRollQuaternion(position, new Cesium.HeadingPitchRoll.fromDegrees(90, 50, 0)) var entity = viewer.entities.add({ position: position, orientation: orientation, model: { uri: &amp;#39;../lib/Cesium_Air.glb&amp;#39;, minimumPixelSize: 100, maximunScale: 10000, show: true } }) viewer.trackedEntity = entity</description>
    </item>
    
    <item>
      <title>影像数据</title>
      <link>https://Sentisfate.github.io/docs/gygq3r/</link>
      <pubDate>Mon, 22 Aug 2022 01:03:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gygq3r/</guid>
      <description>imageProvider 1.arcgis 影像数据 const esri = new Cesium.ArcGisMapServerImageryProvider({ url: &amp;#39;https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer&amp;#39; }) const viewer = new Cesium.Viewer(&amp;#34;cesium_container&amp;#34;, { baseLayerPicker: false, imageryProvider: esri, terrainProvider: Cesium.createWorldTerrain({ requestVertexNormals: true, //增加光照效果 requestWaterMask: true //增加水面特效 }) }) 2.高德矢量数据 //1、矢量地图 const vectorLayer = new Cesium.UrlTemplateImageryProvider({ url:</description>
    </item>
    
    <item>
      <title>SQL相关</title>
      <link>https://Sentisfate.github.io/docs/pe9ukp/</link>
      <pubDate>Sun, 21 Aug 2022 12:32:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pe9ukp/</guid>
      <description>让单词首字母大写 SELECT user_id, CONCAT(UPPER(LEFT(name, 1)), LOWER(SUBSTRING(name, 2))) AS name FROM Users ORDER BY user_id 第n高薪水 CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT BEGIN SET N := N-1; RETURN ( # Write your MySQL query statement below. SELECT salary FROM employee GROUP BY salary ORDER BY salary DESC LIMIT N, 1 ); END</description>
    </item>
    
    <item>
      <title>无重复字符串的最长子串</title>
      <link>https://Sentisfate.github.io/docs/sxxtlm/</link>
      <pubDate>Sun, 21 Aug 2022 10:52:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sxxtlm/</guid>
      <description>思路：滑动窗口 let str = &amp;#39;aba&amp;#39;; var lengthOfLongestSubstring = function (s) { // if (s.length == 0) { // return 0; // } let sLength = s.length; let length = 1; let i = 0; const isRepeat = (str) =&amp;gt; { for (let i = 0; i &amp;lt; str.length; i++) { if (str.indexOf(str[i], i + 1) != -1) { //子串不重</description>
    </item>
    
    <item>
      <title>两数之和</title>
      <link>https://Sentisfate.github.io/docs/vx94dh/</link>
      <pubDate>Sun, 21 Aug 2022 10:50:17 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vx94dh/</guid>
      <description>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target 的那 两个 整数，并返回它们的数组下标。你可以假设每种输入只会对应</description>
    </item>
    
    <item>
      <title>两数相加</title>
      <link>https://Sentisfate.github.io/docs/xhm3t1/</link>
      <pubDate>Sun, 21 Aug 2022 10:42:23 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xhm3t1/</guid>
      <description>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。请你将两个数相加，并以相同形式返</description>
    </item>
    
    <item>
      <title>算法题</title>
      <link>https://Sentisfate.github.io/docs/daxweq/</link>
      <pubDate>Sun, 21 Aug 2022 10:41:06 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/daxweq/</guid>
      <description>以下题目均为博主自己手写，思路有些是借鉴网上大神的思路，题目大多来源于leetcode，或一些网络资源，如有侵权请联系1135643799@</description>
    </item>
    
    <item>
      <title>纯函数</title>
      <link>https://Sentisfate.github.io/docs/lngzog/</link>
      <pubDate>Sat, 20 Aug 2022 11:22:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lngzog/</guid>
      <description>概念 函数返回结果只依赖于它的参数，且在执行过程里没有副作用，就将这个函数叫做纯函数 理解 只依赖参数 let b = 0; function foo(a) { return a + b; } function foo(a) { return a ; } 也就是</description>
    </item>
    
    <item>
      <title>数据加载</title>
      <link>https://Sentisfate.github.io/docs/gpb2kw/</link>
      <pubDate>Fri, 19 Aug 2022 03:29:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gpb2kw/</guid>
      <description>一、简介 本章主要介绍数据加载的方法及所支持的数据服务。从类型上数据主要有两大类 1、地形数据和影像数据。地形是骨架，影像是外衣，一般地形是不变</description>
    </item>
    
    <item>
      <title>相机</title>
      <link>https://Sentisfate.github.io/docs/nft8ow/</link>
      <pubDate>Fri, 19 Aug 2022 01:29:26 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nft8ow/</guid>
      <description>概念 我们看到的地图并非直接看到的，相机拍到的画面，这个相机也就是我们抽象的概念。在cesium中确定视角要确定相机的位置和方向（姿态）。 相机</description>
    </item>
    
    <item>
      <title>核心概念</title>
      <link>https://Sentisfate.github.io/docs/bus783/</link>
      <pubDate>Thu, 18 Aug 2022 09:02:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bus783/</guid>
      <description>:::tips **Viewer **视图查看器，可以设置相机视角。 **Scene**场景参数，可以设置地球的光照天气等场景效果 **entities** 实体，可以构建点等 **dataSourceCollection** 可以加载数据如**g</description>
    </item>
    
    <item>
      <title>DataV</title>
      <link>https://Sentisfate.github.io/docs/izgvg6/</link>
      <pubDate>Thu, 18 Aug 2022 08:54:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/izgvg6/</guid>
      <description>http://datav.jiaminghi.com/DataV.GeoAtlas地理小工具系列</description>
    </item>
    
    <item>
      <title>场景Scene</title>
      <link>https://Sentisfate.github.io/docs/qr3f4w/</link>
      <pubDate>Thu, 18 Aug 2022 08:41:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qr3f4w/</guid>
      <description></description>
    </item>
    
    <item>
      <title>坐标转换</title>
      <link>https://Sentisfate.github.io/docs/to8xvl/</link>
      <pubDate>Thu, 18 Aug 2022 08:26:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/to8xvl/</guid>
      <description>度与弧度 console.log(Cesium.Math.toRadians(180)) console.log(Cesium.Math.toDegrees(3.14))</description>
    </item>
    
    <item>
      <title>Cesium</title>
      <link>https://Sentisfate.github.io/docs/any3dz/</link>
      <pubDate>Thu, 18 Aug 2022 07:34:29 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/any3dz/</guid>
      <description>教程 三维开发 入门 开发环境的下载 Downloads 获取tokenCesium ion eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI0M2Q0OTNkNC04ZmZjLTRkODYtODAyYy1iMDg5ZDQxNTk4MzgiLCJpZCI6MTA1MTQ3LCJpYXQiOjE2NjA4MDg0MzN9.avMROoYgMzBCsvDzelpIQTEJdrBhp0v0CMDg7oycK0Y 初始化地图 **const viewer = new Cesium.Viewer(&#39;map&#39;)** Cesium.Ion.defaultAccessToken = &amp;#39;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI0M2Q0OTNkNC04ZmZjLTRkODYtODAyYy1iMDg5ZDQxNTk4MzgiLCJpZCI6MTA1MTQ3LCJpYXQiOjE2NjA4MDg0MzN9.avMROoYgMzBCsvDzelpIQTEJdrBhp0v0CMDg7oycK0Y&amp;#39;; * { margin: 0; padding: 0; } #map { width: 100vw; height: 100vh; } &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34;</description>
    </item>
    
    <item>
      <title>Ajax，Fetch，Axios的区别</title>
      <link>https://Sentisfate.github.io/docs/tl42so/</link>
      <pubDate>Tue, 16 Aug 2022 06:16:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tl42so/</guid>
      <description>互联网历史 Web1.0 页面纯显示，不需交互 Web2.0 用户可以向页面提交内容,BBS,论坛，Ajax是Web2.0出现的产物Ajax(Asynchronous JavaScript</description>
    </item>
    
    <item>
      <title>canvas-nest 粒子效果</title>
      <link>https://Sentisfate.github.io/docs/my4rfc/</link>
      <pubDate>Sat, 13 Aug 2022 02:39:13 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/my4rfc/</guid>
      <description>npm i react-canvas-nest &amp;lt;ReactCanvasNest className=&amp;#34;canvasNest&amp;#34; config={{ pointColor: &amp;#39; 255, 255, 255 &amp;#39;, lineColor: &amp;#39;255,255,255&amp;#39;, pointOpacity: 0.5, pointR: 2, count: 100, }} style={{ zIndex: 0 }} /&amp;gt;</description>
    </item>
    
    <item>
      <title>文件流</title>
      <link>https://Sentisfate.github.io/docs/ekrsbp/</link>
      <pubDate>Thu, 11 Aug 2022 12:07:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ekrsbp/</guid>
      <description>是什么 文件流是一种数据集合，在互联网传输文件的过程中，存在两种传输方式，一种是直接将文件整个二进制数据读取传输，另一种，则是一段段读取文件二</description>
    </item>
    
    <item>
      <title>静态资源托管</title>
      <link>https://Sentisfate.github.io/docs/alxeid/</link>
      <pubDate>Sun, 07 Aug 2022 12:00:11 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/alxeid/</guid>
      <description>app.use(&amp;#39;/images&amp;#39;, express.static(path.join(__dirname, &amp;#39;public/images&amp;#39;))); 则要获得 public/images的文件夹就可以通过如下请求获取**http://127.0.0.1:3000/images/文件名包</description>
    </item>
    
    <item>
      <title>表单二次封装</title>
      <link>https://Sentisfate.github.io/docs/mehbhv/</link>
      <pubDate>Sun, 07 Aug 2022 03:19:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mehbhv/</guid>
      <description>import { Select } from &amp;#39;antd&amp;#39;; import React from &amp;#39;react&amp;#39;; const { Option } = Select; const MySelect = ({ options }) =&amp;gt; { return ( &amp;lt;Select&amp;gt; {options.map((item) =&amp;gt; { // 支持数据格式为[&amp;#39;1&amp;#39;,&amp;#39;2&amp;#39;] 和[{labe</description>
    </item>
    
    <item>
      <title>自定义hook</title>
      <link>https://Sentisfate.github.io/docs/kp3y9p/</link>
      <pubDate>Sun, 07 Aug 2022 03:05:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kp3y9p/</guid>
      <description>即自定义一个函数，函数名必须使用use开头，在函数中可以使用react的钩子。示例： // 自定义hook export function useData(onReset) { const [levelOptions] = useOptions([&amp;</description>
    </item>
    
    <item>
      <title>UI库</title>
      <link>https://Sentisfate.github.io/docs/khd1fq/</link>
      <pubDate>Sat, 06 Aug 2022 07:57:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/khd1fq/</guid>
      <description>此文档主要收录各大热门UI组件库的入门使用，以及心得</description>
    </item>
    
    <item>
      <title>Formily</title>
      <link>https://Sentisfate.github.io/docs/mwpp9d/</link>
      <pubDate>Sat, 06 Aug 2022 07:57:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mwpp9d/</guid>
      <description>一、入门</description>
    </item>
    
    <item>
      <title>js妙用</title>
      <link>https://Sentisfate.github.io/docs/fvz4oi/</link>
      <pubDate>Tue, 02 Aug 2022 07:22:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fvz4oi/</guid>
      <description>逻辑运算符的妙用 console.log(0 || false)</description>
    </item>
    
    <item>
      <title>mobx</title>
      <link>https://Sentisfate.github.io/docs/gpziq0/</link>
      <pubDate>Tue, 02 Aug 2022 01:04:30 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gpziq0/</guid>
      <description>是什么 react 的一个状态管理工具装饰器安装依赖babel：**cnpm i i @babel/plugin-proposal-decorators @babel/plugin-proposal-class-properties -D****pnpm i @babel/core**修改配置文件： import { defineConfig } from &amp;#39;vite&amp;#39; import react from &amp;#39;@vitejs/plugin-react&amp;#39; import path</description>
    </item>
    
    <item>
      <title>React进阶</title>
      <link>https://Sentisfate.github.io/docs/pau57n/</link>
      <pubDate>Mon, 01 Aug 2022 08:37:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/pau57n/</guid>
      <description>一、子组件优化 Memo 1.引例 子组件不使用父组件的数据，父组件数据更新，子组件会更新。甚至父组件没有使用到更新的数据也会更新。😵 import React from &amp;#39;react&amp;#39;; import { useEffect } from</description>
    </item>
    
    <item>
      <title>Redux</title>
      <link>https://Sentisfate.github.io/docs/bed4go/</link>
      <pubDate>Mon, 01 Aug 2022 06:43:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/bed4go/</guid>
      <description>是什么 是react 的一个状态管理工具 基本思想 入门 使用redux 安装依赖 **npm i redux****npm i react-redux** 创建store/index.js import { createStore } from &amp;#39;redux&amp;#39;; const initState = { count: 1, }; //</description>
    </item>
    
    <item>
      <title>控制路由跳转后的scroll滚动位置</title>
      <link>https://Sentisfate.github.io/docs/kapoxf/</link>
      <pubDate>Mon, 01 Aug 2022 02:01:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kapoxf/</guid>
      <description>const router = new VueRouter({ routes, // 控制路由跳转滚动条位置 scrollBehavior(to, from, savedPosition) { console.log(&amp;#39;to:&amp;#39;); console.log(to, from); if (to.path == &amp;#39;/detail&amp;#39;) { return { x: 0, y: 0 }; } console.log(&amp;#39;savedPosition&amp;#39;); // savedPostion 只会在浏览器导航栏前进后退时触发 console.log(savedPosition); return savedPosition; }, });</description>
    </item>
    
    <item>
      <title>vue源码</title>
      <link>https://Sentisfate.github.io/docs/ssggll/</link>
      <pubDate>Sun, 31 Jul 2022 09:12:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ssggll/</guid>
      <description></description>
    </item>
    
    <item>
      <title>js函数</title>
      <link>https://Sentisfate.github.io/docs/ll96lt/</link>
      <pubDate>Sun, 31 Jul 2022 09:11:49 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ll96lt/</guid>
      <description>函数的属性 callee 是arguments对象的一个属性,它是一个指向arguments对象所在函数的指针 arguments 伪数组,存储函数传入的参数 length 保持函数定义的</description>
    </item>
    
    <item>
      <title>vue2 $相关属性</title>
      <link>https://Sentisfate.github.io/docs/xpkgtr/</link>
      <pubDate>Sun, 31 Jul 2022 09:08:27 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xpkgtr/</guid>
      <description>vm实例中的**$children**属性存放的是子组件vc实例中的**$parent**存放的是父组件可以通过这两个属性来获得相互的值，但</description>
    </item>
    
    <item>
      <title>element-ui</title>
      <link>https://Sentisfate.github.io/docs/qev60p/</link>
      <pubDate>Sun, 31 Jul 2022 09:02:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qev60p/</guid>
      <description>element-ui 表单校验自定义校验，callback() 函数必须保证校验正确的时候有执行，否则，无法校验 // 自定义校验规则 var validateCato = (rule, value, callback) =&amp;gt; { if (value === &amp;#39;&amp;#39;) { callback(new Err</description>
    </item>
    
    <item>
      <title>css工程化</title>
      <link>https://Sentisfate.github.io/docs/kmaccs/</link>
      <pubDate>Sun, 31 Jul 2022 08:58:39 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kmaccs/</guid>
      <description>优化颜色变量，创建主题色styles文件夹下新建**theme.styl**文件 $red = #fc9c9b $myWhite = white $whiteT = rgba(220 207 207 60%) $myTransparent = transparent $myBlackT5 = rgba(255,255,255,0.5) $myBlackT8 = rgba(255,255,255,0.8) background $myTransparent 复用常用的样式</description>
    </item>
    
    <item>
      <title>vue-cli自定义路径别名</title>
      <link>https://Sentisfate.github.io/docs/xuh2sl/</link>
      <pubDate>Sun, 31 Jul 2022 08:57:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xuh2sl/</guid>
      <description>使用路径别名vue.config.js文件 const path = require(&amp;#39;path&amp;#39;); const { defineConfig } = require(&amp;#39;@vue/cli-service&amp;#39;); module.exports = defineConfig({ transpileDependencies: true, lintOnSave: false, chainWebpack: (config) =&amp;gt; { config.resolve.alias .set(&amp;#39;@&amp;#39;, path.join(__dirname, &amp;#39;./src&amp;#39;)) .set(&amp;#39;assets&amp;#39;, path.join(__dirname, &amp;#39;./src/assets&amp;#39;)) .set(&amp;#39;styles&amp;#39;, path.join(__dirname, &amp;#39;./src/assets/styles&amp;#39;)) .set(&amp;#39;img&amp;#39;, path.join(__dirname, &amp;#39;./src/assets/img&amp;#39;)); }, }); 修改后重启服务引用别名： @import</description>
    </item>
    
    <item>
      <title>文件上传</title>
      <link>https://Sentisfate.github.io/docs/fsp5fo/</link>
      <pubDate>Sun, 31 Jul 2022 08:56:06 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fsp5fo/</guid>
      <description>后端接收文件 **node**使用**multer**解析**form-data**数据 安装multer中间件 **npm install multer -S** 在需要解析formdat</description>
    </item>
    
    <item>
      <title>前端交互原理</title>
      <link>https://Sentisfate.github.io/docs/gfgud9/</link>
      <pubDate>Sun, 31 Jul 2022 08:54:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gfgud9/</guid>
      <description>前后端交互图式</description>
    </item>
    
    <item>
      <title>window.scroll</title>
      <link>https://Sentisfate.github.io/docs/gu5mni/</link>
      <pubDate>Sun, 31 Jul 2022 08:49:49 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gu5mni/</guid>
      <description>window.onscroll事件用于处理下拉多少距离后进行固定</description>
    </item>
    
    <item>
      <title>常见问题</title>
      <link>https://Sentisfate.github.io/docs/vlcqgo/</link>
      <pubDate>Sun, 31 Jul 2022 08:48:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vlcqgo/</guid>
      <description>解决git文件无法上传某些文件夹的情况，前往 .gitignore 删除某些文件名</description>
    </item>
    
    <item>
      <title>base64与base64 Url</title>
      <link>https://Sentisfate.github.io/docs/xtdt5k/</link>
      <pubDate>Sun, 31 Jul 2022 08:47:16 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xtdt5k/</guid>
      <description>base64编码 编码规则24位二进制，3个字节转4个字节，38-&amp;gt;46，再给这6位二进制前面添加两位0 let str = &amp;#39;123456789&amp;#39;; let buff = new Buffer(data); // 默认用 utf-8 编码</description>
    </item>
    
    <item>
      <title>后端集锦</title>
      <link>https://Sentisfate.github.io/docs/csnat0/</link>
      <pubDate>Sun, 31 Jul 2022 02:41:46 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/csnat0/</guid>
      <description>常用封装模块 数据库配置文件 module.exports = { /* 用于调试 */ debug: true, mysql: { host: &amp;#39;122.112.246.129&amp;#39;, port: 10060, user: &amp;#39;root&amp;#39;, password: &amp;#39;123456&amp;#39;, database: &amp;#39;db_blog&amp;#39;, dateStrings: true, //解决时间格式 }, }; 数据库 // 连接数据库 // 1,导入mysql包 const mysql</description>
    </item>
    
    <item>
      <title>v-loading</title>
      <link>https://Sentisfate.github.io/docs/lz5svn/</link>
      <pubDate>Sat, 30 Jul 2022 15:07:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lz5svn/</guid>
      <description>实现加载效果</description>
    </item>
    
    <item>
      <title>keep-alive 与activated ，deactivated生命周期</title>
      <link>https://Sentisfate.github.io/docs/crmg5d/</link>
      <pubDate>Sat, 30 Jul 2022 14:52:25 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/crmg5d/</guid>
      <description>keep-alive包裹的router-view ，其created和mounted只会执行一次，会被缓存起来，不会被销毁，除非手动销毁。此外</description>
    </item>
    
    <item>
      <title>CSS函数</title>
      <link>https://Sentisfate.github.io/docs/wnuq3n/</link>
      <pubDate>Sat, 30 Jul 2022 13:16:27 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wnuq3n/</guid>
      <description>calc函数，用于动态计算长度值。注意：**calc(30% - 10px)** 减号和数字间要有空格，否则属性值无效 #div1 { position: absolute; left: 50px; width: calc(100% - 100px); border: 1px solid black; background-color: yellow; padding: 5px; text-align: center;</description>
    </item>
    
    <item>
      <title>CSS进阶</title>
      <link>https://Sentisfate.github.io/docs/yp0s5y/</link>
      <pubDate>Sat, 30 Jul 2022 13:15:58 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yp0s5y/</guid>
      <description>Just a moment&amp;hellip;更多炫酷样式可以前往codePen寻找</description>
    </item>
    
    <item>
      <title>iconfont使用教程</title>
      <link>https://Sentisfate.github.io/docs/szagmz/</link>
      <pubDate>Thu, 28 Jul 2022 14:04:04 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/szagmz/</guid>
      <description>选择图标加入项目，并下载到本地 解压后有以下这些文件，需要的只有红框框起来的文件 iconfont.css文件详解 **@font-face**定</description>
    </item>
    
    <item>
      <title>关于对RefImpl的理解</title>
      <link>https://Sentisfate.github.io/docs/tiqan6/</link>
      <pubDate>Thu, 28 Jul 2022 13:25:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/tiqan6/</guid>
      <description>实现的是对某一个值的拷贝，结果为一个对象，该值被存储在**refimpl**的value属性中。</description>
    </item>
    
    <item>
      <title>监听route变化</title>
      <link>https://Sentisfate.github.io/docs/vfnpix/</link>
      <pubDate>Thu, 28 Jul 2022 13:10:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vfnpix/</guid>
      <description>vue2 vue中监听路由变化的方法。 watch: { $route(val, old) { console.log(val, old); }, }, vue3 import { watch } from &amp;#39;vue&amp;#39;; import { useRoute } from &amp;#39;vue-router&amp;#39;; const route = useRoute(); watch(route, (to, from) =&amp;gt; { console.log(to); console.log(&amp;#39;from&amp;#39;, from); });</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>https://Sentisfate.github.io/docs/mpd5ug/</link>
      <pubDate>Thu, 28 Jul 2022 09:40:01 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mpd5ug/</guid>
      <description>判断是否为汉字，字母，数字 //验证是否是中文 var pattern = new RegExp(&amp;#34;[\u4E00-\u9FA5]+&amp;#34;); var str = &amp;#34;中文字符&amp;#34; if(pattern.test(str)){ alert(&amp;#39;该字符串是中文&amp;#39;);</description>
    </item>
    
    <item>
      <title>Pinia</title>
      <link>https://Sentisfate.github.io/docs/fqg773/</link>
      <pubDate>Thu, 28 Jul 2022 06:12:48 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fqg773/</guid>
      <description>状态管理工具 一、 安装 **pnpm i pinia** 二、入门使用 Vue2 定义store 通过使用defineStore来定义 import { defineStore } from &amp;#39;pinia&amp;#39;; // defineStore 相当于vuex中的createSt</description>
    </item>
    
    <item>
      <title>Vue3封装http</title>
      <link>https://Sentisfate.github.io/docs/qdrfgp/</link>
      <pubDate>Wed, 27 Jul 2022 09:13:19 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qdrfgp/</guid>
      <description>封装思路，第一步线封装所有的http请求，及路径到一个request/index.js第二步，使用自定义hook将对应的http请求封装到自</description>
    </item>
    
    <item>
      <title>watch</title>
      <link>https://Sentisfate.github.io/docs/ycov59/</link>
      <pubDate>Wed, 27 Jul 2022 09:03:43 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ycov59/</guid>
      <description>使用： import { onMounted, onBeforeMount, onUpdated, ref, watch } from &amp;#39;vue&amp;#39;; const count = ref(0); const addCount = () =&amp;gt; { count.value++; }; onUpdated(() =&amp;gt; { console.log(&amp;#39;updated&amp;#39;); }); watch(count, () =&amp;gt; { console.log(&amp;#39;监听&amp;#39;); }); watch在upd</description>
    </item>
    
    <item>
      <title>Vue3生命周期</title>
      <link>https://Sentisfate.github.io/docs/gg35zb/</link>
      <pubDate>Wed, 27 Jul 2022 08:46:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gg35zb/</guid>
      <description>![N{XN_$J4CIYDKHB8_(VO.jpg 特点 同一个生命周期可以写多个，有利于拆分逻辑，进行封装，提高复用性 keep-alive &amp;lt;router-view v-slot=&amp;#34;{ Component }&amp;#34;&amp;gt; &amp;lt;keep-alive&amp;gt; &amp;lt;component :is=&amp;#34;Component&amp;#34; /&amp;gt; &amp;lt;/keep-alive&amp;gt; &amp;lt;/router-view&amp;gt;</description>
    </item>
    
    <item>
      <title>mixins</title>
      <link>https://Sentisfate.github.io/docs/efbumv/</link>
      <pubDate>Tue, 26 Jul 2022 07:53:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/efbumv/</guid>
      <description>作用：拆分组件逻辑，实现逻辑的复用使用： 自定义hooks export default { data() { return { count: 1, }; }, methods: { increment() { this.count++; }, }, }; 引入hook并使用mixins &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; About &amp;lt;div @click=&amp;#34;increment&amp;#34;&amp;gt;{{ count }}&amp;lt;/div&amp;gt; &amp;lt;button</description>
    </item>
    
    <item>
      <title>获取定位</title>
      <link>https://Sentisfate.github.io/docs/gcw4tn/</link>
      <pubDate>Sun, 24 Jul 2022 12:30:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gcw4tn/</guid>
      <description>Web 地理位置 API 通过 navigator.geolocation 提供。 navigator.geolocation.getCurrentPosition(function(position) { do_something(position.coords.latitude, position.coords.longitude); }); var watchID = navigator.geolocation.watchPosition(function(position) { do_something(position.coords.latitude, position.coords.longitude); });</description>
    </item>
    
    <item>
      <title>问题集锦</title>
      <link>https://Sentisfate.github.io/docs/mmlzo8/</link>
      <pubDate>Sun, 24 Jul 2022 07:34:38 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/mmlzo8/</guid>
      <description>center 不生效 view的默认投影是**ESPG:3857**(伪墨卡托投影，也叫球体墨卡托投影，**Web Mercator**)，而我们常使用的是</description>
    </item>
    
    <item>
      <title>VueX</title>
      <link>https://Sentisfate.github.io/docs/vrmmrg/</link>
      <pubDate>Sun, 24 Jul 2022 03:36:42 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vrmmrg/</guid>
      <description>一、VueX 是什么 就是实现页面间数据共享的管理工具 1.入门 安装依赖 npm install vuex@next --save 配置store文件夹 src下新建store文件夹，新建index.</description>
    </item>
    
    <item>
      <title>Vite</title>
      <link>https://Sentisfate.github.io/docs/gnp0gr/</link>
      <pubDate>Sun, 24 Jul 2022 02:53:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gnp0gr/</guid>
      <description>vite搭建vue2项目 默认搭建的是vue3项目，如何搭建vue2项目 用vite搭建vue3项目，先别初始化，清空package.json中</description>
    </item>
    
    <item>
      <title>OGC</title>
      <link>https://Sentisfate.github.io/docs/auwnqp/</link>
      <pubDate>Sat, 23 Jul 2022 12:05:10 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/auwnqp/</guid>
      <description>一、简介 OGC，开放地理空间联盟**(Open Geospatial Consortium),**，制定与空间信息、基于位置服务相关的标准。制定的常用标准有: WMS Web</description>
    </item>
    
    <item>
      <title>天地图</title>
      <link>https://Sentisfate.github.io/docs/gigzik/</link>
      <pubDate>Fri, 22 Jul 2022 13:59:49 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gigzik/</guid>
      <description>一、入门 注意申请key &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;!-- 加载天地图 tk=key--&amp;gt; &amp;lt;script src=&amp;#34;http://api.tianditu.gov.cn/api?v=4.0&amp;amp;tk=4ef0cbc0b70c39df22b651f6fd2d6939&amp;#34; type=&amp;#34;text/javascript&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; * { margin: 0; padding: 0; } #map { width: 100vw; height: 100vh; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; // 定义地图挂载的容器 const map</description>
    </item>
    
    <item>
      <title>光谷智慧交通</title>
      <link>https://Sentisfate.github.io/docs/gdxlpn/</link>
      <pubDate>Thu, 21 Jul 2022 02:19:16 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gdxlpn/</guid>
      <description>Vue+mysql+ant+openlayer后台: express+mysql (koa +mysql)中台:react-hooks +antdesign 表单 formily.jshttps://</description>
    </item>
    
    <item>
      <title>Mapbox&#43;L7</title>
      <link>https://Sentisfate.github.io/docs/gcqfbb/</link>
      <pubDate>Thu, 21 Jul 2022 01:40:31 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gcqfbb/</guid>
      <description>一、入门 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#39;https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js&amp;#39;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link href=&amp;#39;https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; /&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/@antv/l7&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;map&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; // 可视化 const scene = new L7.Scene({ id: &amp;#39;map&amp;#39;, map: new L7.Mapbox({ style: &amp;#39;dark&amp;#39;, pitch: 0, center: [127.5671666579043, 7.445038892195569], zoom: 2.632456779444394, projection: &amp;#39;globe&amp;#39;, }) }); console.log(scene) const map = scene.map map.on(&amp;#39;style.load&amp;#39;, () =&amp;gt; { map.setFog({}) })</description>
    </item>
    
    <item>
      <title>WebGIS</title>
      <link>https://Sentisfate.github.io/docs/ymvyt3/</link>
      <pubDate>Thu, 21 Jul 2022 01:29:00 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ymvyt3/</guid>
      <description>常见主流地图框架 :::info 二维mapboxopenlayersleafletL7三维cessiumthree.js :::</description>
    </item>
    
    <item>
      <title>react 源码解读</title>
      <link>https://Sentisfate.github.io/docs/cfgytx/</link>
      <pubDate>Wed, 20 Jul 2022 14:24:17 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/cfgytx/</guid>
      <description>React.createElement()jsx的语法最终会转为上面</description>
    </item>
    
    <item>
      <title>Vue3</title>
      <link>https://Sentisfate.github.io/docs/qatz4f/</link>
      <pubDate>Wed, 20 Jul 2022 08:41:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/qatz4f/</guid>
      <description>教程Vue3.x新特性 vue2的缺陷，组件的业务逻辑过于复杂的情况，逻辑过于复杂， 一、入门 &amp;lt;script setup&amp;gt; // 在setup中暴露的变量,页面可以直接使用 //</description>
    </item>
    
    <item>
      <title>OpenLayers</title>
      <link>https://Sentisfate.github.io/docs/ypxwhp/</link>
      <pubDate>Wed, 20 Jul 2022 02:02:20 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ypxwhp/</guid>
      <description>官网：OpenLayers - Documentation中地封装的apiOpenLayers5示例中地的服务:http://develop.s</description>
    </item>
    
    <item>
      <title>MapGIS</title>
      <link>https://Sentisfate.github.io/docs/patw5f/</link>
      <pubDate>Wed, 20 Jul 2022 01:13:57 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/patw5f/</guid>
      <description>技术框架 ![)1_W6E)2(]SYW`Y(D~{%{XM.jpg](https://cdn.nlark.com/yuque/0/2022/jpeg/29064333/1658280907769-2421a6e1-5f7d-4175-930d-979c5939a321.jpeg#clientId=u63321b2e-dd7a-4&amp;from=paste&amp;height=400&amp;id=u0d6baa0c&amp;originHeight=500&amp;originWidth=900&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=55448&amp;status=done&amp;style=none&amp;taskId=u913b9232-f30d-4282-acbc-936bcf4a52e&amp;title=&amp;width=720) 一、软件操作 发布服务，添加要素遇到的坑，要改个名字重新发布 二、编辑要素 向mapgis中添加点 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;script src=&amp;#34;./dist/include-openlayers-local.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;./config/map/gao.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;./config/css/map.css&amp;#34;&amp;gt;</description>
    </item>
    
    <item>
      <title>react-router</title>
      <link>https://Sentisfate.github.io/docs/htsvan/</link>
      <pubDate>Tue, 19 Jul 2022 01:22:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/htsvan/</guid>
      <description>实现类似于vue-router的路由跳转 一、安装 v5 pnpm i react-router-dom@5 二、router v6版本以下的使用方法 导入相关模块 import { BrowserRouter as Router, Route, Link } from &amp;#39;react-router-dom&amp;#39;; 定义路由规则 Link</description>
    </item>
    
    <item>
      <title>React-hooks</title>
      <link>https://Sentisfate.github.io/docs/xqg4ld/</link>
      <pubDate>Mon, 18 Jul 2022 08:41:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/xqg4ld/</guid>
      <description>一、是什么 js 是一个函数式的编程，ES6后 class 是才出现的语法糖，编码成本较高React class组件存在不足 明白面向对象class 关心this指</description>
    </item>
    
    <item>
      <title>mapbox</title>
      <link>https://Sentisfate.github.io/docs/esg8uc/</link>
      <pubDate>Mon, 18 Jul 2022 01:29:50 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/esg8uc/</guid>
      <description>token pk.eyJ1IjoibG9jYWxzaXgiLCJhIjoiY2w1cTI5dGl2MXFoZzNkcHhjOGE2engyeCJ9.RwsxPwjBGb3LyuJrjqQ05Q 虚拟信用卡生成器FREE Valid Credit Card Number Generator Tool for 2022 mapbox mapGL js官方文档Mapbox GL JS 一、初始化地图 导入依赖 &amp;lt;script src=&amp;#39;https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js&amp;#39;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;link href=&amp;#39;https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; /&amp;gt; 导入token export const token = &amp;#39;pk.eyJ1IjoibG9jYWxzaXgiLCJhIjoiY2w1cTI5dGl2MXFoZzNkcHhjOGE2engyeCJ9.RwsxPwjBGb3LyuJrjqQ05Q&amp;#39;; &amp;lt;script type=&amp;#34;module&amp;#34;&amp;gt; import</description>
    </item>
    
    <item>
      <title>ant design</title>
      <link>https://Sentisfate.github.io/docs/oiwsk8/</link>
      <pubDate>Fri, 15 Jul 2022 07:46:37 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/oiwsk8/</guid>
      <description>阿里出品的一个基于react的ui组件库，提供了vue的版本，vue的版本非官方团队在维护 安装 pnpm i antd --save 使用 在main.jsx 中导入antd import</description>
    </item>
    
    <item>
      <title>生命周期</title>
      <link>https://Sentisfate.github.io/docs/yfq4um/</link>
      <pubDate>Thu, 14 Jul 2022 06:11:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yfq4um/</guid>
      <description>执行顺序 初次渲染时执行constructor -&amp;gt;render -&amp;gt;mount数据更新执行shouldComponentUpdate 渲染前返回一个boo</description>
    </item>
    
    <item>
      <title>高级特性</title>
      <link>https://Sentisfate.github.io/docs/twdyfv/</link>
      <pubDate>Wed, 13 Jul 2022 06:04:12 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/twdyfv/</guid>
      <description>无状态组件 本质是一个箭头函数，返回的是个dom，没有this，没有state数据，但可以接收父组件的传来的props，通过形参来接收。 &amp;lt;Son na</description>
    </item>
    
    <item>
      <title>网站部署</title>
      <link>https://Sentisfate.github.io/docs/ulksxh/</link>
      <pubDate>Tue, 12 Jul 2022 12:33:55 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ulksxh/</guid>
      <description>linux常用命令： **cd /**进入根目录 ls 查看当前文件夹下的 文件，这里是linux安装目录下的文件 home 可以放安装的项目，opt可以放安装���软</description>
    </item>
    
    <item>
      <title>组件间传值</title>
      <link>https://Sentisfate.github.io/docs/eu715u/</link>
      <pubDate>Tue, 12 Jul 2022 06:06:40 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/eu715u/</guid>
      <description>父子组件传值 父-&amp;gt;子 自定义属性，子通过props接收 &amp;lt;Count count=&amp;#34;6&amp;#34;&amp;gt;&amp;lt;/Count&amp;gt; &amp;lt;button&amp;gt; {this.props.count} &amp;lt;/button&amp;gt; 父组件向子组件传递方法 state = { msg: &amp;#39;我是父组件的信息&amp;#39;, }; increment</description>
    </item>
    
    <item>
      <title>入门</title>
      <link>https://Sentisfate.github.io/docs/wa5red/</link>
      <pubDate>Tue, 12 Jul 2022 06:06:09 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wa5red/</guid>
      <description>react 创建项目pnpm create vite react-appclassName 在react 里面不能用class给标签添加样式 &amp;lt;div className=&amp;#34;class1&amp;#34; style={{ color: &amp;#39;red&amp;#39; }}&amp;gt; react 中的点击事件是存在类里的方法里的，点击事件是用onCli</description>
    </item>
    
    <item>
      <title>json-server</title>
      <link>https://Sentisfate.github.io/docs/zcrtps/</link>
      <pubDate>Sun, 10 Jul 2022 02:42:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/zcrtps/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vue</title>
      <link>https://Sentisfate.github.io/docs/vmioon/</link>
      <pubDate>Sun, 10 Jul 2022 02:42:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/vmioon/</guid>
      <description></description>
    </item>
    
    <item>
      <title>联合接口</title>
      <link>https://Sentisfate.github.io/docs/wp38i7/</link>
      <pubDate>Sun, 10 Jul 2022 02:42:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wp38i7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>组件封装</title>
      <link>https://Sentisfate.github.io/docs/amgyse/</link>
      <pubDate>Sun, 10 Jul 2022 02:42:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/amgyse/</guid>
      <description></description>
    </item>
    
    <item>
      <title>axios详解</title>
      <link>https://Sentisfate.github.io/docs/ek7n06/</link>
      <pubDate>Sat, 09 Jul 2022 14:23:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ek7n06/</guid>
      <description>发起http请求的方式 axios.get/post...(&#39;url&#39;,...).then axios实例().then(res=&amp;gt;{}) axios 实例在配置了baseUrl和url后就已经具备了发起http请</description>
    </item>
    
    <item>
      <title>axios封装</title>
      <link>https://Sentisfate.github.io/docs/uhmhpg/</link>
      <pubDate>Sat, 09 Jul 2022 12:53:02 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/uhmhpg/</guid>
      <description>思想 将常用的代码，或者公共方法封装起来，挂载到Vue的原型对象上。 示例 - 封装http请求。 vue-cli中 导入axios并实例化，再将实例导</description>
    </item>
    
    <item>
      <title>mock</title>
      <link>https://Sentisfate.github.io/docs/kaca13/</link>
      <pubDate>Sat, 09 Jul 2022 08:08:21 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/kaca13/</guid>
      <description>是什么 前端的一种模拟后台接口返回数据以便测试的虚拟对象。就是模拟的一个假的服务端。 使用 依赖安装 **npm i mockjs json-serve -D** 这里是一下装俩，安装json-ser</description>
    </item>
    
    <item>
      <title>vue 自定义插件</title>
      <link>https://Sentisfate.github.io/docs/oztg5x/</link>
      <pubDate>Sat, 09 Jul 2022 06:45:45 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/oztg5x/</guid>
      <description>插件是什么 插件通常会给vue添加全局功能。 添加全局方法或属性 添加全局资源，指令，过滤器，过渡等 添加组件选项，通过mixin方法 添加Vue实例</description>
    </item>
    
    <item>
      <title>面向对象</title>
      <link>https://Sentisfate.github.io/docs/eg94u3/</link>
      <pubDate>Fri, 08 Jul 2022 09:07:34 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/eg94u3/</guid>
      <description>class 类 namespace MXDX { class Student { constructor(name: string, age: number) { this.name = name; this.age = age; } name: string; age: number; } }</description>
    </item>
    
    <item>
      <title>泛型</title>
      <link>https://Sentisfate.github.io/docs/hf758w/</link>
      <pubDate>Fri, 08 Jul 2022 08:54:15 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/hf758w/</guid>
      <description>是什么 任意类型 怎么用 **&amp;lt;T&amp;gt;(msg:T)** namespace FX { // // function getData(msg: string): void { // console.log(msg); // } // 放弃了类型检查 function getData(msg: any): void { console.log(msg); } getData(&amp;#39;哈哈哈哈哈&amp;#39;); // 真正的泛</description>
    </item>
    
    <item>
      <title>自定义联合类型</title>
      <link>https://Sentisfate.github.io/docs/wvnw4c/</link>
      <pubDate>Fri, 08 Jul 2022 08:47:18 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wvnw4c/</guid>
      <description>语法：**type 联合类型=自定义类型1&amp;amp;自定义类型2** namespace LHZDYLX { type BaseInfo = { name: string; age: number; }; type Contacts = { phone: string; email?: string; address?: string; }; type WholeInfo = BaseInfo &amp;amp; Contacts; const info: WholeInfo = { name: &amp;#</description>
    </item>
    
    <item>
      <title>接口</title>
      <link>https://Sentisfate.github.io/docs/oyia18/</link>
      <pubDate>Fri, 08 Jul 2022 08:23:59 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/oyia18/</guid>
      <description>一、什么是接口 规范，数据交换的规范，可以通过接口批量的定义同一类型的变量 二、分类 属性接口 约束属性，有可选?，和必选属性，type自定义类型同</description>
    </item>
    
    <item>
      <title>联合类型</title>
      <link>https://Sentisfate.github.io/docs/avrzgw/</link>
      <pubDate>Fri, 08 Jul 2022 08:16:51 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/avrzgw/</guid>
      <description>语法 // 联合类型 var numOrStr: number | string = 123; numOrStr = &amp;#39;123&amp;#39;; 问题：不能复用 解决方案 自定义类型 namespace Lianhe { type numOrStr = number | string; let num: numOrStr = 100; let str: numOrStr = &amp;#39;hello&amp;#39;; } 自定义类型设置值，有点像枚举 namespace Http {</description>
    </item>
    
    <item>
      <title>命名空间</title>
      <link>https://Sentisfate.github.io/docs/gok328/</link>
      <pubDate>Fri, 08 Jul 2022 08:12:53 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gok328/</guid>
      <description>语法： namespace Yuanzu{ export var arr:[string,number]=[&amp;#39;1&amp;#39;,1] } 命名空间需要导出才能使用 console.log(Yuanzu.arr2);</description>
    </item>
    
    <item>
      <title>工程化</title>
      <link>https://Sentisfate.github.io/docs/gasc2c/</link>
      <pubDate>Fri, 08 Jul 2022 08:06:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gasc2c/</guid>
      <description>pnpm 安装配置**npm install pnpm -g**vite的创建项目 安装vite，**npm install vite -g** vite 创建项目，**pnpm create vite myapp** 安装依赖，**pnpm install** 启动项</description>
    </item>
    
    <item>
      <title>Typescript</title>
      <link>https://Sentisfate.github.io/docs/lungs4/</link>
      <pubDate>Fri, 08 Jul 2022 07:59:44 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lungs4/</guid>
      <description>参考资料 https://ts.nodejs.cn/docs/handbook/intro.html 什么是ts(TypeScript) JavaScript &amp;ndash;网景 微软JSscriptCoffeScript微软TypeScript 强类型语言</description>
    </item>
    
    <item>
      <title>cookie&#43;session&#43;token</title>
      <link>https://Sentisfate.github.io/docs/wocenf/</link>
      <pubDate>Thu, 07 Jul 2022 06:40:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wocenf/</guid>
      <description>cookie 理解 本质是**key**-**value**文本信息，存储在客户端的，用于识别用户信息，**HTTP**本身是无状态的，服务端只知道有HT</description>
    </item>
    
    <item>
      <title>element-ui 表单封装</title>
      <link>https://Sentisfate.github.io/docs/wbihmx/</link>
      <pubDate>Mon, 04 Jul 2022 09:01:47 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/wbihmx/</guid>
      <description>先分析表单组成。 &amp;lt;!--input型--&amp;gt; &amp;lt;el-form-item label=&amp;#34;活动名称&amp;#34; prop=&amp;#34;name&amp;#34;&amp;gt; &amp;lt;el-input v-model=&amp;#34;ruleForm.name&amp;#34;&amp;gt;&amp;lt;/el-input&amp;gt; &amp;lt;/el-form-item&amp;gt; &amp;lt;!--select型--&amp;g</description>
    </item>
    
    <item>
      <title>eChart</title>
      <link>https://Sentisfate.github.io/docs/fwpoki/</link>
      <pubDate>Thu, 30 Jun 2022 14:06:33 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fwpoki/</guid>
      <description>vue 集成 echarts入门 一、集成echarts 安装 **npm install echarts --save** js引入 _**import**_** * **_**as**_** echarts **_**from**_** &#39;echarts/core&#39;;**上面的代码会引入所有的图表和组</description>
    </item>
    
    <item>
      <title>配置SSH</title>
      <link>https://Sentisfate.github.io/docs/ddxwrr/</link>
      <pubDate>Mon, 27 Jun 2022 03:08:30 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ddxwrr/</guid>
      <description>git版本控制工具 码云 github coding 私有服务器 gitlab平台 配置用户信息 检查是否配置成功 ssh密钥配置配置，可以使用ssh密钥下载仓库 到配置到的文件</description>
    </item>
    
    <item>
      <title>vscode上的简单使用</title>
      <link>https://Sentisfate.github.io/docs/ws9c4s/</link>
      <pubDate>Mon, 27 Jun 2022 03:04:31 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ws9c4s/</guid>
      <description>克隆仓库**git clone 仓库地址** **https**** **方式要输用户名和密码 **ssh**方式不用输，但要自己配置密钥 添加项目到暂存区 添加内容到版本库 推送项目</description>
    </item>
    
    <item>
      <title>Vue router</title>
      <link>https://Sentisfate.github.io/docs/ndqwka/</link>
      <pubDate>Wed, 22 Jun 2022 01:12:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/ndqwka/</guid>
      <description>router-link to tag active-class router-view 一、简介 1.什么是Vue-router 是一个vue官方出品的管理组件切换的插件 ？组件切换在访问不同的路径时，显示相应的组件？插件 2</description>
    </item>
    
    <item>
      <title>Array</title>
      <link>https://Sentisfate.github.io/docs/itxt1y/</link>
      <pubDate>Tue, 21 Jun 2022 03:15:52 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/itxt1y/</guid>
      <description>一、常用方法 1.reduce 用于统计 const arr = [1, 1, 2, 3, 4, 3] let count = arr.reduce((pre, cur) =&amp;gt; { if (cur == 1) { pre++ } return pre }, 0) // count = arr.reduce((prev, curr) =&amp;gt; curr === 1 ? prev + 1 : prev, 0); console.log(count) filter push unshift splice concat 2.Array.from 对一个类似数组或可</description>
    </item>
    
    <item>
      <title>Stylus CSS预处理器</title>
      <link>https://Sentisfate.github.io/docs/nwebc0/</link>
      <pubDate>Thu, 16 Jun 2022 06:38:35 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/nwebc0/</guid>
      <description>一、介绍 1.是什么 **stylus**是一个css的预先处理框架，简化了CSS语法，是富于表现力、动态的、健壮的css预处理器。 2.语法 冒号</description>
    </item>
    
    <item>
      <title>js  深入理解</title>
      <link>https://Sentisfate.github.io/docs/gkmrg9/</link>
      <pubDate>Wed, 15 Jun 2022 11:18:14 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/gkmrg9/</guid>
      <description>一、对象 js语言是面向对象的语言，在js程序员看来，万物皆对象。 :::info 对象是一个客观存在，是用代码对客观事物的一种表达。对象的属性就是客观事物的</description>
    </item>
    
    <item>
      <title>Vue脚手架</title>
      <link>https://Sentisfate.github.io/docs/fcud2u/</link>
      <pubDate>Tue, 14 Jun 2022 01:46:43 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/fcud2u/</guid>
      <description>Vue-cli 前端工程化 一、介绍 1.是什么 vue-cli也叫做vue脚手架，它是一个基于vue.js帮助快速开发项目的工具。 2.安装 打开cmd，或者终端</description>
    </item>
    
    <item>
      <title>Vue进阶 生命周期</title>
      <link>https://Sentisfate.github.io/docs/loezxs/</link>
      <pubDate>Fri, 10 Jun 2022 07:35:17 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/loezxs/</guid>
      <description>一. Vue生命周期 1.介绍 vue的生命周期是指vue实例从创建到销毁的全过程, 常用的有4个阶段, 每个阶段有两个生命周期函数.生命周期函数是在</description>
    </item>
    
    <item>
      <title>js如何判断数组是否为空</title>
      <link>https://Sentisfate.github.io/docs/dd5295/</link>
      <pubDate>Fri, 10 Jun 2022 02:59:03 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/dd5295/</guid>
      <description>提出有如下几种判断方法 arr 直接判断 X arr==[] X一直永远为false arr.toString() arr.length&amp;lt;=0 arr==false arr[0] arr==&amp;rsquo;&amp;rsquo; 利用了隐式转换 下面写一个demo来检测一下: // 先来看看空数组是否能转换成</description>
    </item>
    
    <item>
      <title>vue基础</title>
      <link>https://Sentisfate.github.io/docs/yegrea/</link>
      <pubDate>Mon, 06 Jun 2022 02:57:08 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/yegrea/</guid>
      <description>一、vue简介 1.什么是vue :::info vue是一个动态的渐进式的构建用户界面的js框架，遵循MVVM模式 ::: 构建用户界面：将数据转换成界面 渐进式：由</description>
    </item>
    
    <item>
      <title>Mysql 配置文件</title>
      <link>https://Sentisfate.github.io/docs/lm8qk5/</link>
      <pubDate>Thu, 02 Jun 2022 03:35:05 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/lm8qk5/</guid>
      <description>Mysql配置的提取 目的 mysql的配置会经常会动，提取出来，方便以后操作。还可以增加一个debug属性，boolean型，用于调试，显示错</description>
    </item>
    
    <item>
      <title>Express框架应用-实现用户模块</title>
      <link>https://Sentisfate.github.io/docs/espda1/</link>
      <pubDate>Mon, 30 May 2022 07:56:24 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/espda1/</guid>
      <description>一. 需求分析 1 系统框架 选择前后端分离的系统架构 2 具体的业务需求 有一个页面, 可以展示用户的列表 有一个页面, 可以添加用户信息 有一个页面, 可以修改</description>
    </item>
    
    <item>
      <title>Express脚手架</title>
      <link>https://Sentisfate.github.io/docs/sv8zqs/</link>
      <pubDate>Mon, 30 May 2022 01:13:56 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/sv8zqs/</guid>
      <description>语法糖 async和await (ECMAScript7) async 概念 异步的意思 作用 是一个关键字，用处是将函数变为异步函数，异步函数返回的结果是一个promise对象，里面的</description>
    </item>
    
    <item>
      <title>跨域请求</title>
      <link>https://Sentisfate.github.io/docs/aya402/</link>
      <pubDate>Wed, 25 May 2022 13:44:07 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/aya402/</guid>
      <description>产生的原因 先来看一个案例，我们使用vscode 的live server打开一个页面，该页面的代码如下: &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta http-equiv=&amp;#34;X-UA-Compatible&amp;#34; content=&amp;#34;IE=edge&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;ti</description>
    </item>
    
    <item>
      <title>WEB HTML CSS JS</title>
      <link>https://Sentisfate.github.io/docs/klr3a3/</link>
      <pubDate>Wed, 25 May 2022 13:13:41 +0000</pubDate>
      <author>1135643799@qq.com (gisculibur)</author>
      <guid>https://Sentisfate.github.io/docs/klr3a3/</guid>
      <description>HTML 概念 超文本标记语言，主要用于描述一个页面。 操作思想 网页中有很多数据，不同的数据可能需要不同的展示效果，用标签来包裹数据，再通过修改标签的属</description>
    </item>
    
  </channel>
</rss>